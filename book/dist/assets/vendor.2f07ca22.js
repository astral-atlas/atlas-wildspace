var Wc=Object.defineProperty,qc=Object.defineProperties;var Xc=Object.getOwnPropertyDescriptors;var Na=Object.getOwnPropertySymbols;var jc=Object.prototype.hasOwnProperty,Yc=Object.prototype.propertyIsEnumerable;var ka=(i,t,e)=>t in i?Wc(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e,we=(i,t)=>{for(var e in t||(t={}))jc.call(t,e)&&ka(i,e,t[e]);if(Na)for(var e of Na(t))Yc.call(t,e)&&ka(i,e,t[e]);return i},He=(i,t)=>qc(i,Xc(t));const Zc="ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW",wn=()=>{let i="",t=8;for(;t--;)i+=Zc[Math.random()*64|0];return i},Jc={},Qc=[],er=(i,t=Jc,e=Qc)=>({id:wn(),type:i,props:t,children:es(e)}),es=i=>{if(Array.isArray(i))return i.map(es).flat(1);if(!i&&typeof i!="number")return[er("act:null")];switch(typeof i){case"number":case"string":return[er("act:string",{content:i.toString()})];case"object":return[i];default:throw new Error("Unexpected element")}},O_=i=>{const t=wn();return{defaultValue:i,contextId:t,Provider:({value:n,children:r})=>er("act:context",{value:n,contextId:t},r)}},$c=i=>{ns=i};let ns={useState:()=>{throw new Error("Unset global hook")},useEffect:()=>{throw new Error("Unset global hook")},useContext:()=>{throw new Error("Unset global hook")}};const Kc=i=>ns.useState(i),U_=(i,t)=>ns.useEffect(i,t),tu=i=>{const[t]=Kc({current:i});return t},H_=(i,t=[])=>{const{current:e}=tu({isSet:!1,value:null,oldDeps:t});if(!e.isSet)return e.isSet=!0,e.value=i(),e.value;const{oldDeps:n}=e;return t&&n&&(t.length!==n.length||!t.every((r,s)=>r===n[s]))&&(e.value=i(),e.oldDeps=t),e.value},eu={id:wn(),path:[],version:wn(),element:er("act:dead"),children:[],pruned:!0},Ba={path:[],context:new Map},nu={children:[],branch:Ba},iu=(i,{children:t})=>{if(!i.prev)return t.map(a=>({element:a,prev:null}));if(i.ref&&i.ref.id!==i.prev.id)return i.prev.children.map(a=>He(we({},i),{prev:a}));if(i.element===null)return i.prev.children.map(a=>({element:null,prev:a}));const e=new Map(t.filter(a=>a.props.key).map((a,o)=>[a.props.key,o])),n=new Map,r=[];for(let a=0;a<i.prev.children.length;a++){const o=i.prev.children[a],l=e.get(o.element.props.key),c=l!==void 0&&t[l],u=!o.element.props.key&&t[a];c&&!n.has(l)&&c.type===o.element.type?n.set(l,o):u&&!n.has(a)&&u.type===o.element.type?n.set(a,o):r.push({element:null,prev:o})}return[...r,...t.map((a,o)=>({element:a,prev:n.get(o)||null}))]},ru=(i,t)=>{const e=(r,s,a)=>{const{type:o}=s.element||s.prev.element;switch(o){case"act:context":return t.traverse(r,s,a);case"act:string":case"act:null":return nu}switch(typeof o){case"string":return{children:s.element?s.element.children:[],branch:He(we({},a),{path:[...a.path,r.id]})};case"function":return i.traverse(r,s,a)}throw new Error("Don't know how to traverse element of this type")},n=(r,s=Ba)=>{const a=r.prev||{id:wn(),path:s.path};if(r.ref&&r.ref.id!==a.id&&!r.ref.path.includes(a.id))return{prev:r.prev,next:r.prev,diffs:[]};const o=e(a,r,s),c=iu(r,o).map(h=>n(h,He(we({},o.branch),{path:[...o.branch.path,a.id]}))),u=He(we({},a),{version:wn(),element:r.element||r.prev.element,pruned:r.element===null,children:c.map(h=>h.next).filter(h=>!h.pruned)});return{prev:r.prev||eu,next:u,diffs:c}};return{render:n}},su=(i,t)=>i===null||t===null||i.length!==t.length?!1:i.every((e,n)=>e===t[n]),au=i=>{const t=new Map,e=(o,l)=>{let c=0;const u=p=>{const x=g=>typeof g=="function"?g(m.value):g,v=g=>{m.value=x(g),i.scheduleChange(o.ref)},m={value:x(p),setValue:v};return o.values.set(c,m),m};return{useState:p=>{const x=o.values.get(c)||u(p);return c++,[x.value,x.setValue]},useEffect:(p,x=null)=>{const v=o.effects.get(c)||{id:wn(),deps:null,cleanup:null};if(o.effects.set(c,v),su(x,v.deps)){c++;return}const m=()=>{v.cleanup&&v.cleanup(),v.cleanup=p()};v.deps=x,i.scheduleEffect({id:v.id,priority:"sync",run:m}),c++},useContext:p=>{const x=l.context.get(p.contextId);return x?(o.subscriptions.set(p.contextId,x),x.subscribers.set(o.ref.id,o.ref),x.value):p.defaultValue}}},n=(o,l)=>{for(const[,{id:c,cleanup:u}]of o.effects)u&&i.scheduleEffect({id:c,priority:"sync",run:()=>void u()});for(const[,c]of o.subscriptions)c.subscribers.delete(o.ref.id);t.delete(o.ref.id)},r=o=>{const l={ref:o,values:new Map,effects:new Map,subscriptions:new Map};return t.set(o.id,l),l},s=(o,l,c)=>{const u=e(o,c);if($c(u),typeof l.type!="function")throw new Error("Components must be functions");try{const h=l.type(He(we({},l.props),{children:l.children}));return es(h)}catch(h){throw h}};return{traverse:(o,l,c)=>{const u=t.get(o.id)||r(o);return l.element===null?(n(u),{children:[],branch:c}):{children:s(u,l.element||l.prev.element,c),branch:c}}}},ou=i=>{const t=new Map;return{traverse:(n,r,s)=>{const a=r.element||r.prev.element,{contextId:o,value:l}=a.props,c=t.get(n.id)||{contextId:o,subscribers:new Map,value:l};if(t.set(n.id,c),c.value!==l){for(const[u,h]of c.subscribers)i.scheduleChange(h);t.set(n.id,He(we({},c),{value:l}))}return r.element===null&&t.delete(n.id),{children:a.children,branch:He(we({},s),{context:new Map(s.context).set(o,He(we({},c),{value:l}))})}}}},lu=(i,t)=>{let e="idle";const n=new Map,r=l=>{n.set(l.id,l),e!=="pending"&&(t(o),e==="idle"&&(e="pending"))},s=new Map,a=l=>{s.set(l.id,l),e==="idle"&&(e="pending",t(o))},o=()=>{e="working";const l=[...n];n.clear();for(const[u,h]of l)i(h);const c=[...s];s.clear();for(const[u,h]of c)h.run();e="idle"};return{scheduleChange:r,scheduleEffect:a,flushSync:o}},cu=(i,t={})=>{const{onDiff:e=h=>{},scheduleWork:n=h=>setTimeout(h,0)}=t,s=lu(h=>{const f=l.render({ref:h,prev:u});u=f.next,e(f)},n),a=au(s),o=ou(s),l=ru(a,o),c=l.render({element:i,prev:null});let u=c.next;e(c),s.flushSync()},nr=(i,t)=>{const e=new Map,n=Object.keys(i),r=Object.keys(t);for(let s=0;s<n.length;s++){const a=n[s],o=i[a],l=a in t?t[a]:null;o!==l&&e.set(a,{key:a,prev:o,next:l})}for(let s=0;s<r.length;s++){const a=r[s],o=t[a];a in i||e.set(a,{key:a,prev:null,next:o})}return e},uu=(i,t)=>typeof i.type!="string"||i.type==="act:null"?null:i.type==="act:string"?document.createTextNode(""):i.type==="act:context"?null:document.createElementNS(t,i.type),hu=i=>{const t=i.parentNode;t&&t.removeChild(i)},za=(i,t,e=null)=>{for(let n=0;n<t.length;n++){const r=t[t.length-n-1],s=t[t.length-n]||e;(i!==r.parentNode||s&&r.nextSibling!==s)&&i.insertBefore(r,s)}},du=new Set(["ref","key","children"]),fu=(i,{prev:t,next:e})=>{const n=i.style,a=nr(typeof t=="object"&&t||{},typeof e=="object"&&e||{});for(const[o,{next:l}]of a.entries()){const c=typeof l=="string"||typeof l=="number"?l:null;typeof n[o]!="undefined"?n[o]=c:c===null?n.removeProperty(o):n.setProperty(o,c.toString())}},pu=(i,{key:t,prev:e,next:n})=>{const r=t.slice(2).toLowerCase();typeof e=="function"&&i.removeEventListener(r,e),typeof n=="function"&&i.addEventListener(r,n)},mu=(i,{key:t,prev:e,next:n})=>{n===null&&typeof e=="string"?i.removeAttribute(t):typeof n=="string"&&i.setAttribute(t,n)},gu=(i,t)=>{t.key.startsWith("on")?pu(i,t):t.key==="style"?fu(i,t):t.key in i&&!du.has(t.key)&&i instanceof HTMLElement?i[t.key]=t.next:mu(i,t)},xu=(i,t)=>{const e=nr(t.prev.element.props,t.next.element.props);for(const[n,r]of e)gu(i,r)},yu=(i,t)=>{const{content:e}=t.next.element.props;i.textContent=typeof e=="string"?e:""},vu=(i,t)=>{(i instanceof HTMLElement||i instanceof SVGElement)&&xu(i,t),i instanceof Text&&yu(i,t)},_u=(i,t)=>{const e=t.next.element.props.ref;typeof e=="function"?t.prev.pruned?e(i):t.next.pruned&&e(null):e&&typeof e=="object"&&(t.prev.pruned?e.current=i:t.next.pruned&&(e.current=null))},Oa=(i,t=new Map)=>{const e=new Map,n=o=>o.prev.pruned?uu(o.next.element,i):e.get(o.next.id),r=o=>{const l=e.get(o.id);return l?[l]:o.children.map(r).flat(1)},s=o=>{if(o.prev.version===o.next.version)return r(o.next);const l=n(o),c=o.diffs.map(a).flat(1);return l?(_u(l,o),o.next.pruned?(hu(l),[]):(vu(l,o),za(l,c),e.set(o.next.id,l),[l])):c},a=o=>{const l=(o.next||o.prev||o.curr).element,c=t.get(l.type);return c?c.render(o):s(o)};return{render:a}},bu=(i=new Map)=>{const t=Oa("http://www.w3.org/2000/svg");return Oa("http://www.w3.org/1999/xhtml",new Map([...i,["svg",t]]))};/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ua="130",wu=0,Ha=1,Mu=2,Va=1,Su=2,vi=3,_i=0,ie=1,Cn=2,Ga=1,bi=0,wi=1,Wa=2,qa=3,Xa=4,Eu=5,Rn=100,Tu=101,Au=102,ja=103,Ya=104,Lu=200,Cu=201,Ru=202,Pu=203,Za=204,Ja=205,Iu=206,Du=207,Fu=208,Nu=209,ku=210,Bu=0,zu=1,Ou=2,is=3,Uu=4,Hu=5,Vu=6,Gu=7,ir=0,Wu=1,qu=2,Pn=0,Xu=1,ju=2,Yu=3,Zu=4,Ju=5,Qa=300,rs=301,ss=302,$a=303,Ka=304,as=306,os=307,ls=1e3,Me=1001,cs=1002,he=1003,to=1004,eo=1005,Le=1006,Qu=1007,rr=1008,sr=1009,$u=1010,Ku=1011,ar=1012,th=1013,or=1014,Mn=1015,In=1016,eh=1017,nh=1018,ih=1019,Mi=1020,rh=1021,Sn=1022,Ve=1023,sh=1024,ah=1025,Dn=1026,Si=1027,oh=1028,lh=1029,ch=1030,uh=1031,hh=1032,dh=1033,no=33776,io=33777,ro=33778,so=33779,ao=35840,oo=35841,lo=35842,co=35843,fh=36196,uo=37492,ho=37496,ph=37808,mh=37809,gh=37810,xh=37811,yh=37812,vh=37813,_h=37814,bh=37815,wh=37816,Mh=37817,Sh=37818,Eh=37819,Th=37820,Ah=37821,Lh=36492,Ch=37840,Rh=37841,Ph=37842,Ih=37843,Dh=37844,Fh=37845,Nh=37846,kh=37847,Bh=37848,zh=37849,Oh=37850,Uh=37851,Hh=37852,Vh=37853,Gh=2200,Wh=2201,qh=2202,lr=2300,cr=2301,us=2302,Fn=2400,Nn=2401,ur=2402,hs=2500,fo=2501,Xh=0,Ei=3e3,po=3001,jh=3007,Yh=3002,Zh=3003,Jh=3004,Qh=3005,$h=3006,Kh=3200,td=3201,kn=0,ed=1,ds=7680,nd=519,Ti=35044,hr=35048,mo="300 es";class En{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const r=this._listeners[t];if(r!==void 0){const s=r.indexOf(e);s!==-1&&r.splice(s,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const r=n.slice(0);for(let s=0,a=r.length;s<a;s++)r[s].call(this,t);t.target=null}}}const oe=[];for(let i=0;i<256;i++)oe[i]=(i<16?"0":"")+i.toString(16);const fs=Math.PI/180,ps=180/Math.PI;function Ge(){const i=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(oe[i&255]+oe[i>>8&255]+oe[i>>16&255]+oe[i>>24&255]+"-"+oe[t&255]+oe[t>>8&255]+"-"+oe[t>>16&15|64]+oe[t>>24&255]+"-"+oe[e&63|128]+oe[e>>8&255]+"-"+oe[e>>16&255]+oe[e>>24&255]+oe[n&255]+oe[n>>8&255]+oe[n>>16&255]+oe[n>>24&255]).toUpperCase()}function Se(i,t,e){return Math.max(t,Math.min(e,i))}function id(i,t){return(i%t+t)%t}function ms(i,t,e){return(1-e)*i+e*t}function go(i){return(i&i-1)==0&&i!==0}function rd(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}class rt{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return e!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return e!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),s=this.x-t.x,a=this.y-t.y;return this.x=s*n-a*r+t.x,this.y=s*r+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}rt.prototype.isVector2=!0;class le{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,s,a,o,l,c){const u=this.elements;return u[0]=t,u[1]=r,u[2]=o,u[3]=e,u[4]=s,u[5]=l,u[6]=n,u[7]=a,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,s=this.elements,a=n[0],o=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],x=r[0],v=r[3],m=r[6],g=r[1],M=r[4],C=r[7],T=r[2],y=r[5],D=r[8];return s[0]=a*x+o*g+l*T,s[3]=a*v+o*M+l*y,s[6]=a*m+o*C+l*D,s[1]=c*x+u*g+h*T,s[4]=c*v+u*M+h*y,s[7]=c*m+u*C+h*D,s[2]=f*x+d*g+p*T,s[5]=f*v+d*M+p*y,s[8]=f*m+d*C+p*D,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],s=t[3],a=t[4],o=t[5],l=t[6],c=t[7],u=t[8];return e*a*u-e*o*c-n*s*u+n*o*l+r*s*c-r*a*l}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],s=t[3],a=t[4],o=t[5],l=t[6],c=t[7],u=t[8],h=u*a-o*c,f=o*l-u*s,d=c*s-a*l,p=e*h+n*f+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/p;return t[0]=h*x,t[1]=(r*c-u*n)*x,t[2]=(o*n-r*a)*x,t[3]=f*x,t[4]=(u*e-r*l)*x,t[5]=(r*s-o*e)*x,t[6]=d*x,t[7]=(n*l-c*e)*x,t[8]=(a*e-n*s)*x,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*a+c*o)+a+t,-r*c,r*l,-r*(-c*a+l*o)+o+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),r=this.elements,s=r[0],a=r[3],o=r[6],l=r[1],c=r[4],u=r[7];return r[0]=e*s+n*l,r[3]=e*a+n*c,r[6]=e*o+n*u,r[1]=-n*s+e*l,r[4]=-n*a+e*c,r[7]=-n*o+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<9;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}le.prototype.isMatrix3=!0;let Bn;class zn{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement=="undefined")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Bn===void 0&&(Bn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Bn.width=t.width,Bn.height=t.height;const n=Bn.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Bn}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let sd=0;class ce extends En{constructor(t=ce.DEFAULT_IMAGE,e=ce.DEFAULT_MAPPING,n=Me,r=Me,s=Le,a=rr,o=Ve,l=sr,c=1,u=Ei){super();Object.defineProperty(this,"id",{value:sd++}),this.uuid=Ge(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new rt(0,0),this.repeat=new rt(1,1),this.center=new rt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new le,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const r=this.image;if(r.uuid===void 0&&(r.uuid=Ge()),!e&&t.images[r.uuid]===void 0){let s;if(Array.isArray(r)){s=[];for(let a=0,o=r.length;a<o;a++)r[a].isDataTexture?s.push(gs(r[a].image)):s.push(gs(r[a]))}else s=gs(r);t.images[r.uuid]={uuid:r.uuid,url:s}}n.image=r.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Qa)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ls:t.x=t.x-Math.floor(t.x);break;case Me:t.x=t.x<0?0:1;break;case cs:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case ls:t.y=t.y-Math.floor(t.y);break;case Me:t.y=t.y<0?0:1;break;case cs:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&this.version++}}ce.DEFAULT_IMAGE=void 0;ce.DEFAULT_MAPPING=Qa;ce.prototype.isTexture=!0;function gs(i){return typeof HTMLImageElement!="undefined"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&i instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&i instanceof ImageBitmap?zn.getDataURL(i):i.data?{data:Array.prototype.slice.call(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class Gt{constructor(t=0,e=0,n=0,r=1){this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t,e){return e!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return e!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,s=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*r+a[12]*s,this.y=a[1]*e+a[5]*n+a[9]*r+a[13]*s,this.z=a[2]*e+a[6]*n+a[10]*r+a[14]*s,this.w=a[3]*e+a[7]*n+a[11]*r+a[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,s;const a=.01,o=.1,l=t.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],x=l[2],v=l[6],m=l[10];if(Math.abs(u-f)<a&&Math.abs(h-x)<a&&Math.abs(p-v)<a){if(Math.abs(u+f)<o&&Math.abs(h+x)<o&&Math.abs(p+v)<o&&Math.abs(c+d+m-3)<o)return this.set(1,0,0,0),this;e=Math.PI;const M=(c+1)/2,C=(d+1)/2,T=(m+1)/2,y=(u+f)/4,D=(h+x)/4,z=(p+v)/4;return M>C&&M>T?M<a?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(M),r=y/n,s=D/n):C>T?C<a?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(C),n=y/r,s=z/r):T<a?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(T),n=D/s,r=z/s),this.set(n,r,s,e),this}let g=Math.sqrt((v-p)*(v-p)+(h-x)*(h-x)+(f-u)*(f-u));return Math.abs(g)<.001&&(g=1),this.x=(v-p)/g,this.y=(h-x)/g,this.z=(f-u)/g,this.w=Math.acos((c+d+m-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}Gt.prototype.isVector4=!0;class Ze extends En{constructor(t,e,n={}){super();this.width=t,this.height=e,this.depth=1,this.scissor=new Gt(0,0,t,e),this.scissorTest=!1,this.viewport=new Gt(0,0,t,e),this.texture=new ce(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={width:t,height:e,depth:1},this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Le,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.image=we({},this.texture.image),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Ze.prototype.isWebGLRenderTarget=!0;class ad extends Ze{constructor(t,e,n){super(t,e);const r=this.texture;this.texture=[];for(let s=0;s<n;s++)this.texture[s]=r.clone()}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let r=0,s=this.texture.length;r<s;r++)this.texture[r].image.width=t,this.texture[r].image.height=e,this.texture[r].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone();return this}}ad.prototype.isWebGLMultipleRenderTargets=!0;class xo extends Ze{constructor(t,e,n){super(t,e,n);this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}xo.prototype.isWebGLMultisampleRenderTarget=!0;class _e{constructor(t=0,e=0,n=0,r=1){this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,r)}static slerpFlat(t,e,n,r,s,a,o){let l=n[r+0],c=n[r+1],u=n[r+2],h=n[r+3];const f=s[a+0],d=s[a+1],p=s[a+2],x=s[a+3];if(o===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h;return}if(o===1){t[e+0]=f,t[e+1]=d,t[e+2]=p,t[e+3]=x;return}if(h!==x||l!==f||c!==d||u!==p){let v=1-o;const m=l*f+c*d+u*p+h*x,g=m>=0?1:-1,M=1-m*m;if(M>Number.EPSILON){const T=Math.sqrt(M),y=Math.atan2(T,m*g);v=Math.sin(v*y)/T,o=Math.sin(o*y)/T}const C=o*g;if(l=l*v+f*C,c=c*v+d*C,u=u*v+p*C,h=h*v+x*C,v===1-o){const T=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=T,c*=T,u*=T,h*=T}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,r,s,a){const o=n[r],l=n[r+1],c=n[r+2],u=n[r+3],h=s[a],f=s[a+1],d=s[a+2],p=s[a+3];return t[e]=o*p+u*h+l*d-c*f,t[e+1]=l*p+u*f+c*h-o*d,t[e+2]=c*p+u*d+o*f-l*h,t[e+3]=u*p-o*h-l*f-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,s=t._z,a=t._order,o=Math.cos,l=Math.sin,c=o(n/2),u=o(r/2),h=o(s/2),f=l(n/2),d=l(r/2),p=l(s/2);switch(a){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],s=e[8],a=e[1],o=e[5],l=e[9],c=e[2],u=e[6],h=e[10],f=n+o+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(a-r)*d}else if(n>o&&n>h){const d=2*Math.sqrt(1+n-o-h);this._w=(u-l)/d,this._x=.25*d,this._y=(r+a)/d,this._z=(s+c)/d}else if(o>h){const d=2*Math.sqrt(1+o-n-h);this._w=(s-c)/d,this._x=(r+a)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-o);this._w=(a-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Se(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return e!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,s=t._z,a=t._w,o=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+a*o+r*c-s*l,this._y=r*u+a*l+s*o-n*c,this._z=s*u+a*c+n*l-r*o,this._w=a*u-n*o-r*l-s*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,r=this._y,s=this._z,a=this._w;let o=a*t._w+n*t._x+r*t._y+s*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=n,this._y=r,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const d=1-e;return this._w=d*a+e*this._w,this._x=d*n+e*this._x,this._y=d*r+e*this._y,this._z=d*s+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,o),h=Math.sin((1-e)*u)/c,f=Math.sin(e*u)/c;return this._w=a*h+this._w*f,this._x=n*h+this._x*f,this._y=r*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}_e.prototype.isQuaternion=!0;class A{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return e!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return e!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return e!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(yo.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(yo.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*r,this.y=s[1]*e+s[4]*n+s[7]*r,this.z=s[2]*e+s[5]*n+s[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,s=t.elements,a=1/(s[3]*e+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*r+s[12])*a,this.y=(s[1]*e+s[5]*n+s[9]*r+s[13])*a,this.z=(s[2]*e+s[6]*n+s[10]*r+s[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,s=t.x,a=t.y,o=t.z,l=t.w,c=l*e+a*r-o*n,u=l*n+o*e-s*r,h=l*r+s*n-a*e,f=-s*e-a*n-o*r;return this.x=c*l+f*-s+u*-o-h*-a,this.y=u*l+f*-a+h*-s-c*-o,this.z=h*l+f*-o+c*-a-u*-s,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*r,this.y=s[1]*e+s[5]*n+s[9]*r,this.z=s[2]*e+s[6]*n+s[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return e!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,s=t.z,a=e.x,o=e.y,l=e.z;return this.x=r*l-s*o,this.y=s*a-n*l,this.z=n*o-r*a,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return xs.copy(this).projectOnVector(t),this.sub(xs)}reflect(t){return this.sub(xs.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Se(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}A.prototype.isVector3=!0;const xs=new A,yo=new _e;class Fe{constructor(t=new A(1/0,1/0,1/0),e=new A(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=t.length;l<c;l+=3){const u=t[l],h=t[l+1],f=t[l+2];u<e&&(e=u),h<n&&(n=h),f<r&&(r=f),u>s&&(s=u),h>a&&(a=h),f>o&&(o=f)}return this.min.set(e,n,r),this.max.set(s,a,o),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=t.count;l<c;l++){const u=t.getX(l),h=t.getY(l),f=t.getZ(l);u<e&&(e=u),h<n&&(n=h),f<r&&(r=f),u>s&&(s=u),h>a&&(a=h),f>o&&(o=f)}return this.min.set(e,n,r),this.max.set(s,a,o),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ai.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;e!==void 0&&(e.boundingBox===null&&e.computeBoundingBox(),ys.copy(e.boundingBox),ys.applyMatrix4(t.matrixWorld),this.union(ys));const n=t.children;for(let r=0,s=n.length;r<s;r++)this.expandByObject(n[r]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ai),Ai.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Li),dr.subVectors(this.max,Li),On.subVectors(t.a,Li),Un.subVectors(t.b,Li),Hn.subVectors(t.c,Li),rn.subVectors(Un,On),sn.subVectors(Hn,Un),Tn.subVectors(On,Hn);let e=[0,-rn.z,rn.y,0,-sn.z,sn.y,0,-Tn.z,Tn.y,rn.z,0,-rn.x,sn.z,0,-sn.x,Tn.z,0,-Tn.x,-rn.y,rn.x,0,-sn.y,sn.x,0,-Tn.y,Tn.x,0];return!vs(e,On,Un,Hn,dr)||(e=[1,0,0,0,1,0,0,0,1],!vs(e,On,Un,Hn,dr))?!1:(fr.crossVectors(rn,sn),e=[fr.x,fr.y,fr.z],vs(e,On,Un,Hn,dr))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ai.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(Ai).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Je[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Je[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Je[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Je[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Je[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Je[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Je[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Je[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Je),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Fe.prototype.isBox3=!0;const Je=[new A,new A,new A,new A,new A,new A,new A,new A],Ai=new A,ys=new Fe,On=new A,Un=new A,Hn=new A,rn=new A,sn=new A,Tn=new A,Li=new A,dr=new A,fr=new A,An=new A;function vs(i,t,e,n,r){for(let s=0,a=i.length-3;s<=a;s+=3){An.fromArray(i,s);const o=r.x*Math.abs(An.x)+r.y*Math.abs(An.y)+r.z*Math.abs(An.z),l=t.dot(An),c=e.dot(An),u=n.dot(An);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>o)return!1}return!0}const od=new Fe,vo=new A,_s=new A,bs=new A;class Vn{constructor(t=new A,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):od.setFromPoints(t).getCenter(n);let r=0;for(let s=0,a=t.length;s<a;s++)r=Math.max(r,n.distanceToSquared(t[s]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){bs.subVectors(t,this.center);const e=bs.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),r=(n-this.radius)*.5;this.center.add(bs.multiplyScalar(r/n)),this.radius+=r}return this}union(t){return _s.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(vo.copy(t.center).add(_s)),this.expandByPoint(vo.copy(t.center).sub(_s)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Qe=new A,ws=new A,pr=new A,an=new A,Ms=new A,mr=new A,Ss=new A;class Gn{constructor(t=new A,e=new A(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Qe)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Qe.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Qe.copy(this.direction).multiplyScalar(e).add(this.origin),Qe.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){ws.copy(t).add(e).multiplyScalar(.5),pr.copy(e).sub(t).normalize(),an.copy(this.origin).sub(ws);const s=t.distanceTo(e)*.5,a=-this.direction.dot(pr),o=an.dot(this.direction),l=-an.dot(pr),c=an.lengthSq(),u=Math.abs(1-a*a);let h,f,d,p;if(u>0)if(h=a*l-o,f=a*o-l,p=s*u,h>=0)if(f>=-p)if(f<=p){const x=1/u;h*=x,f*=x,d=h*(h+a*f+2*o)+f*(a*h+f+2*l)+c}else f=s,h=Math.max(0,-(a*f+o)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(a*f+o)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-a*s+o)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(a*s+o)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=a>0?-s:s,h=Math.max(0,-(a*f+o)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),r&&r.copy(pr).multiplyScalar(f).add(ws),d}intersectSphere(t,e){Qe.subVectors(t.center,this.origin);const n=Qe.dot(this.direction),r=Qe.dot(Qe)-n*n,s=t.radius*t.radius;if(r>s)return null;const a=Math.sqrt(s-r),o=n-a,l=n+a;return o<0&&l<0?null:o<0?this.at(l,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,s,a,o,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(t.min.x-f.x)*c,r=(t.max.x-f.x)*c):(n=(t.max.x-f.x)*c,r=(t.min.x-f.x)*c),u>=0?(s=(t.min.y-f.y)*u,a=(t.max.y-f.y)*u):(s=(t.max.y-f.y)*u,a=(t.min.y-f.y)*u),n>a||s>r||((s>n||n!==n)&&(n=s),(a<r||r!==r)&&(r=a),h>=0?(o=(t.min.z-f.z)*h,l=(t.max.z-f.z)*h):(o=(t.max.z-f.z)*h,l=(t.min.z-f.z)*h),n>l||o>r)||((o>n||n!==n)&&(n=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(n>=0?n:r,e)}intersectsBox(t){return this.intersectBox(t,Qe)!==null}intersectTriangle(t,e,n,r,s){Ms.subVectors(e,t),mr.subVectors(n,t),Ss.crossVectors(Ms,mr);let a=this.direction.dot(Ss),o;if(a>0){if(r)return null;o=1}else if(a<0)o=-1,a=-a;else return null;an.subVectors(this.origin,t);const l=o*this.direction.dot(mr.crossVectors(an,mr));if(l<0)return null;const c=o*this.direction.dot(Ms.cross(an));if(c<0||l+c>a)return null;const u=-o*an.dot(Ss);return u<0?null:this.at(u/a,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class vt{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,s,a,o,l,c,u,h,f,d,p,x,v){const m=this.elements;return m[0]=t,m[4]=e,m[8]=n,m[12]=r,m[1]=s,m[5]=a,m[9]=o,m[13]=l,m[2]=c,m[6]=u,m[10]=h,m[14]=f,m[3]=d,m[7]=p,m[11]=x,m[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new vt().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/Wn.setFromMatrixColumn(t,0).length(),s=1/Wn.setFromMatrixColumn(t,1).length(),a=1/Wn.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,s=t.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(t.order==="XYZ"){const f=a*u,d=a*h,p=o*u,x=o*h;e[0]=l*u,e[4]=-l*h,e[8]=c,e[1]=d+p*c,e[5]=f-x*c,e[9]=-o*l,e[2]=x-f*c,e[6]=p+d*c,e[10]=a*l}else if(t.order==="YXZ"){const f=l*u,d=l*h,p=c*u,x=c*h;e[0]=f+x*o,e[4]=p*o-d,e[8]=a*c,e[1]=a*h,e[5]=a*u,e[9]=-o,e[2]=d*o-p,e[6]=x+f*o,e[10]=a*l}else if(t.order==="ZXY"){const f=l*u,d=l*h,p=c*u,x=c*h;e[0]=f-x*o,e[4]=-a*h,e[8]=p+d*o,e[1]=d+p*o,e[5]=a*u,e[9]=x-f*o,e[2]=-a*c,e[6]=o,e[10]=a*l}else if(t.order==="ZYX"){const f=a*u,d=a*h,p=o*u,x=o*h;e[0]=l*u,e[4]=p*c-d,e[8]=f*c+x,e[1]=l*h,e[5]=x*c+f,e[9]=d*c-p,e[2]=-c,e[6]=o*l,e[10]=a*l}else if(t.order==="YZX"){const f=a*l,d=a*c,p=o*l,x=o*c;e[0]=l*u,e[4]=x-f*h,e[8]=p*h+d,e[1]=h,e[5]=a*u,e[9]=-o*u,e[2]=-c*u,e[6]=d*h+p,e[10]=f-x*h}else if(t.order==="XZY"){const f=a*l,d=a*c,p=o*l,x=o*c;e[0]=l*u,e[4]=-h,e[8]=c*u,e[1]=f*h+x,e[5]=a*u,e[9]=d*h-p,e[2]=p*h-d,e[6]=o*u,e[10]=x*h+f}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(ld,t,cd)}lookAt(t,e,n){const r=this.elements;return Ee.subVectors(t,e),Ee.lengthSq()===0&&(Ee.z=1),Ee.normalize(),on.crossVectors(n,Ee),on.lengthSq()===0&&(Math.abs(n.z)===1?Ee.x+=1e-4:Ee.z+=1e-4,Ee.normalize(),on.crossVectors(n,Ee)),on.normalize(),gr.crossVectors(Ee,on),r[0]=on.x,r[4]=gr.x,r[8]=Ee.x,r[1]=on.y,r[5]=gr.y,r[9]=Ee.y,r[2]=on.z,r[6]=gr.z,r[10]=Ee.z,this}multiply(t,e){return e!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,s=this.elements,a=n[0],o=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],x=n[6],v=n[10],m=n[14],g=n[3],M=n[7],C=n[11],T=n[15],y=r[0],D=r[4],z=r[8],H=r[12],X=r[1],k=r[5],Z=r[9],N=r[13],O=r[2],P=r[6],R=r[10],V=r[14],Y=r[3],q=r[7],et=r[11],b=r[15];return s[0]=a*y+o*X+l*O+c*Y,s[4]=a*D+o*k+l*P+c*q,s[8]=a*z+o*Z+l*R+c*et,s[12]=a*H+o*N+l*V+c*b,s[1]=u*y+h*X+f*O+d*Y,s[5]=u*D+h*k+f*P+d*q,s[9]=u*z+h*Z+f*R+d*et,s[13]=u*H+h*N+f*V+d*b,s[2]=p*y+x*X+v*O+m*Y,s[6]=p*D+x*k+v*P+m*q,s[10]=p*z+x*Z+v*R+m*et,s[14]=p*H+x*N+v*V+m*b,s[3]=g*y+M*X+C*O+T*Y,s[7]=g*D+M*k+C*P+T*q,s[11]=g*z+M*Z+C*R+T*et,s[15]=g*H+M*N+C*V+T*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],s=t[12],a=t[1],o=t[5],l=t[9],c=t[13],u=t[2],h=t[6],f=t[10],d=t[14],p=t[3],x=t[7],v=t[11],m=t[15];return p*(+s*l*h-r*c*h-s*o*f+n*c*f+r*o*d-n*l*d)+x*(+e*l*d-e*c*f+s*a*f-r*a*d+r*c*u-s*l*u)+v*(+e*c*h-e*o*d-s*a*h+n*a*d+s*o*u-n*c*u)+m*(-r*o*u-e*l*h+e*o*f+r*a*h-n*a*f+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],s=t[3],a=t[4],o=t[5],l=t[6],c=t[7],u=t[8],h=t[9],f=t[10],d=t[11],p=t[12],x=t[13],v=t[14],m=t[15],g=h*v*c-x*f*c+x*l*d-o*v*d-h*l*m+o*f*m,M=p*f*c-u*v*c-p*l*d+a*v*d+u*l*m-a*f*m,C=u*x*c-p*h*c+p*o*d-a*x*d-u*o*m+a*h*m,T=p*h*l-u*x*l-p*o*f+a*x*f+u*o*v-a*h*v,y=e*g+n*M+r*C+s*T;if(y===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/y;return t[0]=g*D,t[1]=(x*f*s-h*v*s-x*r*d+n*v*d+h*r*m-n*f*m)*D,t[2]=(o*v*s-x*l*s+x*r*c-n*v*c-o*r*m+n*l*m)*D,t[3]=(h*l*s-o*f*s-h*r*c+n*f*c+o*r*d-n*l*d)*D,t[4]=M*D,t[5]=(u*v*s-p*f*s+p*r*d-e*v*d-u*r*m+e*f*m)*D,t[6]=(p*l*s-a*v*s-p*r*c+e*v*c+a*r*m-e*l*m)*D,t[7]=(a*f*s-u*l*s+u*r*c-e*f*c-a*r*d+e*l*d)*D,t[8]=C*D,t[9]=(p*h*s-u*x*s-p*n*d+e*x*d+u*n*m-e*h*m)*D,t[10]=(a*x*s-p*o*s+p*n*c-e*x*c-a*n*m+e*o*m)*D,t[11]=(u*o*s-a*h*s-u*n*c+e*h*c+a*n*d-e*o*d)*D,t[12]=T*D,t[13]=(u*x*r-p*h*r+p*n*f-e*x*f-u*n*v+e*h*v)*D,t[14]=(p*o*r-a*x*r-p*n*l+e*x*l+a*n*v-e*o*v)*D,t[15]=(a*h*r-u*o*r+u*n*l-e*h*l-a*n*f+e*o*f)*D,this}scale(t){const e=this.elements,n=t.x,r=t.y,s=t.z;return e[0]*=n,e[4]*=r,e[8]*=s,e[1]*=n,e[5]*=r,e[9]*=s,e[2]*=n,e[6]*=r,e[10]*=s,e[3]*=n,e[7]*=r,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),s=1-n,a=t.x,o=t.y,l=t.z,c=s*a,u=s*o;return this.set(c*a+n,c*o-r*l,c*l+r*o,0,c*o+r*l,u*o+n,u*l-r*a,0,c*l-r*o,u*l+r*a,s*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,r,s,a){return this.set(1,n,s,0,t,1,a,0,e,r,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,s=e._x,a=e._y,o=e._z,l=e._w,c=s+s,u=a+a,h=o+o,f=s*c,d=s*u,p=s*h,x=a*u,v=a*h,m=o*h,g=l*c,M=l*u,C=l*h,T=n.x,y=n.y,D=n.z;return r[0]=(1-(x+m))*T,r[1]=(d+C)*T,r[2]=(p-M)*T,r[3]=0,r[4]=(d-C)*y,r[5]=(1-(f+m))*y,r[6]=(v+g)*y,r[7]=0,r[8]=(p+M)*D,r[9]=(v-g)*D,r[10]=(1-(f+x))*D,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let s=Wn.set(r[0],r[1],r[2]).length();const a=Wn.set(r[4],r[5],r[6]).length(),o=Wn.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),t.x=r[12],t.y=r[13],t.z=r[14],Ne.copy(this);const c=1/s,u=1/a,h=1/o;return Ne.elements[0]*=c,Ne.elements[1]*=c,Ne.elements[2]*=c,Ne.elements[4]*=u,Ne.elements[5]*=u,Ne.elements[6]*=u,Ne.elements[8]*=h,Ne.elements[9]*=h,Ne.elements[10]*=h,e.setFromRotationMatrix(Ne),n.x=s,n.y=a,n.z=o,this}makePerspective(t,e,n,r,s,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,l=2*s/(e-t),c=2*s/(n-r),u=(e+t)/(e-t),h=(n+r)/(n-r),f=-(a+s)/(a-s),d=-2*a*s/(a-s);return o[0]=l,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,r,s,a){const o=this.elements,l=1/(e-t),c=1/(n-r),u=1/(a-s),h=(e+t)*l,f=(n+r)*c,d=(a+s)*u;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<16;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}vt.prototype.isMatrix4=!0;const Wn=new A,Ne=new vt,ld=new A(0,0,0),cd=new A(1,1,1),on=new A,gr=new A,Ee=new A,_o=new vt,bo=new _e;class qn{constructor(t=0,e=0,n=0,r=qn.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r=this._order){return this._x=t,this._y=e,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const r=t.elements,s=r[0],a=r[4],o=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],d=r[10];switch(e){case"XYZ":this._y=Math.asin(Se(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Se(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(Se(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Se(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(Se(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-Se(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return _o.makeRotationFromQuaternion(t),this.setFromRotationMatrix(_o,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return bo.setFromEuler(this),this.setFromQuaternion(bo,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new A(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}qn.prototype.isEuler=!0;qn.DefaultOrder="XYZ";qn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ud{constructor(){this.mask=1|0}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=4294967295|0}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!=0}}let hd=0;const wo=new A,Xn=new _e,$e=new vt,xr=new A,Ci=new A,dd=new A,fd=new _e,Mo=new A(1,0,0),So=new A(0,1,0),Eo=new A(0,0,1),pd={type:"added"},To={type:"removed"};class zt extends En{constructor(){super();Object.defineProperty(this,"id",{value:hd++}),this.uuid=Ge(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=zt.DefaultUp.clone();const t=new A,e=new qn,n=new _e,r=new A(1,1,1);function s(){n.setFromEuler(e,!1)}function a(){e.setFromQuaternion(n,void 0,!1)}e._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new vt},normalMatrix:{value:new le}}),this.matrix=new vt,this.matrixWorld=new vt,this.matrixAutoUpdate=zt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ud,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Xn.setFromAxisAngle(t,e),this.quaternion.multiply(Xn),this}rotateOnWorldAxis(t,e){return Xn.setFromAxisAngle(t,e),this.quaternion.premultiply(Xn),this}rotateX(t){return this.rotateOnAxis(Mo,t)}rotateY(t){return this.rotateOnAxis(So,t)}rotateZ(t){return this.rotateOnAxis(Eo,t)}translateOnAxis(t,e){return wo.copy(t).applyQuaternion(this.quaternion),this.position.add(wo.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Mo,t)}translateY(t){return this.translateOnAxis(So,t)}translateZ(t){return this.translateOnAxis(Eo,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4($e.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?xr.copy(t):xr.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Ci.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$e.lookAt(Ci,xr,this.up):$e.lookAt(xr,Ci,this.up),this.quaternion.setFromRotationMatrix($e),r&&($e.extractRotation(r.matrixWorld),Xn.setFromRotationMatrix($e),this.quaternion.premultiply(Xn.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(pd)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(To)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(To)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),$e.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),$e.multiply(t.parent.matrixWorld)),t.applyMatrix4($e),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const a=this.children[n].getObjectByProperty(t,e);if(a!==void 0)return a}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ci,t,dd),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ci,fd,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(t.shapes,h)}else s(t.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(s(t.materials,this.material[l]));r.material=o}else r.material=s(t.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(s(t.animations,l))}}if(e){const o=a(t.geometries),l=a(t.materials),c=a(t.textures),u=a(t.images),h=a(t.shapes),f=a(t.skeletons),d=a(t.animations);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d)}return n.object=r,n;function a(o){const l=[];for(const c in o){const u=o[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const r=t.children[n];this.add(r.clone())}return this}}zt.DefaultUp=new A(0,1,0);zt.DefaultMatrixAutoUpdate=!0;zt.prototype.isObject3D=!0;const ke=new A,Ke=new A,Es=new A,tn=new A,jn=new A,Yn=new A,Ao=new A,Ts=new A,As=new A,Ls=new A;class ee{constructor(t=new A,e=new A,n=new A){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,r){r.subVectors(n,e),ke.subVectors(t,e),r.cross(ke);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(t,e,n,r,s){ke.subVectors(r,e),Ke.subVectors(n,e),Es.subVectors(t,e);const a=ke.dot(ke),o=ke.dot(Ke),l=ke.dot(Es),c=Ke.dot(Ke),u=Ke.dot(Es),h=a*c-o*o;if(h===0)return s.set(-2,-1,-1);const f=1/h,d=(c*l-o*u)*f,p=(a*u-o*l)*f;return s.set(1-d-p,p,d)}static containsPoint(t,e,n,r){return this.getBarycoord(t,e,n,r,tn),tn.x>=0&&tn.y>=0&&tn.x+tn.y<=1}static getUV(t,e,n,r,s,a,o,l){return this.getBarycoord(t,e,n,r,tn),l.set(0,0),l.addScaledVector(s,tn.x),l.addScaledVector(a,tn.y),l.addScaledVector(o,tn.z),l}static isFrontFacing(t,e,n,r){return ke.subVectors(n,e),Ke.subVectors(t,e),ke.cross(Ke).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ke.subVectors(this.c,this.b),Ke.subVectors(this.a,this.b),ke.cross(Ke).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ee.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ee.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,s){return ee.getUV(t,this.a,this.b,this.c,e,n,r,s)}containsPoint(t){return ee.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ee.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,r=this.b,s=this.c;let a,o;jn.subVectors(r,n),Yn.subVectors(s,n),Ts.subVectors(t,n);const l=jn.dot(Ts),c=Yn.dot(Ts);if(l<=0&&c<=0)return e.copy(n);As.subVectors(t,r);const u=jn.dot(As),h=Yn.dot(As);if(u>=0&&h<=u)return e.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return a=l/(l-u),e.copy(n).addScaledVector(jn,a);Ls.subVectors(t,s);const d=jn.dot(Ls),p=Yn.dot(Ls);if(p>=0&&d<=p)return e.copy(s);const x=d*c-l*p;if(x<=0&&c>=0&&p<=0)return o=c/(c-p),e.copy(n).addScaledVector(Yn,o);const v=u*p-d*h;if(v<=0&&h-u>=0&&d-p>=0)return Ao.subVectors(s,r),o=(h-u)/(h-u+(d-p)),e.copy(r).addScaledVector(Ao,o);const m=1/(v+x+f);return a=x*m,o=f*m,e.copy(n).addScaledVector(jn,a).addScaledVector(Yn,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let md=0;class de extends En{constructor(){super();Object.defineProperty(this,"id",{value:md++}),this.uuid=Ge(),this.name="",this.type="Material",this.fog=!0,this.blending=wi,this.side=_i,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Za,this.blendDst=Ja,this.blendEquation=Rn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=is,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=nd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ds,this.stencilZFail=ds,this.stencilZPass=ds,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}onBuild(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Ga;continue}const r=this[e];if(r===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==wi&&(n.blending=this.blending),this.side!==_i&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function r(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(e){const s=r(t.textures),a=r(t.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const r=e.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=e[s].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}de.prototype.isMaterial=!0;const Lo={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Be={h:0,s:0,l:0},yr={h:0,s:0,l:0};function Cs(i,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?i+(t-i)*6*e:e<1/2?t:e<2/3?i+(t-i)*6*(2/3-e):i}function Rs(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function Ps(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}class pt{constructor(t,e,n){return e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=id(t,1),e=Se(e,0,1),n=Se(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,s=2*n-r;this.r=Cs(s,r,t+1/3),this.g=Cs(s,r,t),this.b=Cs(s,r,t-1/3)}return this}setStyle(t){function e(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const s=n[1],a=n[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,e(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,e(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const o=parseFloat(r[1])/360,l=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return e(r[4]),this.setHSL(o,l,c)}break}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=n[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Lo[t.toLowerCase()];return e!==void 0?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Rs(t.r),this.g=Rs(t.g),this.b=Rs(t.b),this}copyLinearToSRGB(t){return this.r=Ps(t.r),this.g=Ps(t.g),this.b=Ps(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,n=this.g,r=this.b,s=Math.max(e,n,r),a=Math.min(e,n,r);let o,l;const c=(a+s)/2;if(a===s)o=0,l=0;else{const u=s-a;switch(l=c<=.5?u/(s+a):u/(2-s-a),s){case e:o=(n-r)/u+(n<r?6:0);break;case n:o=(r-e)/u+2;break;case r:o=(e-n)/u+4;break}o/=6}return t.h=o,t.s=l,t.l=c,t}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(t,e,n){return this.getHSL(Be),Be.h+=t,Be.s+=e,Be.l+=n,this.setHSL(Be.h,Be.s,Be.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Be),t.getHSL(yr);const n=ms(Be.h,yr.h,e),r=ms(Be.s,yr.s,e),s=ms(Be.l,yr.l,e);return this.setHSL(n,r,s),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),t.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}pt.NAMES=Lo;pt.prototype.isColor=!0;pt.prototype.r=1;pt.prototype.g=1;pt.prototype.b=1;class Is extends de{constructor(t){super();this.type="MeshBasicMaterial",this.color=new pt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ir,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this}}Is.prototype.isMeshBasicMaterial=!0;const qt=new A,vr=new rt;class re{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=Ti,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[t+r]=e.array[n+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let r=0,s=t.length;r<s;r++){let a=t[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new pt),e[n++]=a.r,e[n++]=a.g,e[n++]=a.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let r=0,s=t.length;r<s;r++){let a=t[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new rt),e[n++]=a.x,e[n++]=a.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let r=0,s=t.length;r<s;r++){let a=t[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new A),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let r=0,s=t.length;r<s;r++){let a=t[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new Gt),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z,e[n++]=a.w}return this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)vr.fromBufferAttribute(this,e),vr.applyMatrix3(t),this.setXY(e,vr.x,vr.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)qt.fromBufferAttribute(this,e),qt.applyMatrix3(t),this.setXYZ(e,qt.x,qt.y,qt.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)qt.x=this.getX(e),qt.y=this.getY(e),qt.z=this.getZ(e),qt.applyMatrix4(t),this.setXYZ(e,qt.x,qt.y,qt.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)qt.x=this.getX(e),qt.y=this.getY(e),qt.z=this.getZ(e),qt.applyNormalMatrix(t),this.setXYZ(e,qt.x,qt.y,qt.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)qt.x=this.getX(e),qt.y=this.getY(e),qt.z=this.getZ(e),qt.transformDirection(t),this.setXYZ(e,qt.x,qt.y,qt.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,s){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Ti&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}}re.prototype.isBufferAttribute=!0;class Co extends re{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Ro extends re{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class gd extends re{constructor(t,e,n){super(new Uint16Array(t),e,n)}}gd.prototype.isFloat16BufferAttribute=!0;class se extends re{constructor(t,e,n){super(new Float32Array(t),e,n)}}function Po(i){if(i.length===0)return-1/0;let t=i[0];for(let e=1,n=i.length;e<n;++e)i[e]>t&&(t=i[e]);return t}let xd=0;const Ce=new vt,Ds=new zt,Zn=new A,Te=new Fe,Ri=new Fe,ae=new A;class jt extends En{constructor(){super();Object.defineProperty(this,"id",{value:xd++}),this.uuid=Ge(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Po(t)>65535?Ro:Co)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new le().getNormalMatrix(t);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(t),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ce.makeRotationFromQuaternion(t),this.applyMatrix4(Ce),this}rotateX(t){return Ce.makeRotationX(t),this.applyMatrix4(Ce),this}rotateY(t){return Ce.makeRotationY(t),this.applyMatrix4(Ce),this}rotateZ(t){return Ce.makeRotationZ(t),this.applyMatrix4(Ce),this}translate(t,e,n){return Ce.makeTranslation(t,e,n),this.applyMatrix4(Ce),this}scale(t,e,n){return Ce.makeScale(t,e,n),this.applyMatrix4(Ce),this}lookAt(t){return Ds.lookAt(t),Ds.updateMatrix(),this.applyMatrix4(Ds.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Zn).negate(),this.translate(Zn.x,Zn.y,Zn.z),this}setFromPoints(t){const e=[];for(let n=0,r=t.length;n<r;n++){const s=t[n];e.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new se(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Fe);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new A(-1/0,-1/0,-1/0),new A(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const s=e[n];Te.setFromBufferAttribute(s),this.morphTargetsRelative?(ae.addVectors(this.boundingBox.min,Te.min),this.boundingBox.expandByPoint(ae),ae.addVectors(this.boundingBox.max,Te.max),this.boundingBox.expandByPoint(ae)):(this.boundingBox.expandByPoint(Te.min),this.boundingBox.expandByPoint(Te.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Vn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new A,1/0);return}if(t){const n=this.boundingSphere.center;if(Te.setFromBufferAttribute(t),e)for(let s=0,a=e.length;s<a;s++){const o=e[s];Ri.setFromBufferAttribute(o),this.morphTargetsRelative?(ae.addVectors(Te.min,Ri.min),Te.expandByPoint(ae),ae.addVectors(Te.max,Ri.max),Te.expandByPoint(ae)):(Te.expandByPoint(Ri.min),Te.expandByPoint(Ri.max))}Te.getCenter(n);let r=0;for(let s=0,a=t.count;s<a;s++)ae.fromBufferAttribute(t,s),r=Math.max(r,n.distanceToSquared(ae));if(e)for(let s=0,a=e.length;s<a;s++){const o=e[s],l=this.morphTargetsRelative;for(let c=0,u=o.count;c<u;c++)ae.fromBufferAttribute(o,c),l&&(Zn.fromBufferAttribute(t,c),ae.add(Zn)),r=Math.max(r,n.distanceToSquared(ae))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,r=e.position.array,s=e.normal.array,a=e.uv.array,o=r.length/3;e.tangent===void 0&&this.setAttribute("tangent",new re(new Float32Array(4*o),4));const l=e.tangent.array,c=[],u=[];for(let X=0;X<o;X++)c[X]=new A,u[X]=new A;const h=new A,f=new A,d=new A,p=new rt,x=new rt,v=new rt,m=new A,g=new A;function M(X,k,Z){h.fromArray(r,X*3),f.fromArray(r,k*3),d.fromArray(r,Z*3),p.fromArray(a,X*2),x.fromArray(a,k*2),v.fromArray(a,Z*2),f.sub(h),d.sub(h),x.sub(p),v.sub(p);const N=1/(x.x*v.y-v.x*x.y);!isFinite(N)||(m.copy(f).multiplyScalar(v.y).addScaledVector(d,-x.y).multiplyScalar(N),g.copy(d).multiplyScalar(x.x).addScaledVector(f,-v.x).multiplyScalar(N),c[X].add(m),c[k].add(m),c[Z].add(m),u[X].add(g),u[k].add(g),u[Z].add(g))}let C=this.groups;C.length===0&&(C=[{start:0,count:n.length}]);for(let X=0,k=C.length;X<k;++X){const Z=C[X],N=Z.start,O=Z.count;for(let P=N,R=N+O;P<R;P+=3)M(n[P+0],n[P+1],n[P+2])}const T=new A,y=new A,D=new A,z=new A;function H(X){D.fromArray(s,X*3),z.copy(D);const k=c[X];T.copy(k),T.sub(D.multiplyScalar(D.dot(k))).normalize(),y.crossVectors(z,k);const N=y.dot(u[X])<0?-1:1;l[X*4]=T.x,l[X*4+1]=T.y,l[X*4+2]=T.z,l[X*4+3]=N}for(let X=0,k=C.length;X<k;++X){const Z=C[X],N=Z.start,O=Z.count;for(let P=N,R=N+O;P<R;P+=3)H(n[P+0]),H(n[P+1]),H(n[P+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new re(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const r=new A,s=new A,a=new A,o=new A,l=new A,c=new A,u=new A,h=new A;if(t)for(let f=0,d=t.count;f<d;f+=3){const p=t.getX(f+0),x=t.getX(f+1),v=t.getX(f+2);r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,x),a.fromBufferAttribute(e,v),u.subVectors(a,s),h.subVectors(r,s),u.cross(h),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,x),c.fromBufferAttribute(n,v),o.add(u),l.add(u),c.add(u),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(x,l.x,l.y,l.z),n.setXYZ(v,c.x,c.y,c.z)}else for(let f=0,d=e.count;f<d;f+=3)r.fromBufferAttribute(e,f+0),s.fromBufferAttribute(e,f+1),a.fromBufferAttribute(e,f+2),u.subVectors(a,s),h.subVectors(r,s),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(t.attributes[r]===void 0)continue;const a=n[r].array,o=t.attributes[r],l=o.array,c=o.itemSize*e,u=Math.min(l.length,a.length-c);for(let h=0,f=c;h<u;h++,f++)a[f]=l[h]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ae.fromBufferAttribute(t,e),ae.normalize(),t.setXYZ(e,ae.x,ae.y,ae.z)}toNonIndexed(){function t(o,l){const c=o.array,u=o.itemSize,h=o.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let x=0,v=l.length;x<v;x++){o.isInterleavedBufferAttribute?d=l[x]*o.data.stride+o.offset:d=l[x]*u;for(let m=0;m<u;m++)f[p++]=c[d++]}return new re(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new jt,n=this.index.array,r=this.attributes;for(const o in r){const l=r[o],c=t(l,n);e.setAttribute(o,c)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=t(f,n);l.push(d)}e.morphAttributes[o]=l}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(t.data))}u.length>0&&(r[l]=u,s=!0)}s&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return new jt().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const r=t.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(e))}const s=t.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}jt.prototype.isBufferGeometry=!0;const Io=new vt,Jn=new Gn,Fs=new Vn,ln=new A,cn=new A,un=new A,Ns=new A,ks=new A,Bs=new A,_r=new A,br=new A,wr=new A,Mr=new rt,Sr=new rt,Er=new rt,zs=new A,Tr=new A;class Re extends zt{constructor(t=new jt,e=new Is){super();this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const r=e[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Fs.copy(n.boundingSphere),Fs.applyMatrix4(s),t.ray.intersectsSphere(Fs)===!1)||(Io.copy(s).invert(),Jn.copy(t.ray).applyMatrix4(Io),n.boundingBox!==null&&Jn.intersectsBox(n.boundingBox)===!1))return;let a;if(n.isBufferGeometry){const o=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,f=n.attributes.uv2,d=n.groups,p=n.drawRange;if(o!==null)if(Array.isArray(r))for(let x=0,v=d.length;x<v;x++){const m=d[x],g=r[m.materialIndex],M=Math.max(m.start,p.start),C=Math.min(m.start+m.count,p.start+p.count);for(let T=M,y=C;T<y;T+=3){const D=o.getX(T),z=o.getX(T+1),H=o.getX(T+2);a=Ar(this,g,t,Jn,l,c,u,h,f,D,z,H),a&&(a.faceIndex=Math.floor(T/3),a.face.materialIndex=m.materialIndex,e.push(a))}}else{const x=Math.max(0,p.start),v=Math.min(o.count,p.start+p.count);for(let m=x,g=v;m<g;m+=3){const M=o.getX(m),C=o.getX(m+1),T=o.getX(m+2);a=Ar(this,r,t,Jn,l,c,u,h,f,M,C,T),a&&(a.faceIndex=Math.floor(m/3),e.push(a))}}else if(l!==void 0)if(Array.isArray(r))for(let x=0,v=d.length;x<v;x++){const m=d[x],g=r[m.materialIndex],M=Math.max(m.start,p.start),C=Math.min(m.start+m.count,p.start+p.count);for(let T=M,y=C;T<y;T+=3){const D=T,z=T+1,H=T+2;a=Ar(this,g,t,Jn,l,c,u,h,f,D,z,H),a&&(a.faceIndex=Math.floor(T/3),a.face.materialIndex=m.materialIndex,e.push(a))}}else{const x=Math.max(0,p.start),v=Math.min(l.count,p.start+p.count);for(let m=x,g=v;m<g;m+=3){const M=m,C=m+1,T=m+2;a=Ar(this,r,t,Jn,l,c,u,h,f,M,C,T),a&&(a.faceIndex=Math.floor(m/3),e.push(a))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}Re.prototype.isMesh=!0;function yd(i,t,e,n,r,s,a,o){let l;if(t.side===ie?l=n.intersectTriangle(a,s,r,!0,o):l=n.intersectTriangle(r,s,a,t.side!==Cn,o),l===null)return null;Tr.copy(o),Tr.applyMatrix4(i.matrixWorld);const c=e.ray.origin.distanceTo(Tr);return c<e.near||c>e.far?null:{distance:c,point:Tr.clone(),object:i}}function Ar(i,t,e,n,r,s,a,o,l,c,u,h){ln.fromBufferAttribute(r,c),cn.fromBufferAttribute(r,u),un.fromBufferAttribute(r,h);const f=i.morphTargetInfluences;if(t.morphTargets&&s&&f){_r.set(0,0,0),br.set(0,0,0),wr.set(0,0,0);for(let p=0,x=s.length;p<x;p++){const v=f[p],m=s[p];v!==0&&(Ns.fromBufferAttribute(m,c),ks.fromBufferAttribute(m,u),Bs.fromBufferAttribute(m,h),a?(_r.addScaledVector(Ns,v),br.addScaledVector(ks,v),wr.addScaledVector(Bs,v)):(_r.addScaledVector(Ns.sub(ln),v),br.addScaledVector(ks.sub(cn),v),wr.addScaledVector(Bs.sub(un),v)))}ln.add(_r),cn.add(br),un.add(wr)}i.isSkinnedMesh&&(i.boneTransform(c,ln),i.boneTransform(u,cn),i.boneTransform(h,un));const d=yd(i,t,e,n,ln,cn,un,zs);if(d){o&&(Mr.fromBufferAttribute(o,c),Sr.fromBufferAttribute(o,u),Er.fromBufferAttribute(o,h),d.uv=ee.getUV(zs,ln,cn,un,Mr,Sr,Er,new rt)),l&&(Mr.fromBufferAttribute(l,c),Sr.fromBufferAttribute(l,u),Er.fromBufferAttribute(l,h),d.uv2=ee.getUV(zs,ln,cn,un,Mr,Sr,Er,new rt));const p={a:c,b:u,c:h,normal:new A,materialIndex:0};ee.getNormal(ln,cn,un,p.normal),d.face=p}return d}class Pi extends jt{constructor(t=1,e=1,n=1,r=1,s=1,a=1){super();this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:s,depthSegments:a};const o=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,e,t,a,s,0),p("z","y","x",1,-1,n,e,-t,a,s,1),p("x","z","y",1,1,t,n,e,r,a,2),p("x","z","y",1,-1,t,n,-e,r,a,3),p("x","y","z",1,-1,t,e,n,r,s,4),p("x","y","z",-1,-1,t,e,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new se(c,3)),this.setAttribute("normal",new se(u,3)),this.setAttribute("uv",new se(h,2));function p(x,v,m,g,M,C,T,y,D,z,H){const X=C/D,k=T/z,Z=C/2,N=T/2,O=y/2,P=D+1,R=z+1;let V=0,Y=0;const q=new A;for(let et=0;et<R;et++){const b=et*k-N;for(let S=0;S<P;S++){const dt=S*X-Z;q[x]=dt*g,q[v]=b*M,q[m]=O,c.push(q.x,q.y,q.z),q[x]=0,q[v]=0,q[m]=y>0?1:-1,u.push(q.x,q.y,q.z),h.push(S/D),h.push(1-et/z),V+=1}}for(let et=0;et<z;et++)for(let b=0;b<D;b++){const S=f+b+P*et,dt=f+b+P*(et+1),St=f+(b+1)+P*(et+1),_t=f+(b+1)+P*et;l.push(S,dt,_t),l.push(dt,St,_t),Y+=6}o.addGroup(d,Y,H),d+=Y,f+=V}}static fromJSON(t){return new Pi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Qn(i){const t={};for(const e in i){t[e]={};for(const n in i[e]){const r=i[e][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[e][n]=r.clone():Array.isArray(r)?t[e][n]=r.slice():t[e][n]=r}}return t}function fe(i){const t={};for(let e=0;e<i.length;e++){const n=Qn(i[e]);for(const r in n)t[r]=n[r]}return t}const vd={clone:Qn,merge:fe};var _d=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,bd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ln extends de{constructor(t){super();this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=_d,this.fragmentShader=bd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Qn(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const r in this.uniforms){const a=this.uniforms[r].value;a&&a.isTexture?e.uniforms[r]={type:"t",value:a.toJSON(t).uuid}:a&&a.isColor?e.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?e.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?e.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?e.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?e.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?e.uniforms[r]={type:"m4",value:a.toArray()}:e.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}Ln.prototype.isShaderMaterial=!0;class Os extends zt{constructor(){super();this.type="Camera",this.matrixWorldInverse=new vt,this.projectionMatrix=new vt,this.projectionMatrixInverse=new vt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}Os.prototype.isCamera=!0;class ye extends Os{constructor(t=50,e=1,n=.1,r=2e3){super();this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=ps*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(fs*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return ps*2*Math.atan(Math.tan(fs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,s,a){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(fs*.5*this.fov)/this.zoom,n=2*e,r=this.aspect*n,s=-.5*r;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;s+=a.offsetX*r/l,e-=a.offsetY*n/c,r*=a.width/l,n*=a.height/c}const o=this.filmOffset;o!==0&&(s+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}ye.prototype.isPerspectiveCamera=!0;const $n=90,Kn=1;class Us extends zt{constructor(t,e,n){super();if(this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const r=new ye($n,Kn,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new A(1,0,0)),this.add(r);const s=new ye($n,Kn,t,e);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new A(-1,0,0)),this.add(s);const a=new ye($n,Kn,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new A(0,1,0)),this.add(a);const o=new ye($n,Kn,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new A(0,-1,0)),this.add(o);const l=new ye($n,Kn,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new A(0,0,1)),this.add(l);const c=new ye($n,Kn,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new A(0,0,-1)),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[r,s,a,o,l,c]=this.children,u=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,s),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,o),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.xr.enabled=u}}class Lr extends ce{constructor(t,e,n,r,s,a,o,l,c,u){t=t!==void 0?t:[],e=e!==void 0?e:rs,o=o!==void 0?o:Sn;super(t,e,n,r,s,a,o,l,c,u);this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Lr.prototype.isCubeTexture=!0;class Do extends Ze{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n);super(t,t,e);e=e||{},this.texture=new Lr(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:Le,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Ve,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Pi(5,5,5),s=new Ln({name:"CubemapFromEquirect",uniforms:Qn(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:ie,blending:bi});s.uniforms.tEquirect.value=e;const a=new Re(r,s),o=e.minFilter;return e.minFilter===rr&&(e.minFilter=Le),new Us(1,10,this).update(t,a),e.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(t,e,n,r){const s=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,r);t.setRenderTarget(s)}}Do.prototype.isWebGLCubeRenderTarget=!0;const Hs=new A,wd=new A,Md=new le;class en{constructor(t=new A(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=Hs.subVectors(n,e).cross(wd.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(Hs),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:e.copy(n).multiplyScalar(s).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Md.getNormalMatrix(t),r=this.coplanarPoint(Hs).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}en.prototype.isPlane=!0;const ti=new Vn,Cr=new A;class Rr{constructor(t=new en,e=new en,n=new en,r=new en,s=new en,a=new en){this.planes=[t,e,n,r,s,a]}set(t,e,n,r,s,a){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(r),o[4].copy(s),o[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],s=n[1],a=n[2],o=n[3],l=n[4],c=n[5],u=n[6],h=n[7],f=n[8],d=n[9],p=n[10],x=n[11],v=n[12],m=n[13],g=n[14],M=n[15];return e[0].setComponents(o-r,h-l,x-f,M-v).normalize(),e[1].setComponents(o+r,h+l,x+f,M+v).normalize(),e[2].setComponents(o+s,h+c,x+d,M+m).normalize(),e[3].setComponents(o-s,h-c,x-d,M-m).normalize(),e[4].setComponents(o-a,h-u,x-p,M-g).normalize(),e[5].setComponents(o+a,h+u,x+p,M+g).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),ti.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(ti)}intersectsSprite(t){return ti.center.set(0,0,0),ti.radius=.7071067811865476,ti.applyMatrix4(t.matrixWorld),this.intersectsSphere(ti)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let s=0;s<6;s++)if(e[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(Cr.x=r.normal.x>0?t.max.x:t.min.x,Cr.y=r.normal.y>0?t.max.y:t.min.y,Cr.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Cr)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Fo(){let i=null,t=!1,e=null,n=null;function r(s,a){e(s,a),n=i.requestAnimationFrame(r)}return{start:function(){t!==!0&&e!==null&&(n=i.requestAnimationFrame(r),t=!0)},stop:function(){i.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(s){e=s},setContext:function(s){i=s}}}function Sd(i,t){const e=t.isWebGL2,n=new WeakMap;function r(c,u){const h=c.array,f=c.usage,d=i.createBuffer();i.bindBuffer(u,d),i.bufferData(u,h,f),c.onUploadCallback();let p=5126;return h instanceof Float32Array?p=5126:h instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):h instanceof Uint16Array?c.isFloat16BufferAttribute?e?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:h instanceof Int16Array?p=5122:h instanceof Uint32Array?p=5125:h instanceof Int32Array?p=5124:h instanceof Int8Array?p=5120:(h instanceof Uint8Array||h instanceof Uint8ClampedArray)&&(p=5121),{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,h){const f=u.array,d=u.updateRange;i.bindBuffer(h,c),d.count===-1?i.bufferSubData(h,0,f):(e?i.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):i.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(i.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,r(c,u)):h.version<c.version&&(s(h.buffer,c,u),h.version=c.version)}return{get:a,remove:o,update:l}}class Vs extends jt{constructor(t=1,e=1,n=1,r=1){super();this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const s=t/2,a=e/2,o=Math.floor(n),l=Math.floor(r),c=o+1,u=l+1,h=t/o,f=e/l,d=[],p=[],x=[],v=[];for(let m=0;m<u;m++){const g=m*f-a;for(let M=0;M<c;M++){const C=M*h-s;p.push(C,-g,0),x.push(0,0,1),v.push(M/o),v.push(1-m/l)}}for(let m=0;m<l;m++)for(let g=0;g<o;g++){const M=g+c*m,C=g+c*(m+1),T=g+1+c*(m+1),y=g+1+c*m;d.push(M,C,y),d.push(C,T,y)}this.setIndex(d),this.setAttribute("position",new se(p,3)),this.setAttribute("normal",new se(x,3)),this.setAttribute("uv",new se(v,2))}static fromJSON(t){return new Vs(t.width,t.height,t.widthSegments,t.heightSegments)}}var Ed=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Td=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ad=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,Ld=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,Cd=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Rd="vec3 transformed = vec3( position );",Pd=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Id=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotVH ) {
	float fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,Dd=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Fd=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Nd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,kd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Bd=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,zd=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Od=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Ud=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Hd=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Vd=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Gd=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Wd=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,qd=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Xd=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,jd=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Yd=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Zd="gl_FragColor = linearToOutputTexel( gl_FragColor );",Jd=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,Qd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,$d=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Kd=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,tf=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,ef=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,nf=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,rf=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,sf=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,af=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,of=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,lf=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,cf=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,uf=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,hf=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,df=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,ff=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,pf=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,mf=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,gf=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,xf=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,yf=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,vf=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,_f=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,bf=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,wf=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Mf=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Sf=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Ef=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Tf=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,Af=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Lf=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Cf=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Rf=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Pf=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,If=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,Df=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,Ff=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,Nf=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,kf=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Bf=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,zf=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Of=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Uf=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Hf=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Vf=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Gf=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Wf=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,qf=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Xf=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,jf=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Yf=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Zf=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Jf=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Qf=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,$f=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Kf=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,tp=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,ep=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,np=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,ip=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,rp=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,sp=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ap=`#ifdef USE_TRANSMISSION
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSNMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition.xyz / vWorldPosition.w;
	vec3 v = normalize( cameraPosition - pos );
	float ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );
	vec3 transmission = transmissionFactor * getIBLVolumeRefraction(
		normal, v, roughnessFactor, material.diffuseColor, totalSpecular,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );
#endif`,op=`#ifdef USE_TRANSMISSION
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec4 vWorldPosition;
	vec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {
		vec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);
		vec3 modelScale;
		modelScale.x = length(vec3(modelMatrix[0].xyz));
		modelScale.y = length(vec3(modelMatrix[1].xyz));
		modelScale.z = length(vec3(modelMatrix[2].xyz));
		return normalize(refractionVector) * thickness * modelScale;
	}
	float applyIorToRoughness(float roughness, float ior) {
		return roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);
	}
	vec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {
		float framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);
		return texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;
	}
	vec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {
		if (attenuationDistance == 0.0) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;
			vec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);			return transmittance * radiance;
		}
	}
	vec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance) {
		vec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);
		vec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);
		return (1.0 - specularColor) * attenuatedColor * baseColor;
	}
#endif`,lp=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,cp=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,up=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,hp=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,dp=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,fp=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,pp=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,mp=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,gp=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,xp=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,yp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vp=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,_p=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,bp=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,wp=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Mp=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Sp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Ep=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Tp=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ap=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lp=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Cp=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rp=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Pp=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ip=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Dp=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fp=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Np=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kp=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Bp=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform vec3 attenuationColor;
	uniform float attenuationDistance;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <transmission_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zp=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#ifdef USE_TRANSMISSION
	varying vec4 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition;
#endif
}`,Op=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,Up=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Hp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Vp=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Gp=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Wp=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Xp=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const Dt={alphamap_fragment:Ed,alphamap_pars_fragment:Td,alphatest_fragment:Ad,aomap_fragment:Ld,aomap_pars_fragment:Cd,begin_vertex:Rd,beginnormal_vertex:Pd,bsdfs:Id,bumpmap_pars_fragment:Dd,clipping_planes_fragment:Fd,clipping_planes_pars_fragment:Nd,clipping_planes_pars_vertex:kd,clipping_planes_vertex:Bd,color_fragment:zd,color_pars_fragment:Od,color_pars_vertex:Ud,color_vertex:Hd,common:Vd,cube_uv_reflection_fragment:Gd,defaultnormal_vertex:Wd,displacementmap_pars_vertex:qd,displacementmap_vertex:Xd,emissivemap_fragment:jd,emissivemap_pars_fragment:Yd,encodings_fragment:Zd,encodings_pars_fragment:Jd,envmap_fragment:Qd,envmap_common_pars_fragment:$d,envmap_pars_fragment:Kd,envmap_pars_vertex:tf,envmap_physical_pars_fragment:df,envmap_vertex:ef,fog_vertex:nf,fog_pars_vertex:rf,fog_fragment:sf,fog_pars_fragment:af,gradientmap_pars_fragment:of,lightmap_fragment:lf,lightmap_pars_fragment:cf,lights_lambert_vertex:uf,lights_pars_begin:hf,lights_toon_fragment:ff,lights_toon_pars_fragment:pf,lights_phong_fragment:mf,lights_phong_pars_fragment:gf,lights_physical_fragment:xf,lights_physical_pars_fragment:yf,lights_fragment_begin:vf,lights_fragment_maps:_f,lights_fragment_end:bf,logdepthbuf_fragment:wf,logdepthbuf_pars_fragment:Mf,logdepthbuf_pars_vertex:Sf,logdepthbuf_vertex:Ef,map_fragment:Tf,map_pars_fragment:Af,map_particle_fragment:Lf,map_particle_pars_fragment:Cf,metalnessmap_fragment:Rf,metalnessmap_pars_fragment:Pf,morphnormal_vertex:If,morphtarget_pars_vertex:Df,morphtarget_vertex:Ff,normal_fragment_begin:Nf,normal_fragment_maps:kf,normalmap_pars_fragment:Bf,clearcoat_normal_fragment_begin:zf,clearcoat_normal_fragment_maps:Of,clearcoat_pars_fragment:Uf,packing:Hf,premultiplied_alpha_fragment:Vf,project_vertex:Gf,dithering_fragment:Wf,dithering_pars_fragment:qf,roughnessmap_fragment:Xf,roughnessmap_pars_fragment:jf,shadowmap_pars_fragment:Yf,shadowmap_pars_vertex:Zf,shadowmap_vertex:Jf,shadowmask_pars_fragment:Qf,skinbase_vertex:$f,skinning_pars_vertex:Kf,skinning_vertex:tp,skinnormal_vertex:ep,specularmap_fragment:np,specularmap_pars_fragment:ip,tonemapping_fragment:rp,tonemapping_pars_fragment:sp,transmission_fragment:ap,transmission_pars_fragment:op,uv_pars_fragment:lp,uv_pars_vertex:cp,uv_vertex:up,uv2_pars_fragment:hp,uv2_pars_vertex:dp,uv2_vertex:fp,worldpos_vertex:pp,background_frag:mp,background_vert:gp,cube_frag:xp,cube_vert:yp,depth_frag:vp,depth_vert:_p,distanceRGBA_frag:bp,distanceRGBA_vert:wp,equirect_frag:Mp,equirect_vert:Sp,linedashed_frag:Ep,linedashed_vert:Tp,meshbasic_frag:Ap,meshbasic_vert:Lp,meshlambert_frag:Cp,meshlambert_vert:Rp,meshmatcap_frag:Pp,meshmatcap_vert:Ip,meshtoon_frag:Dp,meshtoon_vert:Fp,meshphong_frag:Np,meshphong_vert:kp,meshphysical_frag:Bp,meshphysical_vert:zp,normal_frag:Op,normal_vert:Up,points_frag:Hp,points_vert:Vp,shadow_frag:Gp,shadow_vert:Wp,sprite_frag:qp,sprite_vert:Xp},st={common:{diffuse:{value:new pt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new le},uv2Transform:{value:new le},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new rt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new pt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new pt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new le}},sprite:{diffuse:{value:new pt(16777215)},opacity:{value:1},center:{value:new rt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new le}}},We={basic:{uniforms:fe([st.common,st.specularmap,st.envmap,st.aomap,st.lightmap,st.fog]),vertexShader:Dt.meshbasic_vert,fragmentShader:Dt.meshbasic_frag},lambert:{uniforms:fe([st.common,st.specularmap,st.envmap,st.aomap,st.lightmap,st.emissivemap,st.fog,st.lights,{emissive:{value:new pt(0)}}]),vertexShader:Dt.meshlambert_vert,fragmentShader:Dt.meshlambert_frag},phong:{uniforms:fe([st.common,st.specularmap,st.envmap,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.fog,st.lights,{emissive:{value:new pt(0)},specular:{value:new pt(1118481)},shininess:{value:30}}]),vertexShader:Dt.meshphong_vert,fragmentShader:Dt.meshphong_frag},standard:{uniforms:fe([st.common,st.envmap,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.roughnessmap,st.metalnessmap,st.fog,st.lights,{emissive:{value:new pt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Dt.meshphysical_vert,fragmentShader:Dt.meshphysical_frag},toon:{uniforms:fe([st.common,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.gradientmap,st.fog,st.lights,{emissive:{value:new pt(0)}}]),vertexShader:Dt.meshtoon_vert,fragmentShader:Dt.meshtoon_frag},matcap:{uniforms:fe([st.common,st.bumpmap,st.normalmap,st.displacementmap,st.fog,{matcap:{value:null}}]),vertexShader:Dt.meshmatcap_vert,fragmentShader:Dt.meshmatcap_frag},points:{uniforms:fe([st.points,st.fog]),vertexShader:Dt.points_vert,fragmentShader:Dt.points_frag},dashed:{uniforms:fe([st.common,st.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Dt.linedashed_vert,fragmentShader:Dt.linedashed_frag},depth:{uniforms:fe([st.common,st.displacementmap]),vertexShader:Dt.depth_vert,fragmentShader:Dt.depth_frag},normal:{uniforms:fe([st.common,st.bumpmap,st.normalmap,st.displacementmap,{opacity:{value:1}}]),vertexShader:Dt.normal_vert,fragmentShader:Dt.normal_frag},sprite:{uniforms:fe([st.sprite,st.fog]),vertexShader:Dt.sprite_vert,fragmentShader:Dt.sprite_frag},background:{uniforms:{uvTransform:{value:new le},t2D:{value:null}},vertexShader:Dt.background_vert,fragmentShader:Dt.background_frag},cube:{uniforms:fe([st.envmap,{opacity:{value:1}}]),vertexShader:Dt.cube_vert,fragmentShader:Dt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Dt.equirect_vert,fragmentShader:Dt.equirect_frag},distanceRGBA:{uniforms:fe([st.common,st.displacementmap,{referencePosition:{value:new A},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Dt.distanceRGBA_vert,fragmentShader:Dt.distanceRGBA_frag},shadow:{uniforms:fe([st.lights,st.fog,{color:{value:new pt(0)},opacity:{value:1}}]),vertexShader:Dt.shadow_vert,fragmentShader:Dt.shadow_frag}};We.physical={uniforms:fe([We.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new rt(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new pt(0)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new rt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new pt(0)}}]),vertexShader:Dt.meshphysical_vert,fragmentShader:Dt.meshphysical_frag};function jp(i,t,e,n,r){const s=new pt(0);let a=0,o,l,c=null,u=0,h=null;function f(p,x){let v=!1,m=x.isScene===!0?x.background:null;m&&m.isTexture&&(m=t.get(m));const g=i.xr,M=g.getSession&&g.getSession();M&&M.environmentBlendMode==="additive"&&(m=null),m===null?d(s,a):m&&m.isColor&&(d(m,1),v=!0),(i.autoClear||v)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),m&&(m.isCubeTexture||m.mapping===as)?(l===void 0&&(l=new Re(new Pi(1,1,1),new Ln({name:"BackgroundCubeMaterial",uniforms:Qn(We.cube.uniforms),vertexShader:We.cube.vertexShader,fragmentShader:We.cube.fragmentShader,side:ie,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(C,T,y){this.matrixWorld.copyPosition(y.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,(c!==m||u!==m.version||h!==i.toneMapping)&&(l.material.needsUpdate=!0,c=m,u=m.version,h=i.toneMapping),p.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(o===void 0&&(o=new Re(new Vs(2,2),new Ln({name:"BackgroundMaterial",uniforms:Qn(We.background.uniforms),vertexShader:We.background.vertexShader,fragmentShader:We.background.fragmentShader,side:_i,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),(c!==m||u!==m.version||h!==i.toneMapping)&&(o.material.needsUpdate=!0,c=m,u=m.version,h=i.toneMapping),p.unshift(o,o.geometry,o.material,0,0,null))}function d(p,x){e.buffers.color.setClear(p.r,p.g,p.b,x,r)}return{getClearColor:function(){return s},setClearColor:function(p,x=1){s.set(p),a=x,d(s,a)},getClearAlpha:function(){return a},setClearAlpha:function(p){a=p,d(s,a)},render:f}}function Yp(i,t,e,n){const r=i.getParameter(34921),s=n.isWebGL2?null:t.get("OES_vertex_array_object"),a=n.isWebGL2||s!==null,o={},l=x(null);let c=l;function u(N,O,P,R,V){let Y=!1;if(a){const q=p(R,P,O);c!==q&&(c=q,f(c.object)),Y=v(R,V),Y&&m(R,V)}else{const q=O.wireframe===!0;(c.geometry!==R.id||c.program!==P.id||c.wireframe!==q)&&(c.geometry=R.id,c.program=P.id,c.wireframe=q,Y=!0)}N.isInstancedMesh===!0&&(Y=!0),V!==null&&e.update(V,34963),Y&&(D(N,O,P,R),V!==null&&i.bindBuffer(34963,e.get(V).buffer))}function h(){return n.isWebGL2?i.createVertexArray():s.createVertexArrayOES()}function f(N){return n.isWebGL2?i.bindVertexArray(N):s.bindVertexArrayOES(N)}function d(N){return n.isWebGL2?i.deleteVertexArray(N):s.deleteVertexArrayOES(N)}function p(N,O,P){const R=P.wireframe===!0;let V=o[N.id];V===void 0&&(V={},o[N.id]=V);let Y=V[O.id];Y===void 0&&(Y={},V[O.id]=Y);let q=Y[R];return q===void 0&&(q=x(h()),Y[R]=q),q}function x(N){const O=[],P=[],R=[];for(let V=0;V<r;V++)O[V]=0,P[V]=0,R[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:O,enabledAttributes:P,attributeDivisors:R,object:N,attributes:{},index:null}}function v(N,O){const P=c.attributes,R=N.attributes;let V=0;for(const Y in R){const q=P[Y],et=R[Y];if(q===void 0||q.attribute!==et||q.data!==et.data)return!0;V++}return c.attributesNum!==V||c.index!==O}function m(N,O){const P={},R=N.attributes;let V=0;for(const Y in R){const q=R[Y],et={};et.attribute=q,q.data&&(et.data=q.data),P[Y]=et,V++}c.attributes=P,c.attributesNum=V,c.index=O}function g(){const N=c.newAttributes;for(let O=0,P=N.length;O<P;O++)N[O]=0}function M(N){C(N,0)}function C(N,O){const P=c.newAttributes,R=c.enabledAttributes,V=c.attributeDivisors;P[N]=1,R[N]===0&&(i.enableVertexAttribArray(N),R[N]=1),V[N]!==O&&((n.isWebGL2?i:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](N,O),V[N]=O)}function T(){const N=c.newAttributes,O=c.enabledAttributes;for(let P=0,R=O.length;P<R;P++)O[P]!==N[P]&&(i.disableVertexAttribArray(P),O[P]=0)}function y(N,O,P,R,V,Y){n.isWebGL2===!0&&(P===5124||P===5125)?i.vertexAttribIPointer(N,O,P,V,Y):i.vertexAttribPointer(N,O,P,R,V,Y)}function D(N,O,P,R){if(n.isWebGL2===!1&&(N.isInstancedMesh||R.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;g();const V=R.attributes,Y=P.getAttributes(),q=O.defaultAttributeValues;for(const et in Y){const b=Y[et];if(b>=0){const S=V[et];if(S!==void 0){const dt=S.normalized,St=S.itemSize,_t=e.get(S);if(_t===void 0)continue;const G=_t.buffer,Bt=_t.type,Et=_t.bytesPerElement;if(S.isInterleavedBufferAttribute){const mt=S.data,ut=mt.stride,Tt=S.offset;mt&&mt.isInstancedInterleavedBuffer?(C(b,mt.meshPerAttribute),R._maxInstanceCount===void 0&&(R._maxInstanceCount=mt.meshPerAttribute*mt.count)):M(b),i.bindBuffer(34962,G),y(b,St,Bt,dt,ut*Et,Tt*Et)}else S.isInstancedBufferAttribute?(C(b,S.meshPerAttribute),R._maxInstanceCount===void 0&&(R._maxInstanceCount=S.meshPerAttribute*S.count)):M(b),i.bindBuffer(34962,G),y(b,St,Bt,dt,0,0)}else if(et==="instanceMatrix"){const dt=e.get(N.instanceMatrix);if(dt===void 0)continue;const St=dt.buffer,_t=dt.type;C(b+0,1),C(b+1,1),C(b+2,1),C(b+3,1),i.bindBuffer(34962,St),i.vertexAttribPointer(b+0,4,_t,!1,64,0),i.vertexAttribPointer(b+1,4,_t,!1,64,16),i.vertexAttribPointer(b+2,4,_t,!1,64,32),i.vertexAttribPointer(b+3,4,_t,!1,64,48)}else if(et==="instanceColor"){const dt=e.get(N.instanceColor);if(dt===void 0)continue;const St=dt.buffer,_t=dt.type;C(b,1),i.bindBuffer(34962,St),i.vertexAttribPointer(b,3,_t,!1,12,0)}else if(q!==void 0){const dt=q[et];if(dt!==void 0)switch(dt.length){case 2:i.vertexAttrib2fv(b,dt);break;case 3:i.vertexAttrib3fv(b,dt);break;case 4:i.vertexAttrib4fv(b,dt);break;default:i.vertexAttrib1fv(b,dt)}}}}T()}function z(){k();for(const N in o){const O=o[N];for(const P in O){const R=O[P];for(const V in R)d(R[V].object),delete R[V];delete O[P]}delete o[N]}}function H(N){if(o[N.id]===void 0)return;const O=o[N.id];for(const P in O){const R=O[P];for(const V in R)d(R[V].object),delete R[V];delete O[P]}delete o[N.id]}function X(N){for(const O in o){const P=o[O];if(P[N.id]===void 0)continue;const R=P[N.id];for(const V in R)d(R[V].object),delete R[V];delete P[N.id]}}function k(){Z(),c!==l&&(c=l,f(c.object))}function Z(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:k,resetDefaultState:Z,dispose:z,releaseStatesOfGeometry:H,releaseStatesOfProgram:X,initAttributes:g,enableAttribute:M,disableUnusedAttributes:T}}function Zp(i,t,e,n){const r=n.isWebGL2;let s;function a(c){s=c}function o(c,u){i.drawArrays(s,c,u),e.update(u,s,1)}function l(c,u,h){if(h===0)return;let f,d;if(r)f=i,d="drawArraysInstanced";else if(f=t.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,c,u,h),e.update(u,s,h)}this.setMode=a,this.render=o,this.renderInstances=l}function Jp(i,t,e){let n;function r(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const D=t.get("EXT_texture_filter_anisotropic");n=i.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(D){if(D==="highp"){if(i.getShaderPrecisionFormat(35633,36338).precision>0&&i.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";D="mediump"}return D==="mediump"&&i.getShaderPrecisionFormat(35633,36337).precision>0&&i.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext!="undefined"&&i instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&i instanceof WebGL2ComputeRenderingContext;let o=e.precision!==void 0?e.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||t.has("WEBGL_draw_buffers"),u=e.logarithmicDepthBuffer===!0,h=i.getParameter(34930),f=i.getParameter(35660),d=i.getParameter(3379),p=i.getParameter(34076),x=i.getParameter(34921),v=i.getParameter(36347),m=i.getParameter(36348),g=i.getParameter(36349),M=f>0,C=a||t.has("OES_texture_float"),T=M&&C,y=a?i.getParameter(36183):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:x,maxVertexUniforms:v,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:M,floatFragmentTextures:C,floatVertexTextures:T,maxSamples:y}}function Qp(i){const t=this;let e=null,n=0,r=!1,s=!1;const a=new en,o=new le,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,d){const p=h.length!==0||f||n!==0||r;return r=f,e=u(h,d,0),n=h.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(h,f,d){const p=h.clippingPlanes,x=h.clipIntersection,v=h.clipShadows,m=i.get(h);if(!r||p===null||p.length===0||s&&!v)s?u(null):c();else{const g=s?0:n,M=g*4;let C=m.clippingState||null;l.value=C,C=u(p,f,M,d);for(let T=0;T!==M;++T)C[T]=e[T];m.clippingState=C,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=g}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(h,f,d,p){const x=h!==null?h.length:0;let v=null;if(x!==0){if(v=l.value,p!==!0||v===null){const m=d+x*4,g=f.matrixWorldInverse;o.getNormalMatrix(g),(v===null||v.length<m)&&(v=new Float32Array(m));for(let M=0,C=d;M!==x;++M,C+=4)a.copy(h[M]).applyMatrix4(g,o),a.normal.toArray(v,C),v[C+3]=a.constant}l.value=v,l.needsUpdate=!0}return t.numPlanes=x,t.numIntersection=0,v}}function $p(i){let t=new WeakMap;function e(a,o){return o===$a?a.mapping=rs:o===Ka&&(a.mapping=ss),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===$a||o===Ka)if(t.has(a)){const l=t.get(a).texture;return e(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=i.getRenderTarget(),u=new Do(l.height/2);return u.fromEquirectangularTexture(i,a),t.set(a,u),i.setRenderTarget(c),a.addEventListener("dispose",r),e(u.texture,a.mapping)}else return null}}return a}function r(a){const o=a.target;o.removeEventListener("dispose",r);const l=t.get(o);l!==void 0&&(t.delete(o),l.dispose())}function s(){t=new WeakMap}return{get:n,dispose:s}}function Kp(i){const t={};function e(n){if(t[n]!==void 0)return t[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return t[n]=r,r}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float")},get:function(n){const r=e(n);return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function tm(i,t,e,n){const r={},s=new WeakMap;function a(h){const f=h.target;f.index!==null&&t.remove(f.index);for(const p in f.attributes)t.remove(f.attributes[p]);f.removeEventListener("dispose",a),delete r[f.id];const d=s.get(f);d&&(t.remove(d),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,e.memory.geometries--}function o(h,f){return r[f.id]===!0||(f.addEventListener("dispose",a),r[f.id]=!0,e.memory.geometries++),f}function l(h){const f=h.attributes;for(const p in f)t.update(f[p],34962);const d=h.morphAttributes;for(const p in d){const x=d[p];for(let v=0,m=x.length;v<m;v++)t.update(x[v],34962)}}function c(h){const f=[],d=h.index,p=h.attributes.position;let x=0;if(d!==null){const g=d.array;x=d.version;for(let M=0,C=g.length;M<C;M+=3){const T=g[M+0],y=g[M+1],D=g[M+2];f.push(T,y,y,D,D,T)}}else{const g=p.array;x=p.version;for(let M=0,C=g.length/3-1;M<C;M+=3){const T=M+0,y=M+1,D=M+2;f.push(T,y,y,D,D,T)}}const v=new(Po(f)>65535?Ro:Co)(f,1);v.version=x;const m=s.get(h);m&&t.remove(m),s.set(h,v)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:o,update:l,getWireframeAttribute:u}}function em(i,t,e,n){const r=n.isWebGL2;let s;function a(f){s=f}let o,l;function c(f){o=f.type,l=f.bytesPerElement}function u(f,d){i.drawElements(s,d,o,f*l),e.update(d,s,1)}function h(f,d,p){if(p===0)return;let x,v;if(r)x=i,v="drawElementsInstanced";else if(x=t.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[v](s,d,o,f*l,p),e.update(d,s,p)}this.setMode=a,this.setIndex=c,this.render=u,this.renderInstances=h}function nm(i){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,o){switch(e.calls++,a){case 4:e.triangles+=o*(s/3);break;case 1:e.lines+=o*(s/2);break;case 3:e.lines+=o*(s-1);break;case 2:e.lines+=o*s;break;case 0:e.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function r(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:r,update:n}}function im(i,t){return i[0]-t[0]}function rm(i,t){return Math.abs(t[1])-Math.abs(i[1])}function sm(i){const t={},e=new Float32Array(8),n=[];for(let s=0;s<8;s++)n[s]=[s,0];function r(s,a,o,l){const c=s.morphTargetInfluences,u=c===void 0?0:c.length;let h=t[a.id];if(h===void 0||h.length!==u){h=[];for(let v=0;v<u;v++)h[v]=[v,0];t[a.id]=h}for(let v=0;v<u;v++){const m=h[v];m[0]=v,m[1]=c[v]}h.sort(rm);for(let v=0;v<8;v++)v<u&&h[v][1]?(n[v][0]=h[v][0],n[v][1]=h[v][1]):(n[v][0]=Number.MAX_SAFE_INTEGER,n[v][1]=0);n.sort(im);const f=o.morphTargets&&a.morphAttributes.position,d=o.morphNormals&&a.morphAttributes.normal;let p=0;for(let v=0;v<8;v++){const m=n[v],g=m[0],M=m[1];g!==Number.MAX_SAFE_INTEGER&&M?(f&&a.getAttribute("morphTarget"+v)!==f[g]&&a.setAttribute("morphTarget"+v,f[g]),d&&a.getAttribute("morphNormal"+v)!==d[g]&&a.setAttribute("morphNormal"+v,d[g]),e[v]=M,p+=M):(f&&a.hasAttribute("morphTarget"+v)===!0&&a.deleteAttribute("morphTarget"+v),d&&a.hasAttribute("morphNormal"+v)===!0&&a.deleteAttribute("morphNormal"+v),e[v]=0)}const x=a.morphTargetsRelative?1:1-p;l.getUniforms().setValue(i,"morphTargetBaseInfluence",x),l.getUniforms().setValue(i,"morphTargetInfluences",e)}return{update:r}}function am(i,t,e,n){let r=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=t.get(l,u);return r.get(h)!==c&&(t.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),h}function a(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:s,dispose:a}}class No extends ce{constructor(t=null,e=1,n=1,r=1){super(null);this.image={data:t,width:e,height:n,depth:r},this.magFilter=he,this.minFilter=he,this.wrapR=Me,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}No.prototype.isDataTexture2DArray=!0;class ko extends ce{constructor(t=null,e=1,n=1,r=1){super(null);this.image={data:t,width:e,height:n,depth:r},this.magFilter=he,this.minFilter=he,this.wrapR=Me,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ko.prototype.isDataTexture3D=!0;const Bo=new ce,om=new No,lm=new ko,zo=new Lr,Oo=[],Uo=[],Ho=new Float32Array(16),Vo=new Float32Array(9),Go=new Float32Array(4);function ei(i,t,e){const n=i[0];if(n<=0||n>0)return i;const r=t*e;let s=Oo[r];if(s===void 0&&(s=new Float32Array(r),Oo[r]=s),t!==0){n.toArray(s,0);for(let a=1,o=0;a!==t;++a)o+=e,i[a].toArray(s,o)}return s}function ve(i,t){if(i.length!==t.length)return!1;for(let e=0,n=i.length;e<n;e++)if(i[e]!==t[e])return!1;return!0}function pe(i,t){for(let e=0,n=t.length;e<n;e++)i[e]=t[e]}function Wo(i,t){let e=Uo[t];e===void 0&&(e=new Int32Array(t),Uo[t]=e);for(let n=0;n!==t;++n)e[n]=i.allocateTextureUnit();return e}function cm(i,t){const e=this.cache;e[0]!==t&&(i.uniform1f(this.addr,t),e[0]=t)}function um(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(ve(e,t))return;i.uniform2fv(this.addr,t),pe(e,t)}}function hm(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(i.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(ve(e,t))return;i.uniform3fv(this.addr,t),pe(e,t)}}function dm(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(ve(e,t))return;i.uniform4fv(this.addr,t),pe(e,t)}}function fm(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(ve(e,t))return;i.uniformMatrix2fv(this.addr,!1,t),pe(e,t)}else{if(ve(e,n))return;Go.set(n),i.uniformMatrix2fv(this.addr,!1,Go),pe(e,n)}}function pm(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(ve(e,t))return;i.uniformMatrix3fv(this.addr,!1,t),pe(e,t)}else{if(ve(e,n))return;Vo.set(n),i.uniformMatrix3fv(this.addr,!1,Vo),pe(e,n)}}function mm(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(ve(e,t))return;i.uniformMatrix4fv(this.addr,!1,t),pe(e,t)}else{if(ve(e,n))return;Ho.set(n),i.uniformMatrix4fv(this.addr,!1,Ho),pe(e,n)}}function gm(i,t){const e=this.cache;e[0]!==t&&(i.uniform1i(this.addr,t),e[0]=t)}function xm(i,t){const e=this.cache;ve(e,t)||(i.uniform2iv(this.addr,t),pe(e,t))}function ym(i,t){const e=this.cache;ve(e,t)||(i.uniform3iv(this.addr,t),pe(e,t))}function vm(i,t){const e=this.cache;ve(e,t)||(i.uniform4iv(this.addr,t),pe(e,t))}function _m(i,t){const e=this.cache;e[0]!==t&&(i.uniform1ui(this.addr,t),e[0]=t)}function bm(i,t){const e=this.cache;ve(e,t)||(i.uniform2uiv(this.addr,t),pe(e,t))}function wm(i,t){const e=this.cache;ve(e,t)||(i.uniform3uiv(this.addr,t),pe(e,t))}function Mm(i,t){const e=this.cache;ve(e,t)||(i.uniform4uiv(this.addr,t),pe(e,t))}function Sm(i,t,e){const n=this.cache,r=e.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),e.safeSetTexture2D(t||Bo,r)}function Em(i,t,e){const n=this.cache,r=e.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),e.setTexture3D(t||lm,r)}function Tm(i,t,e){const n=this.cache,r=e.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),e.safeSetTextureCube(t||zo,r)}function Am(i,t,e){const n=this.cache,r=e.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),e.setTexture2DArray(t||om,r)}function Lm(i){switch(i){case 5126:return cm;case 35664:return um;case 35665:return hm;case 35666:return dm;case 35674:return fm;case 35675:return pm;case 35676:return mm;case 5124:case 35670:return gm;case 35667:case 35671:return xm;case 35668:case 35672:return ym;case 35669:case 35673:return vm;case 5125:return _m;case 36294:return bm;case 36295:return wm;case 36296:return Mm;case 35678:case 36198:case 36298:case 36306:case 35682:return Sm;case 35679:case 36299:case 36307:return Em;case 35680:case 36300:case 36308:case 36293:return Tm;case 36289:case 36303:case 36311:case 36292:return Am}}function Cm(i,t){i.uniform1fv(this.addr,t)}function Rm(i,t){const e=ei(t,this.size,2);i.uniform2fv(this.addr,e)}function Pm(i,t){const e=ei(t,this.size,3);i.uniform3fv(this.addr,e)}function Im(i,t){const e=ei(t,this.size,4);i.uniform4fv(this.addr,e)}function Dm(i,t){const e=ei(t,this.size,4);i.uniformMatrix2fv(this.addr,!1,e)}function Fm(i,t){const e=ei(t,this.size,9);i.uniformMatrix3fv(this.addr,!1,e)}function Nm(i,t){const e=ei(t,this.size,16);i.uniformMatrix4fv(this.addr,!1,e)}function km(i,t){i.uniform1iv(this.addr,t)}function Bm(i,t){i.uniform2iv(this.addr,t)}function zm(i,t){i.uniform3iv(this.addr,t)}function Om(i,t){i.uniform4iv(this.addr,t)}function Um(i,t){i.uniform1uiv(this.addr,t)}function Hm(i,t){i.uniform2uiv(this.addr,t)}function Vm(i,t){i.uniform3uiv(this.addr,t)}function Gm(i,t){i.uniform4uiv(this.addr,t)}function Wm(i,t,e){const n=t.length,r=Wo(e,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)e.safeSetTexture2D(t[s]||Bo,r[s])}function qm(i,t,e){const n=t.length,r=Wo(e,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)e.safeSetTextureCube(t[s]||zo,r[s])}function Xm(i){switch(i){case 5126:return Cm;case 35664:return Rm;case 35665:return Pm;case 35666:return Im;case 35674:return Dm;case 35675:return Fm;case 35676:return Nm;case 5124:case 35670:return km;case 35667:case 35671:return Bm;case 35668:case 35672:return zm;case 35669:case 35673:return Om;case 5125:return Um;case 36294:return Hm;case 36295:return Vm;case 36296:return Gm;case 35678:case 36198:case 36298:case 36306:case 35682:return Wm;case 35680:case 36300:case 36308:case 36293:return qm}}function jm(i,t,e){this.id=i,this.addr=e,this.cache=[],this.setValue=Lm(t.type)}function qo(i,t,e){this.id=i,this.addr=e,this.cache=[],this.size=t.size,this.setValue=Xm(t.type)}qo.prototype.updateCache=function(i){const t=this.cache;i instanceof Float32Array&&t.length!==i.length&&(this.cache=new Float32Array(i.length)),pe(t,i)};function Xo(i){this.id=i,this.seq=[],this.map={}}Xo.prototype.setValue=function(i,t,e){const n=this.seq;for(let r=0,s=n.length;r!==s;++r){const a=n[r];a.setValue(i,t[a.id],e)}};const Gs=/(\w+)(\])?(\[|\.)?/g;function jo(i,t){i.seq.push(t),i.map[t.id]=t}function Ym(i,t,e){const n=i.name,r=n.length;for(Gs.lastIndex=0;;){const s=Gs.exec(n),a=Gs.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===r){jo(e,c===void 0?new jm(o,i,t):new qo(o,i,t));break}else{let h=e.map[o];h===void 0&&(h=new Xo(o),jo(e,h)),e=h}}}function hn(i,t){this.seq=[],this.map={};const e=i.getProgramParameter(t,35718);for(let n=0;n<e;++n){const r=i.getActiveUniform(t,n),s=i.getUniformLocation(t,r.name);Ym(r,s,this)}}hn.prototype.setValue=function(i,t,e,n){const r=this.map[t];r!==void 0&&r.setValue(i,e,n)};hn.prototype.setOptional=function(i,t,e){const n=t[e];n!==void 0&&this.setValue(i,e,n)};hn.upload=function(i,t,e,n){for(let r=0,s=t.length;r!==s;++r){const a=t[r],o=e[a.id];o.needsUpdate!==!1&&a.setValue(i,o.value,n)}};hn.seqWithValue=function(i,t){const e=[];for(let n=0,r=i.length;n!==r;++n){const s=i[n];s.id in t&&e.push(s)}return e};function Yo(i,t,e){const n=i.createShader(t);return i.shaderSource(n,e),i.compileShader(n),n}let Zm=0;function Jm(i){const t=i.split(`
`);for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join(`
`)}function Zo(i){switch(i){case Ei:return["Linear","( value )"];case po:return["sRGB","( value )"];case Yh:return["RGBE","( value )"];case Jh:return["RGBM","( value, 7.0 )"];case Qh:return["RGBM","( value, 16.0 )"];case $h:return["RGBD","( value, 256.0 )"];case jh:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Zh:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",i),["Linear","( value )"]}}function Jo(i,t,e){const n=i.getShaderParameter(t,35713),r=i.getShaderInfoLog(t).trim();if(n&&r==="")return"";const s=i.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+e+`
`+r+Jm(s)}function Ii(i,t){const e=Zo(t);return"vec4 "+i+"( vec4 value ) { return "+e[0]+"ToLinear"+e[1]+"; }"}function Qm(i,t){const e=Zo(t);return"vec4 "+i+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function $m(i,t){let e;switch(t){case Xu:e="Linear";break;case ju:e="Reinhard";break;case Yu:e="OptimizedCineon";break;case Zu:e="ACESFilmic";break;case Ju:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+i+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function Km(i){return[i.extensionDerivatives||i.envMapCubeUV||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission>0)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Di).join(`
`)}function tg(i){const t=[];for(const e in i){const n=i[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function eg(i,t){const e={},n=i.getProgramParameter(t,35721);for(let r=0;r<n;r++){const a=i.getActiveAttrib(t,r).name;e[a]=i.getAttribLocation(t,a)}return e}function Di(i){return i!==""}function Qo(i,t){return i.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function $o(i,t){return i.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const ng=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ws(i){return i.replace(ng,ig)}function ig(i,t){const e=Dt[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return Ws(e)}const rg=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,sg=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ko(i){return i.replace(sg,tl).replace(rg,ag)}function ag(i,t,e,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),tl(i,t,e,n)}function tl(i,t,e,n){let r="";for(let s=parseInt(t);s<parseInt(e);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function el(i){let t="precision "+i.precision+` float;
precision `+i.precision+" int;";return i.precision==="highp"?t+=`
#define HIGH_PRECISION`:i.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function og(i){let t="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Va?t="SHADOWMAP_TYPE_PCF":i.shadowMapType===Su?t="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===vi&&(t="SHADOWMAP_TYPE_VSM"),t}function lg(i){let t="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case rs:case ss:t="ENVMAP_TYPE_CUBE";break;case as:case os:t="ENVMAP_TYPE_CUBE_UV";break}return t}function cg(i){let t="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case ss:case os:t="ENVMAP_MODE_REFRACTION";break}return t}function ug(i){let t="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case ir:t="ENVMAP_BLENDING_MULTIPLY";break;case Wu:t="ENVMAP_BLENDING_MIX";break;case qu:t="ENVMAP_BLENDING_ADD";break}return t}function hg(i,t,e,n){const r=i.getContext(),s=e.defines;let a=e.vertexShader,o=e.fragmentShader;const l=og(e),c=lg(e),u=cg(e),h=ug(e),f=i.gammaFactor>0?i.gammaFactor:1,d=e.isWebGL2?"":Km(e),p=tg(s),x=r.createProgram();let v,m,g=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(v=[p].filter(Di).join(`
`),v.length>0&&(v+=`
`),m=[d,p].filter(Di).join(`
`),m.length>0&&(m+=`
`)):(v=[el(e),"#define SHADER_NAME "+e.shaderName,p,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+e.maxBones,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Di).join(`
`),m=[d,el(e),"#define SHADER_NAME "+e.shaderName,p,e.alphaTest?"#define ALPHATEST "+e.alphaTest+(e.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.sheen?"#define USE_SHEEN":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Pn?"#define TONE_MAPPING":"",e.toneMapping!==Pn?Dt.tonemapping_pars_fragment:"",e.toneMapping!==Pn?$m("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",Dt.encodings_pars_fragment,e.map?Ii("mapTexelToLinear",e.mapEncoding):"",e.matcap?Ii("matcapTexelToLinear",e.matcapEncoding):"",e.envMap?Ii("envMapTexelToLinear",e.envMapEncoding):"",e.emissiveMap?Ii("emissiveMapTexelToLinear",e.emissiveMapEncoding):"",e.lightMap?Ii("lightMapTexelToLinear",e.lightMapEncoding):"",Qm("linearToOutputTexel",e.outputEncoding),e.depthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Di).join(`
`)),a=Ws(a),a=Qo(a,e),a=$o(a,e),o=Ws(o),o=Qo(o,e),o=$o(o,e),a=Ko(a),o=Ko(o),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(g=`#version 300 es
`,v=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,m=["#define varying in",e.glslVersion===mo?"":"out highp vec4 pc_fragColor;",e.glslVersion===mo?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const M=g+v+a,C=g+m+o,T=Yo(r,35633,M),y=Yo(r,35632,C);if(r.attachShader(x,T),r.attachShader(x,y),e.index0AttributeName!==void 0?r.bindAttribLocation(x,0,e.index0AttributeName):e.morphTargets===!0&&r.bindAttribLocation(x,0,"position"),r.linkProgram(x),i.debug.checkShaderErrors){const H=r.getProgramInfoLog(x).trim(),X=r.getShaderInfoLog(T).trim(),k=r.getShaderInfoLog(y).trim();let Z=!0,N=!0;if(r.getProgramParameter(x,35714)===!1){Z=!1;const O=Jo(r,T,"vertex"),P=Jo(r,y,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(x,35715),"gl.getProgramInfoLog",H,O,P)}else H!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",H):(X===""||k==="")&&(N=!1);N&&(this.diagnostics={runnable:Z,programLog:H,vertexShader:{log:X,prefix:v},fragmentShader:{log:k,prefix:m}})}r.deleteShader(T),r.deleteShader(y);let D;this.getUniforms=function(){return D===void 0&&(D=new hn(r,x)),D};let z;return this.getAttributes=function(){return z===void 0&&(z=eg(r,x)),z},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(x),this.program=void 0},this.name=e.shaderName,this.id=Zm++,this.cacheKey=t,this.usedTimes=1,this.program=x,this.vertexShader=T,this.fragmentShader=y,this}function dg(i,t,e,n,r,s){const a=[],o=n.isWebGL2,l=n.logarithmicDepthBuffer,c=n.floatVertexTextures,u=n.maxVertexUniforms,h=n.vertexTextures;let f=n.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmission","transmissionMap","thicknessMap"];function x(y){const z=y.skeleton.bones;if(c)return 1024;{const X=Math.floor((u-20)/4),k=Math.min(X,z.length);return k<z.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+z.length+" bones. This GPU supports "+k+"."),0):k}}function v(y){let D;return y&&y.isTexture?D=y.encoding:y&&y.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),D=y.texture.encoding):D=Ei,D}function m(y,D,z,H,X){const k=H.fog,Z=y.isMeshStandardMaterial?H.environment:null,N=t.get(y.envMap||Z),O=d[y.type],P=X.isSkinnedMesh?x(X):0;y.precision!==null&&(f=n.getMaxPrecision(y.precision),f!==y.precision&&console.warn("THREE.WebGLProgram.getParameters:",y.precision,"not supported, using",f,"instead."));let R,V;if(O){const et=We[O];R=et.vertexShader,V=et.fragmentShader}else R=y.vertexShader,V=y.fragmentShader;const Y=i.getRenderTarget();return{isWebGL2:o,shaderID:O,shaderName:y.type,vertexShader:R,fragmentShader:V,defines:y.defines,isRawShaderMaterial:y.isRawShaderMaterial===!0,glslVersion:y.glslVersion,precision:f,instancing:X.isInstancedMesh===!0,instancingColor:X.isInstancedMesh===!0&&X.instanceColor!==null,supportsVertexTextures:h,outputEncoding:Y!==null?v(Y.texture):i.outputEncoding,map:!!y.map,mapEncoding:v(y.map),matcap:!!y.matcap,matcapEncoding:v(y.matcap),envMap:!!N,envMapMode:N&&N.mapping,envMapEncoding:v(N),envMapCubeUV:!!N&&(N.mapping===as||N.mapping===os),lightMap:!!y.lightMap,lightMapEncoding:v(y.lightMap),aoMap:!!y.aoMap,emissiveMap:!!y.emissiveMap,emissiveMapEncoding:v(y.emissiveMap),bumpMap:!!y.bumpMap,normalMap:!!y.normalMap,objectSpaceNormalMap:y.normalMapType===ed,tangentSpaceNormalMap:y.normalMapType===kn,clearcoatMap:!!y.clearcoatMap,clearcoatRoughnessMap:!!y.clearcoatRoughnessMap,clearcoatNormalMap:!!y.clearcoatNormalMap,displacementMap:!!y.displacementMap,roughnessMap:!!y.roughnessMap,metalnessMap:!!y.metalnessMap,specularMap:!!y.specularMap,alphaMap:!!y.alphaMap,gradientMap:!!y.gradientMap,sheen:!!y.sheen,transmission:!!y.transmission,transmissionMap:!!y.transmissionMap,thicknessMap:!!y.thicknessMap,combine:y.combine,vertexTangents:y.normalMap&&y.vertexTangents,vertexColors:y.vertexColors,vertexAlphas:y.vertexColors===!0&&X.geometry&&X.geometry.attributes.color&&X.geometry.attributes.color.itemSize===4,vertexUvs:!!y.map||!!y.bumpMap||!!y.normalMap||!!y.specularMap||!!y.alphaMap||!!y.emissiveMap||!!y.roughnessMap||!!y.metalnessMap||!!y.clearcoatMap||!!y.clearcoatRoughnessMap||!!y.clearcoatNormalMap||!!y.displacementMap||!!y.transmissionMap||!!y.thicknessMap,uvsVertexOnly:!(!!y.map||!!y.bumpMap||!!y.normalMap||!!y.specularMap||!!y.alphaMap||!!y.emissiveMap||!!y.roughnessMap||!!y.metalnessMap||!!y.clearcoatNormalMap||!!y.transmission||!!y.transmissionMap||!!y.thicknessMap)&&!!y.displacementMap,fog:!!k,useFog:y.fog,fogExp2:k&&k.isFogExp2,flatShading:!!y.flatShading,sizeAttenuation:y.sizeAttenuation,logarithmicDepthBuffer:l,skinning:X.isSkinnedMesh===!0&&P>0,maxBones:P,useVertexTexture:c,morphTargets:y.morphTargets,morphNormals:y.morphNormals,numDirLights:D.directional.length,numPointLights:D.point.length,numSpotLights:D.spot.length,numRectAreaLights:D.rectArea.length,numHemiLights:D.hemi.length,numDirLightShadows:D.directionalShadowMap.length,numPointLightShadows:D.pointShadowMap.length,numSpotLightShadows:D.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:y.dithering,shadowMapEnabled:i.shadowMap.enabled&&z.length>0,shadowMapType:i.shadowMap.type,toneMapping:y.toneMapped?i.toneMapping:Pn,physicallyCorrectLights:i.physicallyCorrectLights,premultipliedAlpha:y.premultipliedAlpha,alphaTest:y.alphaTest,doubleSided:y.side===Cn,flipSided:y.side===ie,depthPacking:y.depthPacking!==void 0?y.depthPacking:!1,index0AttributeName:y.index0AttributeName,extensionDerivatives:y.extensions&&y.extensions.derivatives,extensionFragDepth:y.extensions&&y.extensions.fragDepth,extensionDrawBuffers:y.extensions&&y.extensions.drawBuffers,extensionShaderTextureLOD:y.extensions&&y.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||e.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||e.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||e.has("EXT_shader_texture_lod"),customProgramCacheKey:y.customProgramCacheKey()}}function g(y){const D=[];if(y.shaderID?D.push(y.shaderID):(D.push(y.fragmentShader),D.push(y.vertexShader)),y.defines!==void 0)for(const z in y.defines)D.push(z),D.push(y.defines[z]);if(y.isRawShaderMaterial===!1){for(let z=0;z<p.length;z++)D.push(y[p[z]]);D.push(i.outputEncoding),D.push(i.gammaFactor)}return D.push(y.customProgramCacheKey),D.join()}function M(y){const D=d[y.type];let z;if(D){const H=We[D];z=vd.clone(H.uniforms)}else z=y.uniforms;return z}function C(y,D){let z;for(let H=0,X=a.length;H<X;H++){const k=a[H];if(k.cacheKey===D){z=k,++z.usedTimes;break}}return z===void 0&&(z=new hg(i,D,y,r),a.push(z)),z}function T(y){if(--y.usedTimes==0){const D=a.indexOf(y);a[D]=a[a.length-1],a.pop(),y.destroy()}}return{getParameters:m,getProgramCacheKey:g,getUniforms:M,acquireProgram:C,releaseProgram:T,programs:a}}function fg(){let i=new WeakMap;function t(s){let a=i.get(s);return a===void 0&&(a={},i.set(s,a)),a}function e(s){i.delete(s)}function n(s,a,o){i.get(s)[a]=o}function r(){i=new WeakMap}return{get:t,remove:e,update:n,dispose:r}}function pg(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.program!==t.program?i.program.id-t.program.id:i.material.id!==t.material.id?i.material.id-t.material.id:i.z!==t.z?i.z-t.z:i.id-t.id}function nl(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.z!==t.z?t.z-i.z:i.id-t.id}function il(i){const t=[];let e=0;const n=[],r=[],s=[],a={id:-1};function o(){e=0,n.length=0,r.length=0,s.length=0}function l(d,p,x,v,m,g){let M=t[e];const C=i.get(x);return M===void 0?(M={id:d.id,object:d,geometry:p,material:x,program:C.program||a,groupOrder:v,renderOrder:d.renderOrder,z:m,group:g},t[e]=M):(M.id=d.id,M.object=d,M.geometry=p,M.material=x,M.program=C.program||a,M.groupOrder=v,M.renderOrder=d.renderOrder,M.z=m,M.group=g),e++,M}function c(d,p,x,v,m,g){const M=l(d,p,x,v,m,g);x.transmission>0?r.push(M):x.transparent===!0?s.push(M):n.push(M)}function u(d,p,x,v,m,g){const M=l(d,p,x,v,m,g);x.transmission>0?r.unshift(M):x.transparent===!0?s.unshift(M):n.unshift(M)}function h(d,p){n.length>1&&n.sort(d||pg),r.length>1&&r.sort(p||nl),s.length>1&&s.sort(p||nl)}function f(){for(let d=e,p=t.length;d<p;d++){const x=t[d];if(x.id===null)break;x.id=null,x.object=null,x.geometry=null,x.material=null,x.program=null,x.group=null}}return{opaque:n,transmissive:r,transparent:s,init:o,push:c,unshift:u,finish:f,sort:h}}function mg(i){let t=new WeakMap;function e(r,s){let a;return t.has(r)===!1?(a=new il(i),t.set(r,[a])):s>=t.get(r).length?(a=new il(i),t.get(r).push(a)):a=t.get(r)[s],a}function n(){t=new WeakMap}return{get:e,dispose:n}}function gg(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new A,color:new pt};break;case"SpotLight":e={position:new A,direction:new A,color:new pt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new A,color:new pt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new A,skyColor:new pt,groundColor:new pt};break;case"RectAreaLight":e={color:new pt,position:new A,halfWidth:new A,halfHeight:new A};break}return i[t.id]=e,e}}}function xg(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new rt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new rt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new rt,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[t.id]=e,e}}}let yg=0;function vg(i,t){return(t.castShadow?1:0)-(i.castShadow?1:0)}function _g(i,t){const e=new gg,n=xg(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)r.probe.push(new A);const s=new A,a=new vt,o=new vt;function l(u){let h=0,f=0,d=0;for(let D=0;D<9;D++)r.probe[D].set(0,0,0);let p=0,x=0,v=0,m=0,g=0,M=0,C=0,T=0;u.sort(vg);for(let D=0,z=u.length;D<z;D++){const H=u[D],X=H.color,k=H.intensity,Z=H.distance,N=H.shadow&&H.shadow.map?H.shadow.map.texture:null;if(H.isAmbientLight)h+=X.r*k,f+=X.g*k,d+=X.b*k;else if(H.isLightProbe)for(let O=0;O<9;O++)r.probe[O].addScaledVector(H.sh.coefficients[O],k);else if(H.isDirectionalLight){const O=e.get(H);if(O.color.copy(H.color).multiplyScalar(H.intensity),H.castShadow){const P=H.shadow,R=n.get(H);R.shadowBias=P.bias,R.shadowNormalBias=P.normalBias,R.shadowRadius=P.radius,R.shadowMapSize=P.mapSize,r.directionalShadow[p]=R,r.directionalShadowMap[p]=N,r.directionalShadowMatrix[p]=H.shadow.matrix,M++}r.directional[p]=O,p++}else if(H.isSpotLight){const O=e.get(H);if(O.position.setFromMatrixPosition(H.matrixWorld),O.color.copy(X).multiplyScalar(k),O.distance=Z,O.coneCos=Math.cos(H.angle),O.penumbraCos=Math.cos(H.angle*(1-H.penumbra)),O.decay=H.decay,H.castShadow){const P=H.shadow,R=n.get(H);R.shadowBias=P.bias,R.shadowNormalBias=P.normalBias,R.shadowRadius=P.radius,R.shadowMapSize=P.mapSize,r.spotShadow[v]=R,r.spotShadowMap[v]=N,r.spotShadowMatrix[v]=H.shadow.matrix,T++}r.spot[v]=O,v++}else if(H.isRectAreaLight){const O=e.get(H);O.color.copy(X).multiplyScalar(k),O.halfWidth.set(H.width*.5,0,0),O.halfHeight.set(0,H.height*.5,0),r.rectArea[m]=O,m++}else if(H.isPointLight){const O=e.get(H);if(O.color.copy(H.color).multiplyScalar(H.intensity),O.distance=H.distance,O.decay=H.decay,H.castShadow){const P=H.shadow,R=n.get(H);R.shadowBias=P.bias,R.shadowNormalBias=P.normalBias,R.shadowRadius=P.radius,R.shadowMapSize=P.mapSize,R.shadowCameraNear=P.camera.near,R.shadowCameraFar=P.camera.far,r.pointShadow[x]=R,r.pointShadowMap[x]=N,r.pointShadowMatrix[x]=H.shadow.matrix,C++}r.point[x]=O,x++}else if(H.isHemisphereLight){const O=e.get(H);O.skyColor.copy(H.color).multiplyScalar(k),O.groundColor.copy(H.groundColor).multiplyScalar(k),r.hemi[g]=O,g++}}m>0&&(t.isWebGL2||i.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=st.LTC_FLOAT_1,r.rectAreaLTC2=st.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=st.LTC_HALF_1,r.rectAreaLTC2=st.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=h,r.ambient[1]=f,r.ambient[2]=d;const y=r.hash;(y.directionalLength!==p||y.pointLength!==x||y.spotLength!==v||y.rectAreaLength!==m||y.hemiLength!==g||y.numDirectionalShadows!==M||y.numPointShadows!==C||y.numSpotShadows!==T)&&(r.directional.length=p,r.spot.length=v,r.rectArea.length=m,r.point.length=x,r.hemi.length=g,r.directionalShadow.length=M,r.directionalShadowMap.length=M,r.pointShadow.length=C,r.pointShadowMap.length=C,r.spotShadow.length=T,r.spotShadowMap.length=T,r.directionalShadowMatrix.length=M,r.pointShadowMatrix.length=C,r.spotShadowMatrix.length=T,y.directionalLength=p,y.pointLength=x,y.spotLength=v,y.rectAreaLength=m,y.hemiLength=g,y.numDirectionalShadows=M,y.numPointShadows=C,y.numSpotShadows=T,r.version=yg++)}function c(u,h){let f=0,d=0,p=0,x=0,v=0;const m=h.matrixWorldInverse;for(let g=0,M=u.length;g<M;g++){const C=u[g];if(C.isDirectionalLight){const T=r.directional[f];T.direction.setFromMatrixPosition(C.matrixWorld),s.setFromMatrixPosition(C.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(m),f++}else if(C.isSpotLight){const T=r.spot[p];T.position.setFromMatrixPosition(C.matrixWorld),T.position.applyMatrix4(m),T.direction.setFromMatrixPosition(C.matrixWorld),s.setFromMatrixPosition(C.target.matrixWorld),T.direction.sub(s),T.direction.transformDirection(m),p++}else if(C.isRectAreaLight){const T=r.rectArea[x];T.position.setFromMatrixPosition(C.matrixWorld),T.position.applyMatrix4(m),o.identity(),a.copy(C.matrixWorld),a.premultiply(m),o.extractRotation(a),T.halfWidth.set(C.width*.5,0,0),T.halfHeight.set(0,C.height*.5,0),T.halfWidth.applyMatrix4(o),T.halfHeight.applyMatrix4(o),x++}else if(C.isPointLight){const T=r.point[d];T.position.setFromMatrixPosition(C.matrixWorld),T.position.applyMatrix4(m),d++}else if(C.isHemisphereLight){const T=r.hemi[v];T.direction.setFromMatrixPosition(C.matrixWorld),T.direction.transformDirection(m),T.direction.normalize(),v++}}}return{setup:l,setupView:c,state:r}}function rl(i,t){const e=new _g(i,t),n=[],r=[];function s(){n.length=0,r.length=0}function a(h){n.push(h)}function o(h){r.push(h)}function l(){e.setup(n)}function c(h){e.setupView(n,h)}return{init:s,state:{lightsArray:n,shadowsArray:r,lights:e},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function bg(i,t){let e=new WeakMap;function n(s,a=0){let o;return e.has(s)===!1?(o=new rl(i,t),e.set(s,[o])):a>=e.get(s).length?(o=new rl(i,t),e.get(s).push(o)):o=e.get(s)[a],o}function r(){e=new WeakMap}return{get:n,dispose:r}}class sl extends de{constructor(t){super();this.type="MeshDepthMaterial",this.depthPacking=Kh,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}sl.prototype.isMeshDepthMaterial=!0;class al extends de{constructor(t){super();this.type="MeshDistanceMaterial",this.referencePosition=new A,this.nearDistance=1,this.farDistance=1e3,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}al.prototype.isMeshDistanceMaterial=!0;var wg=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,Mg=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function ol(i,t,e){let n=new Rr;const r=new rt,s=new rt,a=new Gt,o=[],l=[],c={},u=e.maxTextureSize,h={0:ie,1:_i,2:Cn},f=new Ln({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new rt},radius:{value:4}},vertexShader:Mg,fragmentShader:wg}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new jt;p.setAttribute("position",new re(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Re(p,f),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Va,this.render=function(y,D,z){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||y.length===0)return;const H=i.getRenderTarget(),X=i.getActiveCubeFace(),k=i.getActiveMipmapLevel(),Z=i.state;Z.setBlending(bi),Z.buffers.color.setClear(1,1,1,1),Z.buffers.depth.setTest(!0),Z.setScissorTest(!1);for(let N=0,O=y.length;N<O;N++){const P=y[N],R=P.shadow;if(R===void 0){console.warn("THREE.WebGLShadowMap:",P,"has no shadow.");continue}if(R.autoUpdate===!1&&R.needsUpdate===!1)continue;r.copy(R.mapSize);const V=R.getFrameExtents();if(r.multiply(V),s.copy(R.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/V.x),r.x=s.x*V.x,R.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/V.y),r.y=s.y*V.y,R.mapSize.y=s.y)),R.map===null&&!R.isPointLightShadow&&this.type===vi){const q={minFilter:Le,magFilter:Le,format:Ve};R.map=new Ze(r.x,r.y,q),R.map.texture.name=P.name+".shadowMap",R.mapPass=new Ze(r.x,r.y,q),R.camera.updateProjectionMatrix()}if(R.map===null){const q={minFilter:he,magFilter:he,format:Ve};R.map=new Ze(r.x,r.y,q),R.map.texture.name=P.name+".shadowMap",R.camera.updateProjectionMatrix()}i.setRenderTarget(R.map),i.clear();const Y=R.getViewportCount();for(let q=0;q<Y;q++){const et=R.getViewport(q);a.set(s.x*et.x,s.y*et.y,s.x*et.z,s.y*et.w),Z.viewport(a),R.updateMatrices(P,q),n=R.getFrustum(),T(D,z,R.camera,P,this.type)}!R.isPointLightShadow&&this.type===vi&&m(R,z),R.needsUpdate=!1}v.needsUpdate=!1,i.setRenderTarget(H,X,k)};function m(y,D){const z=t.update(x);f.uniforms.shadow_pass.value=y.map.texture,f.uniforms.resolution.value=y.mapSize,f.uniforms.radius.value=y.radius,i.setRenderTarget(y.mapPass),i.clear(),i.renderBufferDirect(D,null,z,f,x,null),d.uniforms.shadow_pass.value=y.mapPass.texture,d.uniforms.resolution.value=y.mapSize,d.uniforms.radius.value=y.radius,i.setRenderTarget(y.map),i.clear(),i.renderBufferDirect(D,null,z,d,x,null)}function g(y){const D=y<<0;let z=o[D];return z===void 0&&(z=new sl({depthPacking:td,morphTargets:y}),o[D]=z),z}function M(y){const D=y<<0;let z=l[D];return z===void 0&&(z=new al({morphTargets:y}),l[D]=z),z}function C(y,D,z,H,X,k,Z){let N=null,O=g,P=y.customDepthMaterial;if(H.isPointLight===!0&&(O=M,P=y.customDistanceMaterial),P===void 0){let R=!1;z.morphTargets===!0&&(R=D.morphAttributes&&D.morphAttributes.position&&D.morphAttributes.position.length>0),N=O(R)}else N=P;if(i.localClippingEnabled&&z.clipShadows===!0&&z.clippingPlanes.length!==0){const R=N.uuid,V=z.uuid;let Y=c[R];Y===void 0&&(Y={},c[R]=Y);let q=Y[V];q===void 0&&(q=N.clone(),Y[V]=q),N=q}return N.visible=z.visible,N.wireframe=z.wireframe,Z===vi?N.side=z.shadowSide!==null?z.shadowSide:z.side:N.side=z.shadowSide!==null?z.shadowSide:h[z.side],N.clipShadows=z.clipShadows,N.clippingPlanes=z.clippingPlanes,N.clipIntersection=z.clipIntersection,N.wireframeLinewidth=z.wireframeLinewidth,N.linewidth=z.linewidth,H.isPointLight===!0&&N.isMeshDistanceMaterial===!0&&(N.referencePosition.setFromMatrixPosition(H.matrixWorld),N.nearDistance=X,N.farDistance=k),N}function T(y,D,z,H,X){if(y.visible===!1)return;if(y.layers.test(D.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&X===vi)&&(!y.frustumCulled||n.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,y.matrixWorld);const N=t.update(y),O=y.material;if(Array.isArray(O)){const P=N.groups;for(let R=0,V=P.length;R<V;R++){const Y=P[R],q=O[Y.materialIndex];if(q&&q.visible){const et=C(y,N,q,H,z.near,z.far,X);i.renderBufferDirect(z,null,N,et,y,Y)}}}else if(O.visible){const P=C(y,N,O,H,z.near,z.far,X);i.renderBufferDirect(z,null,N,P,y,null)}}const Z=y.children;for(let N=0,O=Z.length;N<O;N++)T(Z[N],D,z,H,X)}}function Sg(i,t,e){const n=e.isWebGL2;function r(){let F=!1;const L=new Gt;let I=null;const $=new Gt(0,0,0,0);return{setMask:function(K){I!==K&&!F&&(i.colorMask(K,K,K,K),I=K)},setLocked:function(K){F=K},setClear:function(K,Ft,Kt,At,$t){$t===!0&&(K*=At,Ft*=At,Kt*=At),L.set(K,Ft,Kt,At),$.equals(L)===!1&&(i.clearColor(K,Ft,Kt,At),$.copy(L))},reset:function(){F=!1,I=null,$.set(-1,0,0,0)}}}function s(){let F=!1,L=null,I=null,$=null;return{setTest:function(K){K?St(2929):_t(2929)},setMask:function(K){L!==K&&!F&&(i.depthMask(K),L=K)},setFunc:function(K){if(I!==K){if(K)switch(K){case Bu:i.depthFunc(512);break;case zu:i.depthFunc(519);break;case Ou:i.depthFunc(513);break;case is:i.depthFunc(515);break;case Uu:i.depthFunc(514);break;case Hu:i.depthFunc(518);break;case Vu:i.depthFunc(516);break;case Gu:i.depthFunc(517);break;default:i.depthFunc(515)}else i.depthFunc(515);I=K}},setLocked:function(K){F=K},setClear:function(K){$!==K&&(i.clearDepth(K),$=K)},reset:function(){F=!1,L=null,I=null,$=null}}}function a(){let F=!1,L=null,I=null,$=null,K=null,Ft=null,Kt=null,At=null,$t=null;return{setTest:function(Vt){F||(Vt?St(2960):_t(2960))},setMask:function(Vt){L!==Vt&&!F&&(i.stencilMask(Vt),L=Vt)},setFunc:function(Vt,ge,kt){(I!==Vt||$!==ge||K!==kt)&&(i.stencilFunc(Vt,ge,kt),I=Vt,$=ge,K=kt)},setOp:function(Vt,ge,kt){(Ft!==Vt||Kt!==ge||At!==kt)&&(i.stencilOp(Vt,ge,kt),Ft=Vt,Kt=ge,At=kt)},setLocked:function(Vt){F=Vt},setClear:function(Vt){$t!==Vt&&(i.clearStencil(Vt),$t=Vt)},reset:function(){F=!1,L=null,I=null,$=null,K=null,Ft=null,Kt=null,At=null,$t=null}}}const o=new r,l=new s,c=new a;let u={},h=null,f={},d=null,p=!1,x=null,v=null,m=null,g=null,M=null,C=null,T=null,y=!1,D=null,z=null,H=null,X=null,k=null;const Z=i.getParameter(35661);let N=!1,O=0;const P=i.getParameter(7938);P.indexOf("WebGL")!==-1?(O=parseFloat(/^WebGL (\d)/.exec(P)[1]),N=O>=1):P.indexOf("OpenGL ES")!==-1&&(O=parseFloat(/^OpenGL ES (\d)/.exec(P)[1]),N=O>=2);let R=null,V={};const Y=i.getParameter(3088),q=i.getParameter(2978),et=new Gt().fromArray(Y),b=new Gt().fromArray(q);function S(F,L,I){const $=new Uint8Array(4),K=i.createTexture();i.bindTexture(F,K),i.texParameteri(F,10241,9728),i.texParameteri(F,10240,9728);for(let Ft=0;Ft<I;Ft++)i.texImage2D(L+Ft,0,6408,1,1,0,6408,5121,$);return K}const dt={};dt[3553]=S(3553,3553,1),dt[34067]=S(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),St(2929),l.setFunc(is),tt(!1),it(Ha),St(2884),Tt(bi);function St(F){u[F]!==!0&&(i.enable(F),u[F]=!0)}function _t(F){u[F]!==!1&&(i.disable(F),u[F]=!1)}function G(F){F!==h&&(i.bindFramebuffer(36160,F),h=F)}function Bt(F,L){return L===null&&h!==null&&(L=h),f[F]!==L?(i.bindFramebuffer(F,L),f[F]=L,n&&(F===36009&&(f[36160]=L),F===36160&&(f[36009]=L)),!0):!1}function Et(F){return d!==F?(i.useProgram(F),d=F,!0):!1}const mt={[Rn]:32774,[Tu]:32778,[Au]:32779};if(n)mt[ja]=32775,mt[Ya]=32776;else{const F=t.get("EXT_blend_minmax");F!==null&&(mt[ja]=F.MIN_EXT,mt[Ya]=F.MAX_EXT)}const ut={[Lu]:0,[Cu]:1,[Ru]:768,[Za]:770,[ku]:776,[Fu]:774,[Iu]:772,[Pu]:769,[Ja]:771,[Nu]:775,[Du]:773};function Tt(F,L,I,$,K,Ft,Kt,At){if(F===bi){p===!0&&(_t(3042),p=!1);return}if(p===!1&&(St(3042),p=!0),F!==Eu){if(F!==x||At!==y){if((v!==Rn||M!==Rn)&&(i.blendEquation(32774),v=Rn,M=Rn),At)switch(F){case wi:i.blendFuncSeparate(1,771,1,771);break;case Wa:i.blendFunc(1,1);break;case qa:i.blendFuncSeparate(0,0,769,771);break;case Xa:i.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}else switch(F){case wi:i.blendFuncSeparate(770,771,1,771);break;case Wa:i.blendFunc(770,1);break;case qa:i.blendFunc(0,769);break;case Xa:i.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}m=null,g=null,C=null,T=null,x=F,y=At}return}K=K||L,Ft=Ft||I,Kt=Kt||$,(L!==v||K!==M)&&(i.blendEquationSeparate(mt[L],mt[K]),v=L,M=K),(I!==m||$!==g||Ft!==C||Kt!==T)&&(i.blendFuncSeparate(ut[I],ut[$],ut[Ft],ut[Kt]),m=I,g=$,C=Ft,T=Kt),x=F,y=null}function J(F,L){F.side===Cn?_t(2884):St(2884);let I=F.side===ie;L&&(I=!I),tt(I),F.blending===wi&&F.transparent===!1?Tt(bi):Tt(F.blending,F.blendEquation,F.blendSrc,F.blendDst,F.blendEquationAlpha,F.blendSrcAlpha,F.blendDstAlpha,F.premultipliedAlpha),l.setFunc(F.depthFunc),l.setTest(F.depthTest),l.setMask(F.depthWrite),o.setMask(F.colorWrite);const $=F.stencilWrite;c.setTest($),$&&(c.setMask(F.stencilWriteMask),c.setFunc(F.stencilFunc,F.stencilRef,F.stencilFuncMask),c.setOp(F.stencilFail,F.stencilZFail,F.stencilZPass)),ot(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),F.alphaToCoverage===!0?St(32926):_t(32926)}function tt(F){D!==F&&(F?i.frontFace(2304):i.frontFace(2305),D=F)}function it(F){F!==wu?(St(2884),F!==z&&(F===Ha?i.cullFace(1029):F===Mu?i.cullFace(1028):i.cullFace(1032))):_t(2884),z=F}function ht(F){F!==H&&(N&&i.lineWidth(F),H=F)}function ot(F,L,I){F?(St(32823),(X!==L||k!==I)&&(i.polygonOffset(L,I),X=L,k=I)):_t(32823)}function E(F){F?St(3089):_t(3089)}function w(F){F===void 0&&(F=33984+Z-1),R!==F&&(i.activeTexture(F),R=F)}function j(F,L){R===null&&w();let I=V[R];I===void 0&&(I={type:void 0,texture:void 0},V[R]=I),(I.type!==F||I.texture!==L)&&(i.bindTexture(F,L||dt[F]),I.type=F,I.texture=L)}function Q(){const F=V[R];F!==void 0&&F.type!==void 0&&(i.bindTexture(F.type,null),F.type=void 0,F.texture=void 0)}function at(){try{i.compressedTexImage2D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function lt(){try{i.texImage2D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function yt(){try{i.texImage3D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function gt(F){et.equals(F)===!1&&(i.scissor(F.x,F.y,F.z,F.w),et.copy(F))}function Ct(F){b.equals(F)===!1&&(i.viewport(F.x,F.y,F.z,F.w),b.copy(F))}function ct(){i.disable(3042),i.disable(2884),i.disable(2929),i.disable(32823),i.disable(3089),i.disable(2960),i.disable(32926),i.blendEquation(32774),i.blendFunc(1,0),i.blendFuncSeparate(1,0,1,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(513),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(519,0,4294967295),i.stencilOp(7680,7680,7680),i.clearStencil(0),i.cullFace(1029),i.frontFace(2305),i.polygonOffset(0,0),i.activeTexture(33984),i.bindFramebuffer(36160,null),n===!0&&(i.bindFramebuffer(36009,null),i.bindFramebuffer(36008,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),u={},R=null,V={},h=null,f={},d=null,p=!1,x=null,v=null,m=null,g=null,M=null,C=null,T=null,y=!1,D=null,z=null,H=null,X=null,k=null,et.set(0,0,i.canvas.width,i.canvas.height),b.set(0,0,i.canvas.width,i.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:St,disable:_t,bindFramebuffer:Bt,bindXRFramebuffer:G,useProgram:Et,setBlending:Tt,setMaterial:J,setFlipSided:tt,setCullFace:it,setLineWidth:ht,setPolygonOffset:ot,setScissorTest:E,activeTexture:w,bindTexture:j,unbindTexture:Q,compressedTexImage2D:at,texImage2D:lt,texImage3D:yt,scissor:gt,viewport:Ct,reset:ct}}function Eg(i,t,e,n,r,s,a){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,h=r.maxSamples,f=new WeakMap;let d,p=!1;try{p=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(E){}function x(E,w){return p?new OffscreenCanvas(E,w):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function v(E,w,j,Q){let at=1;if((E.width>Q||E.height>Q)&&(at=Q/Math.max(E.width,E.height)),at<1||w===!0)if(typeof HTMLImageElement!="undefined"&&E instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&E instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&E instanceof ImageBitmap){const lt=w?rd:Math.floor,yt=lt(at*E.width),gt=lt(at*E.height);d===void 0&&(d=x(yt,gt));const Ct=j?x(yt,gt):d;return Ct.width=yt,Ct.height=gt,Ct.getContext("2d").drawImage(E,0,0,yt,gt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+E.width+"x"+E.height+") to ("+yt+"x"+gt+")."),Ct}else return"data"in E&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+E.width+"x"+E.height+")."),E;return E}function m(E){return go(E.width)&&go(E.height)}function g(E){return o?!1:E.wrapS!==Me||E.wrapT!==Me||E.minFilter!==he&&E.minFilter!==Le}function M(E,w){return E.generateMipmaps&&w&&E.minFilter!==he&&E.minFilter!==Le}function C(E,w,j,Q,at=1){i.generateMipmap(E);const lt=n.get(w);lt.__maxMipLevel=Math.log2(Math.max(j,Q,at))}function T(E,w,j){if(o===!1)return w;if(E!==null){if(i[E]!==void 0)return i[E];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+E+"'")}let Q=w;return w===6403&&(j===5126&&(Q=33326),j===5131&&(Q=33325),j===5121&&(Q=33321)),w===6407&&(j===5126&&(Q=34837),j===5131&&(Q=34843),j===5121&&(Q=32849)),w===6408&&(j===5126&&(Q=34836),j===5131&&(Q=34842),j===5121&&(Q=32856)),(Q===33325||Q===33326||Q===34842||Q===34836)&&t.get("EXT_color_buffer_float"),Q}function y(E){return E===he||E===to||E===eo?9728:9729}function D(E){const w=E.target;w.removeEventListener("dispose",D),H(w),w.isVideoTexture&&f.delete(w),a.memory.textures--}function z(E){const w=E.target;w.removeEventListener("dispose",z),X(w)}function H(E){const w=n.get(E);w.__webglInit!==void 0&&(i.deleteTexture(w.__webglTexture),n.remove(E))}function X(E){const w=E.texture,j=n.get(E),Q=n.get(w);if(!!E){if(Q.__webglTexture!==void 0&&(i.deleteTexture(Q.__webglTexture),a.memory.textures--),E.depthTexture&&E.depthTexture.dispose(),E.isWebGLCubeRenderTarget)for(let at=0;at<6;at++)i.deleteFramebuffer(j.__webglFramebuffer[at]),j.__webglDepthbuffer&&i.deleteRenderbuffer(j.__webglDepthbuffer[at]);else i.deleteFramebuffer(j.__webglFramebuffer),j.__webglDepthbuffer&&i.deleteRenderbuffer(j.__webglDepthbuffer),j.__webglMultisampledFramebuffer&&i.deleteFramebuffer(j.__webglMultisampledFramebuffer),j.__webglColorRenderbuffer&&i.deleteRenderbuffer(j.__webglColorRenderbuffer),j.__webglDepthRenderbuffer&&i.deleteRenderbuffer(j.__webglDepthRenderbuffer);if(E.isWebGLMultipleRenderTargets)for(let at=0,lt=w.length;at<lt;at++){const yt=n.get(w[at]);yt.__webglTexture&&(i.deleteTexture(yt.__webglTexture),a.memory.textures--),n.remove(w[at])}n.remove(w),n.remove(E)}}let k=0;function Z(){k=0}function N(){const E=k;return E>=l&&console.warn("THREE.WebGLTextures: Trying to use "+E+" texture units while this GPU supports only "+l),k+=1,E}function O(E,w){const j=n.get(E);if(E.isVideoTexture&&J(E),E.version>0&&j.__version!==E.version){const Q=E.image;if(Q===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(Q.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{S(j,E,w);return}}e.activeTexture(33984+w),e.bindTexture(3553,j.__webglTexture)}function P(E,w){const j=n.get(E);if(E.version>0&&j.__version!==E.version){S(j,E,w);return}e.activeTexture(33984+w),e.bindTexture(35866,j.__webglTexture)}function R(E,w){const j=n.get(E);if(E.version>0&&j.__version!==E.version){S(j,E,w);return}e.activeTexture(33984+w),e.bindTexture(32879,j.__webglTexture)}function V(E,w){const j=n.get(E);if(E.version>0&&j.__version!==E.version){dt(j,E,w);return}e.activeTexture(33984+w),e.bindTexture(34067,j.__webglTexture)}const Y={[ls]:10497,[Me]:33071,[cs]:33648},q={[he]:9728,[to]:9984,[eo]:9986,[Le]:9729,[Qu]:9985,[rr]:9987};function et(E,w,j){if(j?(i.texParameteri(E,10242,Y[w.wrapS]),i.texParameteri(E,10243,Y[w.wrapT]),(E===32879||E===35866)&&i.texParameteri(E,32882,Y[w.wrapR]),i.texParameteri(E,10240,q[w.magFilter]),i.texParameteri(E,10241,q[w.minFilter])):(i.texParameteri(E,10242,33071),i.texParameteri(E,10243,33071),(E===32879||E===35866)&&i.texParameteri(E,32882,33071),(w.wrapS!==Me||w.wrapT!==Me)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(E,10240,y(w.magFilter)),i.texParameteri(E,10241,y(w.minFilter)),w.minFilter!==he&&w.minFilter!==Le&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const Q=t.get("EXT_texture_filter_anisotropic");if(w.type===Mn&&t.has("OES_texture_float_linear")===!1||o===!1&&w.type===In&&t.has("OES_texture_half_float_linear")===!1)return;(w.anisotropy>1||n.get(w).__currentAnisotropy)&&(i.texParameterf(E,Q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(w.anisotropy,r.getMaxAnisotropy())),n.get(w).__currentAnisotropy=w.anisotropy)}}function b(E,w){E.__webglInit===void 0&&(E.__webglInit=!0,w.addEventListener("dispose",D),E.__webglTexture=i.createTexture(),a.memory.textures++)}function S(E,w,j){let Q=3553;w.isDataTexture2DArray&&(Q=35866),w.isDataTexture3D&&(Q=32879),b(E,w),e.activeTexture(33984+j),e.bindTexture(Q,E.__webglTexture),i.pixelStorei(37440,w.flipY),i.pixelStorei(37441,w.premultiplyAlpha),i.pixelStorei(3317,w.unpackAlignment),i.pixelStorei(37443,0);const at=g(w)&&m(w.image)===!1,lt=v(w.image,at,!1,u),yt=m(lt)||o,gt=s.convert(w.format);let Ct=s.convert(w.type),ct=T(w.internalFormat,gt,Ct);et(Q,w,yt);let F;const L=w.mipmaps;if(w.isDepthTexture)ct=6402,o?w.type===Mn?ct=36012:w.type===or?ct=33190:w.type===Mi?ct=35056:ct=33189:w.type===Mn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),w.format===Dn&&ct===6402&&w.type!==ar&&w.type!==or&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),w.type=ar,Ct=s.convert(w.type)),w.format===Si&&ct===6402&&(ct=34041,w.type!==Mi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),w.type=Mi,Ct=s.convert(w.type))),e.texImage2D(3553,0,ct,lt.width,lt.height,0,gt,Ct,null);else if(w.isDataTexture)if(L.length>0&&yt){for(let I=0,$=L.length;I<$;I++)F=L[I],e.texImage2D(3553,I,ct,F.width,F.height,0,gt,Ct,F.data);w.generateMipmaps=!1,E.__maxMipLevel=L.length-1}else e.texImage2D(3553,0,ct,lt.width,lt.height,0,gt,Ct,lt.data),E.__maxMipLevel=0;else if(w.isCompressedTexture){for(let I=0,$=L.length;I<$;I++)F=L[I],w.format!==Ve&&w.format!==Sn?gt!==null?e.compressedTexImage2D(3553,I,ct,F.width,F.height,0,F.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):e.texImage2D(3553,I,ct,F.width,F.height,0,gt,Ct,F.data);E.__maxMipLevel=L.length-1}else if(w.isDataTexture2DArray)e.texImage3D(35866,0,ct,lt.width,lt.height,lt.depth,0,gt,Ct,lt.data),E.__maxMipLevel=0;else if(w.isDataTexture3D)e.texImage3D(32879,0,ct,lt.width,lt.height,lt.depth,0,gt,Ct,lt.data),E.__maxMipLevel=0;else if(L.length>0&&yt){for(let I=0,$=L.length;I<$;I++)F=L[I],e.texImage2D(3553,I,ct,gt,Ct,F);w.generateMipmaps=!1,E.__maxMipLevel=L.length-1}else e.texImage2D(3553,0,ct,gt,Ct,lt),E.__maxMipLevel=0;M(w,yt)&&C(Q,w,lt.width,lt.height),E.__version=w.version,w.onUpdate&&w.onUpdate(w)}function dt(E,w,j){if(w.image.length!==6)return;b(E,w),e.activeTexture(33984+j),e.bindTexture(34067,E.__webglTexture),i.pixelStorei(37440,w.flipY),i.pixelStorei(37441,w.premultiplyAlpha),i.pixelStorei(3317,w.unpackAlignment),i.pixelStorei(37443,0);const Q=w&&(w.isCompressedTexture||w.image[0].isCompressedTexture),at=w.image[0]&&w.image[0].isDataTexture,lt=[];for(let I=0;I<6;I++)!Q&&!at?lt[I]=v(w.image[I],!1,!0,c):lt[I]=at?w.image[I].image:w.image[I];const yt=lt[0],gt=m(yt)||o,Ct=s.convert(w.format),ct=s.convert(w.type),F=T(w.internalFormat,Ct,ct);et(34067,w,gt);let L;if(Q){for(let I=0;I<6;I++){L=lt[I].mipmaps;for(let $=0;$<L.length;$++){const K=L[$];w.format!==Ve&&w.format!==Sn?Ct!==null?e.compressedTexImage2D(34069+I,$,F,K.width,K.height,0,K.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):e.texImage2D(34069+I,$,F,K.width,K.height,0,Ct,ct,K.data)}}E.__maxMipLevel=L.length-1}else{L=w.mipmaps;for(let I=0;I<6;I++)if(at){e.texImage2D(34069+I,0,F,lt[I].width,lt[I].height,0,Ct,ct,lt[I].data);for(let $=0;$<L.length;$++){const Ft=L[$].image[I].image;e.texImage2D(34069+I,$+1,F,Ft.width,Ft.height,0,Ct,ct,Ft.data)}}else{e.texImage2D(34069+I,0,F,Ct,ct,lt[I]);for(let $=0;$<L.length;$++){const K=L[$];e.texImage2D(34069+I,$+1,F,Ct,ct,K.image[I])}}E.__maxMipLevel=L.length}M(w,gt)&&C(34067,w,yt.width,yt.height),E.__version=w.version,w.onUpdate&&w.onUpdate(w)}function St(E,w,j,Q,at){const lt=s.convert(j.format),yt=s.convert(j.type),gt=T(j.internalFormat,lt,yt);at===32879||at===35866?e.texImage3D(at,0,gt,w.width,w.height,w.depth,0,lt,yt,null):e.texImage2D(at,0,gt,w.width,w.height,0,lt,yt,null),e.bindFramebuffer(36160,E),i.framebufferTexture2D(36160,Q,at,n.get(j).__webglTexture,0),e.bindFramebuffer(36160,null)}function _t(E,w,j){if(i.bindRenderbuffer(36161,E),w.depthBuffer&&!w.stencilBuffer){let Q=33189;if(j){const at=w.depthTexture;at&&at.isDepthTexture&&(at.type===Mn?Q=36012:at.type===or&&(Q=33190));const lt=Tt(w);i.renderbufferStorageMultisample(36161,lt,Q,w.width,w.height)}else i.renderbufferStorage(36161,Q,w.width,w.height);i.framebufferRenderbuffer(36160,36096,36161,E)}else if(w.depthBuffer&&w.stencilBuffer){if(j){const Q=Tt(w);i.renderbufferStorageMultisample(36161,Q,35056,w.width,w.height)}else i.renderbufferStorage(36161,34041,w.width,w.height);i.framebufferRenderbuffer(36160,33306,36161,E)}else{const Q=w.isWebGLMultipleRenderTargets===!0?w.texture[0]:w.texture,at=s.convert(Q.format),lt=s.convert(Q.type),yt=T(Q.internalFormat,at,lt);if(j){const gt=Tt(w);i.renderbufferStorageMultisample(36161,gt,yt,w.width,w.height)}else i.renderbufferStorage(36161,yt,w.width,w.height)}i.bindRenderbuffer(36161,null)}function G(E,w){if(w&&w.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,E),!(w.depthTexture&&w.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(w.depthTexture).__webglTexture||w.depthTexture.image.width!==w.width||w.depthTexture.image.height!==w.height)&&(w.depthTexture.image.width=w.width,w.depthTexture.image.height=w.height,w.depthTexture.needsUpdate=!0),O(w.depthTexture,0);const Q=n.get(w.depthTexture).__webglTexture;if(w.depthTexture.format===Dn)i.framebufferTexture2D(36160,36096,3553,Q,0);else if(w.depthTexture.format===Si)i.framebufferTexture2D(36160,33306,3553,Q,0);else throw new Error("Unknown depthTexture format")}function Bt(E){const w=n.get(E),j=E.isWebGLCubeRenderTarget===!0;if(E.depthTexture){if(j)throw new Error("target.depthTexture not supported in Cube render targets");G(w.__webglFramebuffer,E)}else if(j){w.__webglDepthbuffer=[];for(let Q=0;Q<6;Q++)e.bindFramebuffer(36160,w.__webglFramebuffer[Q]),w.__webglDepthbuffer[Q]=i.createRenderbuffer(),_t(w.__webglDepthbuffer[Q],E,!1)}else e.bindFramebuffer(36160,w.__webglFramebuffer),w.__webglDepthbuffer=i.createRenderbuffer(),_t(w.__webglDepthbuffer,E,!1);e.bindFramebuffer(36160,null)}function Et(E){const w=E.texture,j=n.get(E),Q=n.get(w);E.addEventListener("dispose",z),E.isWebGLMultipleRenderTargets!==!0&&(Q.__webglTexture=i.createTexture(),Q.__version=w.version,a.memory.textures++);const at=E.isWebGLCubeRenderTarget===!0,lt=E.isWebGLMultipleRenderTargets===!0,yt=E.isWebGLMultisampleRenderTarget===!0,gt=w.isDataTexture3D||w.isDataTexture2DArray,Ct=m(E)||o;if(o&&w.format===Sn&&(w.type===Mn||w.type===In)&&(w.format=Ve,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),at){j.__webglFramebuffer=[];for(let ct=0;ct<6;ct++)j.__webglFramebuffer[ct]=i.createFramebuffer()}else if(j.__webglFramebuffer=i.createFramebuffer(),lt)if(r.drawBuffers){const ct=E.texture;for(let F=0,L=ct.length;F<L;F++){const I=n.get(ct[F]);I.__webglTexture===void 0&&(I.__webglTexture=i.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(yt)if(o){j.__webglMultisampledFramebuffer=i.createFramebuffer(),j.__webglColorRenderbuffer=i.createRenderbuffer(),i.bindRenderbuffer(36161,j.__webglColorRenderbuffer);const ct=s.convert(w.format),F=s.convert(w.type),L=T(w.internalFormat,ct,F),I=Tt(E);i.renderbufferStorageMultisample(36161,I,L,E.width,E.height),e.bindFramebuffer(36160,j.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064,36161,j.__webglColorRenderbuffer),i.bindRenderbuffer(36161,null),E.depthBuffer&&(j.__webglDepthRenderbuffer=i.createRenderbuffer(),_t(j.__webglDepthRenderbuffer,E,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(at){e.bindTexture(34067,Q.__webglTexture),et(34067,w,Ct);for(let ct=0;ct<6;ct++)St(j.__webglFramebuffer[ct],E,w,36064,34069+ct);M(w,Ct)&&C(34067,w,E.width,E.height),e.bindTexture(34067,null)}else if(lt){const ct=E.texture;for(let F=0,L=ct.length;F<L;F++){const I=ct[F],$=n.get(I);e.bindTexture(3553,$.__webglTexture),et(3553,I,Ct),St(j.__webglFramebuffer,E,I,36064+F,3553),M(I,Ct)&&C(3553,I,E.width,E.height)}e.bindTexture(3553,null)}else{let ct=3553;gt&&(o?ct=w.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),e.bindTexture(ct,Q.__webglTexture),et(ct,w,Ct),St(j.__webglFramebuffer,E,w,36064,ct),M(w,Ct)&&C(ct,w,E.width,E.height,E.depth),e.bindTexture(ct,null)}E.depthBuffer&&Bt(E)}function mt(E){const w=m(E)||o,j=E.isWebGLMultipleRenderTargets===!0?E.texture:[E.texture];for(let Q=0,at=j.length;Q<at;Q++){const lt=j[Q];if(M(lt,w)){const yt=E.isWebGLCubeRenderTarget?34067:3553,gt=n.get(lt).__webglTexture;e.bindTexture(yt,gt),C(yt,lt,E.width,E.height),e.bindTexture(yt,null)}}}function ut(E){if(E.isWebGLMultisampleRenderTarget)if(o){const w=E.width,j=E.height;let Q=16384;E.depthBuffer&&(Q|=256),E.stencilBuffer&&(Q|=1024);const at=n.get(E);e.bindFramebuffer(36008,at.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,at.__webglFramebuffer),i.blitFramebuffer(0,0,w,j,0,0,w,j,Q,9728),e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,at.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Tt(E){return o&&E.isWebGLMultisampleRenderTarget?Math.min(h,E.samples):0}function J(E){const w=a.render.frame;f.get(E)!==w&&(f.set(E,w),E.update())}let tt=!1,it=!1;function ht(E,w){E&&E.isWebGLRenderTarget&&(tt===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),tt=!0),E=E.texture),O(E,w)}function ot(E,w){E&&E.isWebGLCubeRenderTarget&&(it===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),it=!0),E=E.texture),V(E,w)}this.allocateTextureUnit=N,this.resetTextureUnits=Z,this.setTexture2D=O,this.setTexture2DArray=P,this.setTexture3D=R,this.setTextureCube=V,this.setupRenderTarget=Et,this.updateRenderTargetMipmap=mt,this.updateMultisampleRenderTarget=ut,this.safeSetTexture2D=ht,this.safeSetTextureCube=ot}function Tg(i,t,e){const n=e.isWebGL2;function r(s){let a;if(s===sr)return 5121;if(s===eh)return 32819;if(s===nh)return 32820;if(s===ih)return 33635;if(s===$u)return 5120;if(s===Ku)return 5122;if(s===ar)return 5123;if(s===th)return 5124;if(s===or)return 5125;if(s===Mn)return 5126;if(s===In)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===rh)return 6406;if(s===Sn)return 6407;if(s===Ve)return 6408;if(s===sh)return 6409;if(s===ah)return 6410;if(s===Dn)return 6402;if(s===Si)return 34041;if(s===oh)return 6403;if(s===lh)return 36244;if(s===ch)return 33319;if(s===uh)return 33320;if(s===hh)return 36248;if(s===dh)return 36249;if(s===no||s===io||s===ro||s===so)if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===no)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===io)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===ro)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===so)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===ao||s===oo||s===lo||s===co)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===ao)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===oo)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===lo)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===co)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===fh)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===uo||s===ho)&&(a=t.get("WEBGL_compressed_texture_etc"),a!==null)){if(s===uo)return a.COMPRESSED_RGB8_ETC2;if(s===ho)return a.COMPRESSED_RGBA8_ETC2_EAC}if(s===ph||s===mh||s===gh||s===xh||s===yh||s===vh||s===_h||s===bh||s===wh||s===Mh||s===Sh||s===Eh||s===Th||s===Ah||s===Ch||s===Rh||s===Ph||s===Ih||s===Dh||s===Fh||s===Nh||s===kh||s===Bh||s===zh||s===Oh||s===Uh||s===Hh||s===Vh)return a=t.get("WEBGL_compressed_texture_astc"),a!==null?s:null;if(s===Lh)return a=t.get("EXT_texture_compression_bptc"),a!==null?s:null;if(s===Mi)return n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}class ll extends ye{constructor(t=[]){super();this.cameras=t}}ll.prototype.isArrayCamera=!0;class ni extends zt{constructor(){super();this.type="Group"}}ni.prototype.isGroup=!0;const Ag={type:"move"};class qs{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ni,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ni,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new A,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new A),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ni,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new A,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new A),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let r=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred")if(o!==null&&(r=e.getPose(t.targetRaySpace,n),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Ag))),c&&t.hand){a=!0;for(const x of t.hand.values()){const v=e.getJointPose(x,n);if(c.joints[x.jointName]===void 0){const g=new ni;g.matrixAutoUpdate=!1,g.visible=!1,c.joints[x.jointName]=g,c.add(g)}const m=c.joints[x.jointName];v!==null&&(m.matrix.fromArray(v.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=v.radius),m.visible=v!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=a!==null),this}}class Lg extends En{constructor(t,e){super();const n=this,r=t.state;let s=null,a=1,o=null,l="local-floor",c=null,u=null,h=null,f=null;const d=[],p=new Map,x=new ye;x.layers.enable(1),x.viewport=new Gt;const v=new ye;v.layers.enable(2),v.viewport=new Gt;const m=[x,v],g=new ll;g.layers.enable(1),g.layers.enable(2);let M=null,C=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(P){let R=d[P];return R===void 0&&(R=new qs,d[P]=R),R.getTargetRaySpace()},this.getControllerGrip=function(P){let R=d[P];return R===void 0&&(R=new qs,d[P]=R),R.getGripSpace()},this.getHand=function(P){let R=d[P];return R===void 0&&(R=new qs,d[P]=R),R.getHandSpace()};function T(P){const R=p.get(P.inputSource);R&&R.dispatchEvent({type:P.type,data:P.inputSource})}function y(){p.forEach(function(P,R){P.disconnect(R)}),p.clear(),M=null,C=null,r.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),O.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(P){a=P,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(P){l=P,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return s},this.setSession=async function(P){if(s=P,s!==null){s.addEventListener("select",T),s.addEventListener("selectstart",T),s.addEventListener("selectend",T),s.addEventListener("squeeze",T),s.addEventListener("squeezestart",T),s.addEventListener("squeezeend",T),s.addEventListener("end",y),s.addEventListener("inputsourceschange",D);const R=e.getContextAttributes();if(R.xrCompatible!==!0&&await e.makeXRCompatible(),s.renderState.layers===void 0){const V={antialias:R.antialias,alpha:R.alpha,depth:R.depth,stencil:R.stencil,framebufferScaleFactor:a},Y=new XRWebGLLayer(s,e,V);s.updateRenderState({baseLayer:Y})}else{let V=0;R.depth&&(V=R.stencil?34041:6402);const Y={colorFormat:R.alpha?6408:6407,depthFormat:V,scaleFactor:a};u=new XRWebGLBinding(s,e),f=u.createProjectionLayer(Y),h=e.createFramebuffer(),s.updateRenderState({layers:[f]})}o=await s.requestReferenceSpace(l),O.setContext(s),O.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function D(P){const R=s.inputSources;for(let V=0;V<d.length;V++)p.set(R[V],d[V]);for(let V=0;V<P.removed.length;V++){const Y=P.removed[V],q=p.get(Y);q&&(q.dispatchEvent({type:"disconnected",data:Y}),p.delete(Y))}for(let V=0;V<P.added.length;V++){const Y=P.added[V],q=p.get(Y);q&&q.dispatchEvent({type:"connected",data:Y})}}const z=new A,H=new A;function X(P,R,V){z.setFromMatrixPosition(R.matrixWorld),H.setFromMatrixPosition(V.matrixWorld);const Y=z.distanceTo(H),q=R.projectionMatrix.elements,et=V.projectionMatrix.elements,b=q[14]/(q[10]-1),S=q[14]/(q[10]+1),dt=(q[9]+1)/q[5],St=(q[9]-1)/q[5],_t=(q[8]-1)/q[0],G=(et[8]+1)/et[0],Bt=b*_t,Et=b*G,mt=Y/(-_t+G),ut=mt*-_t;R.matrixWorld.decompose(P.position,P.quaternion,P.scale),P.translateX(ut),P.translateZ(mt),P.matrixWorld.compose(P.position,P.quaternion,P.scale),P.matrixWorldInverse.copy(P.matrixWorld).invert();const Tt=b+mt,J=S+mt,tt=Bt-ut,it=Et+(Y-ut),ht=dt*S/J*Tt,ot=St*S/J*Tt;P.projectionMatrix.makePerspective(tt,it,ht,ot,Tt,J)}function k(P,R){R===null?P.matrixWorld.copy(P.matrix):P.matrixWorld.multiplyMatrices(R.matrixWorld,P.matrix),P.matrixWorldInverse.copy(P.matrixWorld).invert()}this.updateCamera=function(P){if(s===null)return;g.near=v.near=x.near=P.near,g.far=v.far=x.far=P.far,(M!==g.near||C!==g.far)&&(s.updateRenderState({depthNear:g.near,depthFar:g.far}),M=g.near,C=g.far);const R=P.parent,V=g.cameras;k(g,R);for(let q=0;q<V.length;q++)k(V[q],R);g.matrixWorld.decompose(g.position,g.quaternion,g.scale),P.position.copy(g.position),P.quaternion.copy(g.quaternion),P.scale.copy(g.scale),P.matrix.copy(g.matrix),P.matrixWorld.copy(g.matrixWorld);const Y=P.children;for(let q=0,et=Y.length;q<et;q++)Y[q].updateMatrixWorld(!0);V.length===2?X(g,x,v):g.projectionMatrix.copy(x.projectionMatrix)},this.getCamera=function(){return g};let Z=null;function N(P,R){if(c=R.getViewerPose(o),c!==null){const Y=c.views,q=s.renderState.baseLayer;s.renderState.layers===void 0&&r.bindXRFramebuffer(q.framebuffer);let et=!1;Y.length!==g.cameras.length&&(g.cameras.length=0,et=!0);for(let b=0;b<Y.length;b++){const S=Y[b];let dt=null;if(s.renderState.layers===void 0)dt=q.getViewport(S);else{const _t=u.getViewSubImage(f,S);r.bindXRFramebuffer(h),e.framebufferTexture2D(36160,36064,3553,_t.colorTexture,0),_t.depthStencilTexture!==void 0&&e.framebufferTexture2D(36160,36096,3553,_t.depthStencilTexture,0),dt=_t.viewport}const St=m[b];St.matrix.fromArray(S.transform.matrix),St.projectionMatrix.fromArray(S.projectionMatrix),St.viewport.set(dt.x,dt.y,dt.width,dt.height),b===0&&g.matrix.copy(St.matrix),et===!0&&g.cameras.push(St)}}const V=s.inputSources;for(let Y=0;Y<d.length;Y++){const q=d[Y],et=V[Y];q.update(et,R,o)}Z&&Z(P,R)}const O=new Fo;O.setAnimationLoop(N),this.setAnimationLoop=function(P){Z=P},this.dispose=function(){}}}function Cg(i){function t(m,g){m.fogColor.value.copy(g.color),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function e(m,g,M,C,T){g.isMeshBasicMaterial?n(m,g):g.isMeshLambertMaterial?(n(m,g),l(m,g)):g.isMeshToonMaterial?(n(m,g),u(m,g)):g.isMeshPhongMaterial?(n(m,g),c(m,g)):g.isMeshStandardMaterial?(n(m,g),g.isMeshPhysicalMaterial?f(m,g,T):h(m,g)):g.isMeshMatcapMaterial?(n(m,g),d(m,g)):g.isMeshDepthMaterial?(n(m,g),p(m,g)):g.isMeshDistanceMaterial?(n(m,g),x(m,g)):g.isMeshNormalMaterial?(n(m,g),v(m,g)):g.isLineBasicMaterial?(r(m,g),g.isLineDashedMaterial&&s(m,g)):g.isPointsMaterial?a(m,g,M,C):g.isSpriteMaterial?o(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function n(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.specularMap&&(m.specularMap.value=g.specularMap);const M=i.get(g).envMap;if(M){m.envMap.value=M,m.flipEnvMap.value=M.isCubeTexture&&M._needsFlipEnvMap?-1:1,m.reflectivity.value=g.reflectivity,m.refractionRatio.value=g.refractionRatio;const y=i.get(M).__maxMipLevel;y!==void 0&&(m.maxMipLevel.value=y)}g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity);let C;g.map?C=g.map:g.specularMap?C=g.specularMap:g.displacementMap?C=g.displacementMap:g.normalMap?C=g.normalMap:g.bumpMap?C=g.bumpMap:g.roughnessMap?C=g.roughnessMap:g.metalnessMap?C=g.metalnessMap:g.alphaMap?C=g.alphaMap:g.emissiveMap?C=g.emissiveMap:g.clearcoatMap?C=g.clearcoatMap:g.clearcoatNormalMap?C=g.clearcoatNormalMap:g.clearcoatRoughnessMap&&(C=g.clearcoatRoughnessMap),C!==void 0&&(C.isWebGLRenderTarget&&(C=C.texture),C.matrixAutoUpdate===!0&&C.updateMatrix(),m.uvTransform.value.copy(C.matrix));let T;g.aoMap?T=g.aoMap:g.lightMap&&(T=g.lightMap),T!==void 0&&(T.isWebGLRenderTarget&&(T=T.texture),T.matrixAutoUpdate===!0&&T.updateMatrix(),m.uv2Transform.value.copy(T.matrix))}function r(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity}function s(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function a(m,g,M,C){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*M,m.scale.value=C*.5,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap);let T;g.map?T=g.map:g.alphaMap&&(T=g.alphaMap),T!==void 0&&(T.matrixAutoUpdate===!0&&T.updateMatrix(),m.uvTransform.value.copy(T.matrix))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap);let M;g.map?M=g.map:g.alphaMap&&(M=g.alphaMap),M!==void 0&&(M.matrixAutoUpdate===!0&&M.updateMatrix(),m.uvTransform.value.copy(M.matrix))}function l(m,g){g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap)}function c(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===ie&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===ie&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===ie&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===ie&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}function h(m,g){m.roughness.value=g.roughness,m.metalness.value=g.metalness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===ie&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===ie&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),i.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,M){h(m,g),m.reflectivity.value=g.reflectivity,m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.sheen&&m.sheen.value.copy(g.sheen),g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),m.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===ie&&m.clearcoatNormalScale.value.negate()),m.transmission.value=g.transmission,g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap),g.transmission>0&&(m.transmissionSamplerMap.value=M.texture,m.transmissionSamplerSize.value.set(M.width,M.height)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)}function d(m,g){g.matcap&&(m.matcap.value=g.matcap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===ie&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===ie&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}function p(m,g){g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}function x(m,g){g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),m.referencePosition.value.copy(g.referencePosition),m.nearDistance.value=g.nearDistance,m.farDistance.value=g.farDistance}function v(m,g){g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===ie&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===ie&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}return{refreshFogUniforms:t,refreshMaterialUniforms:e}}function Rg(){const i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return i.style.display="block",i}function Ht(i={}){const t=i.canvas!==void 0?i.canvas:Rg(),e=i.context!==void 0?i.context:null,n=i.alpha!==void 0?i.alpha:!1,r=i.depth!==void 0?i.depth:!0,s=i.stencil!==void 0?i.stencil:!0,a=i.antialias!==void 0?i.antialias:!1,o=i.premultipliedAlpha!==void 0?i.premultipliedAlpha:!0,l=i.preserveDrawingBuffer!==void 0?i.preserveDrawingBuffer:!1,c=i.powerPreference!==void 0?i.powerPreference:"default",u=i.failIfMajorPerformanceCaveat!==void 0?i.failIfMajorPerformanceCaveat:!1;let h=null,f=null;const d=[],p=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Ei,this.physicallyCorrectLights=!1,this.toneMapping=Pn,this.toneMappingExposure=1;const x=this;let v=!1,m=0,g=0,M=null,C=-1,T=null;const y=new Gt,D=new Gt;let z=null,H=t.width,X=t.height,k=1,Z=null,N=null;const O=new Gt(0,0,H,X),P=new Gt(0,0,H,X);let R=!1;const V=[],Y=new Rr;let q=!1,et=!1,b=null;const S=new vt,dt=new A,St={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function _t(){return M===null?k:1}let G=e;function Bt(_,U){for(let B=0;B<_.length;B++){const W=_[B],nt=t.getContext(W,U);if(nt!==null)return nt}return null}try{const _={alpha:n,depth:r,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(t.addEventListener("webglcontextlost",Ft,!1),t.addEventListener("webglcontextrestored",Kt,!1),G===null){const U=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&U.shift(),G=Bt(U,_),G===null)throw Bt(U)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}G.getShaderPrecisionFormat===void 0&&(G.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(_){throw console.error("THREE.WebGLRenderer: "+_.message),_}let Et,mt,ut,Tt,J,tt,it,ht,ot,E,w,j,Q,at,lt,yt,gt,Ct,ct,F,L,I;function $(){Et=new Kp(G),mt=new Jp(G,Et,i),Et.init(mt),L=new Tg(G,Et,mt),ut=new Sg(G,Et,mt),V[0]=1029,Tt=new nm(G),J=new fg,tt=new Eg(G,Et,ut,J,mt,L,Tt),it=new $p(x),ht=new Sd(G,mt),I=new Yp(G,Et,ht,mt),ot=new tm(G,ht,Tt,I),E=new am(G,ot,ht,Tt),Ct=new sm(G),lt=new Qp(J),w=new dg(x,it,Et,mt,I,lt),j=new Cg(J),Q=new mg(J),at=new bg(Et,mt),gt=new jp(x,it,ut,E,o),yt=new ol(x,E,mt),ct=new Zp(G,Et,Tt,mt),F=new em(G,Et,Tt,mt),Tt.programs=w.programs,x.capabilities=mt,x.extensions=Et,x.properties=J,x.renderLists=Q,x.shadowMap=yt,x.state=ut,x.info=Tt}$();const K=new Lg(x,G);this.xr=K,this.getContext=function(){return G},this.getContextAttributes=function(){return G.getContextAttributes()},this.forceContextLoss=function(){const _=Et.get("WEBGL_lose_context");_&&_.loseContext()},this.forceContextRestore=function(){const _=Et.get("WEBGL_lose_context");_&&_.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(_){_!==void 0&&(k=_,this.setSize(H,X,!1))},this.getSize=function(_){return _.set(H,X)},this.setSize=function(_,U,B){if(K.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}H=_,X=U,t.width=Math.floor(_*k),t.height=Math.floor(U*k),B!==!1&&(t.style.width=_+"px",t.style.height=U+"px"),this.setViewport(0,0,_,U)},this.getDrawingBufferSize=function(_){return _.set(H*k,X*k).floor()},this.setDrawingBufferSize=function(_,U,B){H=_,X=U,k=B,t.width=Math.floor(_*B),t.height=Math.floor(U*B),this.setViewport(0,0,_,U)},this.getCurrentViewport=function(_){return _.copy(y)},this.getViewport=function(_){return _.copy(O)},this.setViewport=function(_,U,B,W){_.isVector4?O.set(_.x,_.y,_.z,_.w):O.set(_,U,B,W),ut.viewport(y.copy(O).multiplyScalar(k).floor())},this.getScissor=function(_){return _.copy(P)},this.setScissor=function(_,U,B,W){_.isVector4?P.set(_.x,_.y,_.z,_.w):P.set(_,U,B,W),ut.scissor(D.copy(P).multiplyScalar(k).floor())},this.getScissorTest=function(){return R},this.setScissorTest=function(_){ut.setScissorTest(R=_)},this.setOpaqueSort=function(_){Z=_},this.setTransparentSort=function(_){N=_},this.getClearColor=function(_){return _.copy(gt.getClearColor())},this.setClearColor=function(){gt.setClearColor.apply(gt,arguments)},this.getClearAlpha=function(){return gt.getClearAlpha()},this.setClearAlpha=function(){gt.setClearAlpha.apply(gt,arguments)},this.clear=function(_,U,B){let W=0;(_===void 0||_)&&(W|=16384),(U===void 0||U)&&(W|=256),(B===void 0||B)&&(W|=1024),G.clear(W)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ft,!1),t.removeEventListener("webglcontextrestored",Kt,!1),Q.dispose(),at.dispose(),J.dispose(),it.dispose(),E.dispose(),I.dispose(),K.dispose(),K.removeEventListener("sessionstart",Ae),K.removeEventListener("sessionend",Ra),b&&(b.dispose(),b=null),vn.stop()};function Ft(_){_.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Kt(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const _=Tt.autoReset,U=yt.enabled,B=yt.autoUpdate,W=yt.needsUpdate,nt=yt.type;$(),Tt.autoReset=_,yt.enabled=U,yt.autoUpdate=B,yt.needsUpdate=W,yt.type=nt}function At(_){const U=_.target;U.removeEventListener("dispose",At),$t(U)}function $t(_){Vt(_),J.remove(_)}function Vt(_){const U=J.get(_).programs;U!==void 0&&U.forEach(function(B){w.releaseProgram(B)})}function ge(_,U){_.render(function(B){x.renderBufferImmediate(B,U)})}this.renderBufferImmediate=function(_,U){I.initAttributes();const B=J.get(_);_.hasPositions&&!B.position&&(B.position=G.createBuffer()),_.hasNormals&&!B.normal&&(B.normal=G.createBuffer()),_.hasUvs&&!B.uv&&(B.uv=G.createBuffer()),_.hasColors&&!B.color&&(B.color=G.createBuffer());const W=U.getAttributes();_.hasPositions&&(G.bindBuffer(34962,B.position),G.bufferData(34962,_.positionArray,35048),I.enableAttribute(W.position),G.vertexAttribPointer(W.position,3,5126,!1,0,0)),_.hasNormals&&(G.bindBuffer(34962,B.normal),G.bufferData(34962,_.normalArray,35048),I.enableAttribute(W.normal),G.vertexAttribPointer(W.normal,3,5126,!1,0,0)),_.hasUvs&&(G.bindBuffer(34962,B.uv),G.bufferData(34962,_.uvArray,35048),I.enableAttribute(W.uv),G.vertexAttribPointer(W.uv,2,5126,!1,0,0)),_.hasColors&&(G.bindBuffer(34962,B.color),G.bufferData(34962,_.colorArray,35048),I.enableAttribute(W.color),G.vertexAttribPointer(W.color,3,5126,!1,0,0)),I.disableUnusedAttributes(),G.drawArrays(4,0,_.count),_.count=0},this.renderBufferDirect=function(_,U,B,W,nt,Rt){U===null&&(U=St);const Lt=nt.isMesh&&nt.matrixWorld.determinant()<0,ft=Fa(_,U,W,nt);ut.setMaterial(W,Lt);let It=B.index;const xt=B.attributes.position;if(It===null){if(xt===void 0||xt.count===0)return}else if(It.count===0)return;let Nt=1;W.wireframe===!0&&(It=ot.getWireframeAttribute(B),Nt=2),(W.morphTargets||W.morphNormals)&&Ct.update(nt,B,W,ft),I.setup(nt,W,ft,B,It);let bt,Ot=ct;It!==null&&(bt=ht.get(It),Ot=F,Ot.setIndex(bt));const Ue=It!==null?It.count:xt.count,xe=B.drawRange.start*Nt,_n=B.drawRange.count*Nt,Xt=Rt!==null?Rt.start*Nt:0,bn=Rt!==null?Rt.count*Nt:1/0,ue=Math.max(xe,Xt),Gc=Math.min(Ue,xe+_n,Xt+bn)-1,tr=Math.max(0,Gc-ue+1);if(tr!==0){if(nt.isMesh)W.wireframe===!0?(ut.setLineWidth(W.wireframeLinewidth*_t()),Ot.setMode(1)):Ot.setMode(4);else if(nt.isLine){let yi=W.linewidth;yi===void 0&&(yi=1),ut.setLineWidth(yi*_t()),nt.isLineSegments?Ot.setMode(1):nt.isLineLoop?Ot.setMode(2):Ot.setMode(3)}else nt.isPoints?Ot.setMode(0):nt.isSprite&&Ot.setMode(4);if(nt.isInstancedMesh)Ot.renderInstances(ue,tr,nt.count);else if(B.isInstancedBufferGeometry){const yi=Math.min(B.instanceCount,B._maxInstanceCount);Ot.renderInstances(ue,tr,yi)}else Ot.render(ue,tr)}},this.compile=function(_,U){f=at.get(_),f.init(),_.traverseVisible(function(B){B.isLight&&B.layers.test(U.layers)&&(f.pushLight(B),B.castShadow&&f.pushShadow(B))}),f.setupLights(),_.traverse(function(B){const W=B.material;if(W)if(Array.isArray(W))for(let nt=0;nt<W.length;nt++){const Rt=W[nt];ts(Rt,_,B)}else ts(W,_,B)})};let kt=null;function xi(_){kt&&kt(_)}function Ae(){vn.stop()}function Ra(){vn.start()}const vn=new Fo;vn.setAnimationLoop(xi),typeof window!="undefined"&&vn.setContext(window),this.setAnimationLoop=function(_){kt=_,K.setAnimationLoop(_),_===null?vn.stop():vn.start()},K.addEventListener("sessionstart",Ae),K.addEventListener("sessionend",Ra),this.render=function(_,U){if(U!==void 0&&U.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===!0)return;_.autoUpdate===!0&&_.updateMatrixWorld(),U.parent===null&&U.updateMatrixWorld(),K.enabled===!0&&K.isPresenting===!0&&(K.cameraAutoUpdate===!0&&K.updateCamera(U),U=K.getCamera()),_.isScene===!0&&_.onBeforeRender(x,_,U,M),f=at.get(_,p.length),f.init(),p.push(f),S.multiplyMatrices(U.projectionMatrix,U.matrixWorldInverse),Y.setFromProjectionMatrix(S),et=this.localClippingEnabled,q=lt.init(this.clippingPlanes,et,U),h=Q.get(_,d.length),h.init(),d.push(h),Pa(_,U,0,x.sortObjects),h.finish(),x.sortObjects===!0&&h.sort(Z,N),q===!0&&lt.beginShadows();const B=f.state.shadowsArray;yt.render(B,_,U),f.setupLights(),f.setupLightsView(U),q===!0&&lt.endShadows(),this.info.autoReset===!0&&this.info.reset(),gt.render(h,_);const W=h.opaque,nt=h.transmissive,Rt=h.transparent;W.length>0&&Ki(W,_,U),nt.length>0&&Uc(W,nt,_,U),Rt.length>0&&Ki(Rt,_,U),M!==null&&(tt.updateMultisampleRenderTarget(M),tt.updateRenderTargetMipmap(M)),_.isScene===!0&&_.onAfterRender(x,_,U),ut.buffers.depth.setTest(!0),ut.buffers.depth.setMask(!0),ut.buffers.color.setMask(!0),ut.setPolygonOffset(!1),I.resetDefaultState(),C=-1,T=null,p.pop(),p.length>0?f=p[p.length-1]:f=null,d.pop(),d.length>0?h=d[d.length-1]:h=null};function Pa(_,U,B,W){if(_.visible===!1)return;if(_.layers.test(U.layers)){if(_.isGroup)B=_.renderOrder;else if(_.isLOD)_.autoUpdate===!0&&_.update(U);else if(_.isLight)f.pushLight(_),_.castShadow&&f.pushShadow(_);else if(_.isSprite){if(!_.frustumCulled||Y.intersectsSprite(_)){W&&dt.setFromMatrixPosition(_.matrixWorld).applyMatrix4(S);const Lt=E.update(_),ft=_.material;ft.visible&&h.push(_,Lt,ft,B,dt.z,null)}}else if(_.isImmediateRenderObject)W&&dt.setFromMatrixPosition(_.matrixWorld).applyMatrix4(S),h.push(_,null,_.material,B,dt.z,null);else if((_.isMesh||_.isLine||_.isPoints)&&(_.isSkinnedMesh&&_.skeleton.frame!==Tt.render.frame&&(_.skeleton.update(),_.skeleton.frame=Tt.render.frame),!_.frustumCulled||Y.intersectsObject(_))){W&&dt.setFromMatrixPosition(_.matrixWorld).applyMatrix4(S);const Lt=E.update(_),ft=_.material;if(Array.isArray(ft)){const It=Lt.groups;for(let xt=0,Nt=It.length;xt<Nt;xt++){const bt=It[xt],Ot=ft[bt.materialIndex];Ot&&Ot.visible&&h.push(_,Lt,Ot,B,dt.z,bt)}}else ft.visible&&h.push(_,Lt,ft,B,dt.z,null)}}const Rt=_.children;for(let Lt=0,ft=Rt.length;Lt<ft;Lt++)Pa(Rt[Lt],U,B,W)}function Uc(_,U,B,W){if(b===null){const ft=a===!0&&mt.isWebGL2===!0?xo:Ze;b=new ft(1024,1024,{generateMipmaps:!0,type:L.convert(In)!==null?In:sr,minFilter:rr,magFilter:he,wrapS:Me,wrapT:Me})}const nt=x.getRenderTarget();x.setRenderTarget(b),x.clear();const Rt=x.toneMapping;x.toneMapping=Pn,Ki(_,B,W),x.toneMapping=Rt,tt.updateMultisampleRenderTarget(b),tt.updateRenderTargetMipmap(b),x.setRenderTarget(nt),Ki(U,B,W)}function Ki(_,U,B){const W=U.isScene===!0?U.overrideMaterial:null;for(let nt=0,Rt=_.length;nt<Rt;nt++){const Lt=_[nt],ft=Lt.object,It=Lt.geometry,xt=W===null?Lt.material:W,Nt=Lt.group;if(B.isArrayCamera){const bt=B.cameras;for(let Ot=0,Ue=bt.length;Ot<Ue;Ot++){const xe=bt[Ot];ft.layers.test(xe.layers)&&(ut.viewport(y.copy(xe.viewport)),f.setupLightsView(xe),Ia(ft,U,xe,It,xt,Nt))}}else Ia(ft,U,B,It,xt,Nt)}}function Ia(_,U,B,W,nt,Rt){if(_.onBeforeRender(x,U,B,W,nt,Rt),_.modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,_.matrixWorld),_.normalMatrix.getNormalMatrix(_.modelViewMatrix),_.isImmediateRenderObject){const Lt=Fa(B,U,nt,_);ut.setMaterial(nt),I.reset(),ge(_,Lt)}else nt.transparent===!0&&nt.side===Cn?(nt.side=ie,nt.needsUpdate=!0,x.renderBufferDirect(B,U,W,nt,_,Rt),nt.side=_i,nt.needsUpdate=!0,x.renderBufferDirect(B,U,W,nt,_,Rt),nt.side=Cn):x.renderBufferDirect(B,U,W,nt,_,Rt);_.onAfterRender(x,U,B,W,nt,Rt)}function ts(_,U,B){U.isScene!==!0&&(U=St);const W=J.get(_),nt=f.state.lights,Rt=f.state.shadowsArray,Lt=nt.state.version,ft=w.getParameters(_,nt.state,Rt,U,B),It=w.getProgramCacheKey(ft);let xt=W.programs;W.environment=_.isMeshStandardMaterial?U.environment:null,W.fog=U.fog,W.envMap=it.get(_.envMap||W.environment),xt===void 0&&(_.addEventListener("dispose",At),xt=new Map,W.programs=xt);let Nt=xt.get(It);if(Nt!==void 0){if(W.currentProgram===Nt&&W.lightsStateVersion===Lt)return Da(_,ft),Nt}else ft.uniforms=w.getUniforms(_),_.onBuild(ft,x),_.onBeforeCompile(ft,x),Nt=w.acquireProgram(ft,It),xt.set(It,Nt),W.uniforms=ft.uniforms;const bt=W.uniforms;(!_.isShaderMaterial&&!_.isRawShaderMaterial||_.clipping===!0)&&(bt.clippingPlanes=lt.uniform),Da(_,ft),W.needsLights=Vc(_),W.lightsStateVersion=Lt,W.needsLights&&(bt.ambientLightColor.value=nt.state.ambient,bt.lightProbe.value=nt.state.probe,bt.directionalLights.value=nt.state.directional,bt.directionalLightShadows.value=nt.state.directionalShadow,bt.spotLights.value=nt.state.spot,bt.spotLightShadows.value=nt.state.spotShadow,bt.rectAreaLights.value=nt.state.rectArea,bt.ltc_1.value=nt.state.rectAreaLTC1,bt.ltc_2.value=nt.state.rectAreaLTC2,bt.pointLights.value=nt.state.point,bt.pointLightShadows.value=nt.state.pointShadow,bt.hemisphereLights.value=nt.state.hemi,bt.directionalShadowMap.value=nt.state.directionalShadowMap,bt.directionalShadowMatrix.value=nt.state.directionalShadowMatrix,bt.spotShadowMap.value=nt.state.spotShadowMap,bt.spotShadowMatrix.value=nt.state.spotShadowMatrix,bt.pointShadowMap.value=nt.state.pointShadowMap,bt.pointShadowMatrix.value=nt.state.pointShadowMatrix);const Ot=Nt.getUniforms(),Ue=hn.seqWithValue(Ot.seq,bt);return W.currentProgram=Nt,W.uniformsList=Ue,Nt}function Da(_,U){const B=J.get(_);B.outputEncoding=U.outputEncoding,B.instancing=U.instancing,B.skinning=U.skinning,B.numClippingPlanes=U.numClippingPlanes,B.numIntersection=U.numClipIntersection,B.vertexAlphas=U.vertexAlphas}function Fa(_,U,B,W){U.isScene!==!0&&(U=St),tt.resetTextureUnits();const nt=U.fog,Rt=B.isMeshStandardMaterial?U.environment:null,Lt=M===null?x.outputEncoding:M.texture.encoding,ft=it.get(B.envMap||Rt),It=B.vertexColors===!0&&W.geometry&&W.geometry.attributes.color&&W.geometry.attributes.color.itemSize===4,xt=J.get(B),Nt=f.state.lights;if(q===!0&&(et===!0||_!==T)){const ue=_===T&&B.id===C;lt.setState(B,_,ue)}let bt=!1;B.version===xt.__version?(xt.needsLights&&xt.lightsStateVersion!==Nt.state.version||xt.outputEncoding!==Lt||W.isInstancedMesh&&xt.instancing===!1||!W.isInstancedMesh&&xt.instancing===!0||W.isSkinnedMesh&&xt.skinning===!1||!W.isSkinnedMesh&&xt.skinning===!0||xt.envMap!==ft||B.fog&&xt.fog!==nt||xt.numClippingPlanes!==void 0&&(xt.numClippingPlanes!==lt.numPlanes||xt.numIntersection!==lt.numIntersection)||xt.vertexAlphas!==It)&&(bt=!0):(bt=!0,xt.__version=B.version);let Ot=xt.currentProgram;bt===!0&&(Ot=ts(B,U,W));let Ue=!1,xe=!1,_n=!1;const Xt=Ot.getUniforms(),bn=xt.uniforms;if(ut.useProgram(Ot.program)&&(Ue=!0,xe=!0,_n=!0),B.id!==C&&(C=B.id,xe=!0),Ue||T!==_){if(Xt.setValue(G,"projectionMatrix",_.projectionMatrix),mt.logarithmicDepthBuffer&&Xt.setValue(G,"logDepthBufFC",2/(Math.log(_.far+1)/Math.LN2)),T!==_&&(T=_,xe=!0,_n=!0),B.isShaderMaterial||B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshStandardMaterial||B.envMap){const ue=Xt.map.cameraPosition;ue!==void 0&&ue.setValue(G,dt.setFromMatrixPosition(_.matrixWorld))}(B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshLambertMaterial||B.isMeshBasicMaterial||B.isMeshStandardMaterial||B.isShaderMaterial)&&Xt.setValue(G,"isOrthographic",_.isOrthographicCamera===!0),(B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshLambertMaterial||B.isMeshBasicMaterial||B.isMeshStandardMaterial||B.isShaderMaterial||B.isShadowMaterial||W.isSkinnedMesh)&&Xt.setValue(G,"viewMatrix",_.matrixWorldInverse)}if(W.isSkinnedMesh){Xt.setOptional(G,W,"bindMatrix"),Xt.setOptional(G,W,"bindMatrixInverse");const ue=W.skeleton;ue&&(mt.floatVertexTextures?(ue.boneTexture===null&&ue.computeBoneTexture(),Xt.setValue(G,"boneTexture",ue.boneTexture,tt),Xt.setValue(G,"boneTextureSize",ue.boneTextureSize)):Xt.setOptional(G,ue,"boneMatrices"))}return(xe||xt.receiveShadow!==W.receiveShadow)&&(xt.receiveShadow=W.receiveShadow,Xt.setValue(G,"receiveShadow",W.receiveShadow)),xe&&(Xt.setValue(G,"toneMappingExposure",x.toneMappingExposure),xt.needsLights&&Hc(bn,_n),nt&&B.fog&&j.refreshFogUniforms(bn,nt),j.refreshMaterialUniforms(bn,B,k,X,b),hn.upload(G,xt.uniformsList,bn,tt)),B.isShaderMaterial&&B.uniformsNeedUpdate===!0&&(hn.upload(G,xt.uniformsList,bn,tt),B.uniformsNeedUpdate=!1),B.isSpriteMaterial&&Xt.setValue(G,"center",W.center),Xt.setValue(G,"modelViewMatrix",W.modelViewMatrix),Xt.setValue(G,"normalMatrix",W.normalMatrix),Xt.setValue(G,"modelMatrix",W.matrixWorld),Ot}function Hc(_,U){_.ambientLightColor.needsUpdate=U,_.lightProbe.needsUpdate=U,_.directionalLights.needsUpdate=U,_.directionalLightShadows.needsUpdate=U,_.pointLights.needsUpdate=U,_.pointLightShadows.needsUpdate=U,_.spotLights.needsUpdate=U,_.spotLightShadows.needsUpdate=U,_.rectAreaLights.needsUpdate=U,_.hemisphereLights.needsUpdate=U}function Vc(_){return _.isMeshLambertMaterial||_.isMeshToonMaterial||_.isMeshPhongMaterial||_.isMeshStandardMaterial||_.isShadowMaterial||_.isShaderMaterial&&_.lights===!0}this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return M},this.setRenderTarget=function(_,U=0,B=0){M=_,m=U,g=B,_&&J.get(_).__webglFramebuffer===void 0&&tt.setupRenderTarget(_);let W=null,nt=!1,Rt=!1;if(_){const ft=_.texture;(ft.isDataTexture3D||ft.isDataTexture2DArray)&&(Rt=!0);const It=J.get(_).__webglFramebuffer;_.isWebGLCubeRenderTarget?(W=It[U],nt=!0):_.isWebGLMultisampleRenderTarget?W=J.get(_).__webglMultisampledFramebuffer:W=It,y.copy(_.viewport),D.copy(_.scissor),z=_.scissorTest}else y.copy(O).multiplyScalar(k).floor(),D.copy(P).multiplyScalar(k).floor(),z=R;if(ut.bindFramebuffer(36160,W)&&mt.drawBuffers){let ft=!1;if(_)if(_.isWebGLMultipleRenderTargets){const It=_.texture;if(V.length!==It.length||V[0]!==36064){for(let xt=0,Nt=It.length;xt<Nt;xt++)V[xt]=36064+xt;V.length=It.length,ft=!0}}else(V.length!==1||V[0]!==36064)&&(V[0]=36064,V.length=1,ft=!0);else(V.length!==1||V[0]!==1029)&&(V[0]=1029,V.length=1,ft=!0);ft&&(mt.isWebGL2?G.drawBuffers(V):Et.get("WEBGL_draw_buffers").drawBuffersWEBGL(V))}if(ut.viewport(y),ut.scissor(D),ut.setScissorTest(z),nt){const ft=J.get(_.texture);G.framebufferTexture2D(36160,36064,34069+U,ft.__webglTexture,B)}else if(Rt){const ft=J.get(_.texture),It=U||0;G.framebufferTextureLayer(36160,36064,ft.__webglTexture,B||0,It)}},this.readRenderTargetPixels=function(_,U,B,W,nt,Rt,Lt){if(!(_&&_.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ft=J.get(_).__webglFramebuffer;if(_.isWebGLCubeRenderTarget&&Lt!==void 0&&(ft=ft[Lt]),ft){ut.bindFramebuffer(36160,ft);try{const It=_.texture,xt=It.format,Nt=It.type;if(xt!==Ve&&L.convert(xt)!==G.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const bt=Nt===In&&(Et.has("EXT_color_buffer_half_float")||mt.isWebGL2&&Et.has("EXT_color_buffer_float"));if(Nt!==sr&&L.convert(Nt)!==G.getParameter(35738)&&!(Nt===Mn&&(mt.isWebGL2||Et.has("OES_texture_float")||Et.has("WEBGL_color_buffer_float")))&&!bt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}G.checkFramebufferStatus(36160)===36053?U>=0&&U<=_.width-W&&B>=0&&B<=_.height-nt&&G.readPixels(U,B,W,nt,L.convert(xt),L.convert(Nt),Rt):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const It=M!==null?J.get(M).__webglFramebuffer:null;ut.bindFramebuffer(36160,It)}}},this.copyFramebufferToTexture=function(_,U,B=0){const W=Math.pow(2,-B),nt=Math.floor(U.image.width*W),Rt=Math.floor(U.image.height*W);let Lt=L.convert(U.format);mt.isWebGL2&&(Lt===6407&&(Lt=32849),Lt===6408&&(Lt=32856)),tt.setTexture2D(U,0),G.copyTexImage2D(3553,B,Lt,_.x,_.y,nt,Rt,0),ut.unbindTexture()},this.copyTextureToTexture=function(_,U,B,W=0){const nt=U.image.width,Rt=U.image.height,Lt=L.convert(B.format),ft=L.convert(B.type);tt.setTexture2D(B,0),G.pixelStorei(37440,B.flipY),G.pixelStorei(37441,B.premultiplyAlpha),G.pixelStorei(3317,B.unpackAlignment),U.isDataTexture?G.texSubImage2D(3553,W,_.x,_.y,nt,Rt,Lt,ft,U.image.data):U.isCompressedTexture?G.compressedTexSubImage2D(3553,W,_.x,_.y,U.mipmaps[0].width,U.mipmaps[0].height,Lt,U.mipmaps[0].data):G.texSubImage2D(3553,W,_.x,_.y,Lt,ft,U.image),W===0&&B.generateMipmaps&&G.generateMipmap(3553),ut.unbindTexture()},this.copyTextureToTexture3D=function(_,U,B,W,nt=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Rt=_.max.x-_.min.x+1,Lt=_.max.y-_.min.y+1,ft=_.max.z-_.min.z+1,It=L.convert(W.format),xt=L.convert(W.type);let Nt;if(W.isDataTexture3D)tt.setTexture3D(W,0),Nt=32879;else if(W.isDataTexture2DArray)tt.setTexture2DArray(W,0),Nt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}G.pixelStorei(37440,W.flipY),G.pixelStorei(37441,W.premultiplyAlpha),G.pixelStorei(3317,W.unpackAlignment);const bt=G.getParameter(3314),Ot=G.getParameter(32878),Ue=G.getParameter(3316),xe=G.getParameter(3315),_n=G.getParameter(32877),Xt=B.isCompressedTexture?B.mipmaps[0]:B.image;G.pixelStorei(3314,Xt.width),G.pixelStorei(32878,Xt.height),G.pixelStorei(3316,_.min.x),G.pixelStorei(3315,_.min.y),G.pixelStorei(32877,_.min.z),B.isDataTexture||B.isDataTexture3D?G.texSubImage3D(Nt,nt,U.x,U.y,U.z,Rt,Lt,ft,It,xt,Xt.data):B.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),G.compressedTexSubImage3D(Nt,nt,U.x,U.y,U.z,Rt,Lt,ft,It,Xt.data)):G.texSubImage3D(Nt,nt,U.x,U.y,U.z,Rt,Lt,ft,It,xt,Xt),G.pixelStorei(3314,bt),G.pixelStorei(32878,Ot),G.pixelStorei(3316,Ue),G.pixelStorei(3315,xe),G.pixelStorei(32877,_n),nt===0&&W.generateMipmaps&&G.generateMipmap(Nt),ut.unbindTexture()},this.initTexture=function(_){tt.setTexture2D(_,0),ut.unbindTexture()},this.resetState=function(){m=0,g=0,M=null,ut.reset(),I.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Pg extends Ht{}Pg.prototype.isWebGL1Renderer=!0;class Xs extends zt{constructor(){super();this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),e}}Xs.prototype.isScene=!0;class Fi{constructor(t,e){this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Ti,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ge()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,s=this.stride;r<s;r++)this.array[t+r]=e.array[n+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ge()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ge()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Fi.prototype.isInterleavedBuffer=!0;const te=new A;class Ni{constructor(t,e,n,r=!1){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=r===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)te.x=this.getX(e),te.y=this.getY(e),te.z=this.getZ(e),te.applyMatrix4(t),this.setXYZ(e,te.x,te.y,te.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)te.x=this.getX(e),te.y=this.getY(e),te.z=this.getZ(e),te.applyNormalMatrix(t),this.setXYZ(e,te.x,te.y,te.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)te.x=this.getX(e),te.y=this.getY(e),te.z=this.getZ(e),te.transformDirection(t),this.setXYZ(e,te.x,te.y,te.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,s){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=s,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[r+s])}return new re(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Ni(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Ni.prototype.isInterleavedBufferAttribute=!0;class cl extends de{constructor(t){super();this.type="SpriteMaterial",this.color=new pt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}cl.prototype.isSpriteMaterial=!0;let ii;const ki=new A,ri=new A,si=new A,ai=new rt,Bi=new rt,ul=new vt,Pr=new A,zi=new A,Ir=new A,hl=new rt,js=new rt,dl=new rt;class Ig extends zt{constructor(t){super();if(this.type="Sprite",ii===void 0){ii=new jt;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Fi(e,5);ii.setIndex([0,1,2,0,2,3]),ii.setAttribute("position",new Ni(n,3,0,!1)),ii.setAttribute("uv",new Ni(n,2,3,!1))}this.geometry=ii,this.material=t!==void 0?t:new cl,this.center=new rt(.5,.5)}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ri.setFromMatrixScale(this.matrixWorld),ul.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),si.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ri.multiplyScalar(-si.z);const n=this.material.rotation;let r,s;n!==0&&(s=Math.cos(n),r=Math.sin(n));const a=this.center;Dr(Pr.set(-.5,-.5,0),si,a,ri,r,s),Dr(zi.set(.5,-.5,0),si,a,ri,r,s),Dr(Ir.set(.5,.5,0),si,a,ri,r,s),hl.set(0,0),js.set(1,0),dl.set(1,1);let o=t.ray.intersectTriangle(Pr,zi,Ir,!1,ki);if(o===null&&(Dr(zi.set(-.5,.5,0),si,a,ri,r,s),js.set(0,1),o=t.ray.intersectTriangle(Pr,Ir,zi,!1,ki),o===null))return;const l=t.ray.origin.distanceTo(ki);l<t.near||l>t.far||e.push({distance:l,point:ki.clone(),uv:ee.getUV(ki,Pr,zi,Ir,hl,js,dl,new rt),face:null,object:this})}copy(t){return super.copy(t),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}Ig.prototype.isSprite=!0;function Dr(i,t,e,n,r,s){ai.subVectors(i,e).addScalar(.5).multiply(n),r!==void 0?(Bi.x=s*ai.x-r*ai.y,Bi.y=r*ai.x+s*ai.y):Bi.copy(ai),i.copy(t),i.x+=Bi.x,i.y+=Bi.y,i.applyMatrix4(ul)}const fl=new A,pl=new Gt,ml=new Gt,Dg=new A,gl=new vt;class xl extends Re{constructor(t,e){super(t,e);this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new vt,this.bindMatrixInverse=new vt}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Gt,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const s=1/t.manhattanLength();s!==1/0?t.multiplyScalar(s):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;pl.fromBufferAttribute(r.attributes.skinIndex,t),ml.fromBufferAttribute(r.attributes.skinWeight,t),fl.fromBufferAttribute(r.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let s=0;s<4;s++){const a=ml.getComponent(s);if(a!==0){const o=pl.getComponent(s);gl.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),e.addScaledVector(Dg.copy(fl).applyMatrix4(gl),a)}}return e.applyMatrix4(this.bindMatrixInverse)}}xl.prototype.isSkinnedMesh=!0;class Fg extends zt{constructor(){super();this.type="Bone"}}Fg.prototype.isBone=!0;class Ng extends ce{constructor(t=null,e=1,n=1,r,s,a,o,l,c=he,u=he,h,f){super(null,a,o,l,c,u,r,s,h,f);this.image={data:t,width:e,height:n},this.magFilter=c,this.minFilter=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Ng.prototype.isDataTexture=!0;const yl=new vt,vl=new vt,Fr=[],Oi=new Re;class kg extends Re{constructor(t,e,n){super(t,e);this.instanceMatrix=new re(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(Oi.geometry=this.geometry,Oi.material=this.material,Oi.material!==void 0)for(let s=0;s<r;s++){this.getMatrixAt(s,yl),vl.multiplyMatrices(n,yl),Oi.matrixWorld=vl,Oi.raycast(t,Fr);for(let a=0,o=Fr.length;a<o;a++){const l=Fr[a];l.instanceId=s,l.object=this,e.push(l)}Fr.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new re(new Float32Array(this.count*3),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}kg.prototype.isInstancedMesh=!0;class Ui extends de{constructor(t){super();this.type="LineBasicMaterial",this.color=new pt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}Ui.prototype.isLineBasicMaterial=!0;const _l=new A,bl=new A,wl=new vt,Ys=new Gn,Nr=new Vn;class Zs extends zt{constructor(t=new jt,e=new Ui){super();this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[0];for(let r=1,s=e.count;r<s;r++)_l.fromBufferAttribute(e,r-1),bl.fromBufferAttribute(e,r),n[r]=n[r-1],n[r]+=_l.distanceTo(bl);t.setAttribute("lineDistance",new se(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,s=t.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Nr.copy(n.boundingSphere),Nr.applyMatrix4(r),Nr.radius+=s,t.ray.intersectsSphere(Nr)===!1)return;wl.copy(r).invert(),Ys.copy(t.ray).applyMatrix4(wl);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new A,u=new A,h=new A,f=new A,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const p=n.index,v=n.attributes.position;if(p!==null){const m=Math.max(0,a.start),g=Math.min(p.count,a.start+a.count);for(let M=m,C=g-1;M<C;M+=d){const T=p.getX(M),y=p.getX(M+1);if(c.fromBufferAttribute(v,T),u.fromBufferAttribute(v,y),Ys.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const z=t.ray.origin.distanceTo(f);z<t.near||z>t.far||e.push({distance:z,point:h.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else{const m=Math.max(0,a.start),g=Math.min(v.count,a.start+a.count);for(let M=m,C=g-1;M<C;M+=d){if(c.fromBufferAttribute(v,M),u.fromBufferAttribute(v,M+1),Ys.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const y=t.ray.origin.distanceTo(f);y<t.near||y>t.far||e.push({distance:y,point:h.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const r=e[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Zs.prototype.isLine=!0;const Ml=new A,Sl=new A;class Js extends Zs{constructor(t,e){super(t,e);this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[];for(let r=0,s=e.count;r<s;r+=2)Ml.fromBufferAttribute(e,r),Sl.fromBufferAttribute(e,r+1),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+Ml.distanceTo(Sl);t.setAttribute("lineDistance",new se(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Js.prototype.isLineSegments=!0;class Bg extends Zs{constructor(t,e){super(t,e);this.type="LineLoop"}}Bg.prototype.isLineLoop=!0;class El extends de{constructor(t){super();this.type="PointsMaterial",this.color=new pt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}El.prototype.isPointsMaterial=!0;const Tl=new vt,Qs=new Gn,kr=new Vn,Br=new A;class Al extends zt{constructor(t=new jt,e=new El){super();this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,s=t.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),kr.copy(n.boundingSphere),kr.applyMatrix4(r),kr.radius+=s,t.ray.intersectsSphere(kr)===!1)return;Tl.copy(r).invert(),Qs.copy(t.ray).applyMatrix4(Tl);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o;if(n.isBufferGeometry){const c=n.index,h=n.attributes.position;if(c!==null){const f=Math.max(0,a.start),d=Math.min(c.count,a.start+a.count);for(let p=f,x=d;p<x;p++){const v=c.getX(p);Br.fromBufferAttribute(h,v),Ll(Br,v,l,r,t,e,this)}}else{const f=Math.max(0,a.start),d=Math.min(h.count,a.start+a.count);for(let p=f,x=d;p<x;p++)Br.fromBufferAttribute(h,p),Ll(Br,p,l,r,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const r=e[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Al.prototype.isPoints=!0;function Ll(i,t,e,n,r,s,a){const o=Qs.distanceSqToPoint(i);if(o<e){const l=new A;Qs.closestPointToPoint(i,l),l.applyMatrix4(n);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:a})}}class zg extends ce{constructor(t,e,n,r,s,a,o,l,c){super(t,e,n,r,s,a,o,l,c);this.format=o!==void 0?o:Sn,this.minFilter=a!==void 0?a:Le,this.magFilter=s!==void 0?s:Le,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,t.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}zg.prototype.isVideoTexture=!0;class Og extends ce{constructor(t,e,n,r,s,a,o,l,c,u,h,f){super(null,a,o,l,c,u,r,s,h,f);this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}Og.prototype.isCompressedTexture=!0;class Ug extends ce{constructor(t,e,n,r,s,a,o,l,c){super(t,e,n,r,s,a,o,l,c);this.needsUpdate=!0}}Ug.prototype.isCanvasTexture=!0;class Hg extends ce{constructor(t,e,n,r,s,a,o,l,c,u){if(u=u!==void 0?u:Dn,u!==Dn&&u!==Si)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Dn&&(n=ar),n===void 0&&u===Si&&(n=Mi);super(null,r,s,a,o,l,u,n,c);this.image={width:t,height:e},this.magFilter=o!==void 0?o:he,this.minFilter=l!==void 0?l:he,this.flipY=!1,this.generateMipmaps=!1}}Hg.prototype.isDepthTexture=!0;new A;new A;new A;new ee;class Pe{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),s=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),s+=n.distanceTo(r),e.push(s),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let r=0;const s=n.length;let a;e?a=e:a=t*n[s-1];let o=0,l=s-1,c;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),c=n[r]-a,c<0)o=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,n[r]===a)return r/(s-1);const u=n[r],f=n[r+1]-u,d=(a-u)/f;return(r+d)/(s-1)}getTangent(t,e){const n=1e-4;let r=t-n,s=t+n;r<0&&(r=0),s>1&&(s=1);const a=this.getPoint(r),o=this.getPoint(s),l=e||(a.isVector2?new rt:new A);return l.copy(o).sub(a).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new A,r=[],s=[],a=[],o=new A,l=new vt;for(let d=0;d<=t;d++){const p=d/t;r[d]=this.getTangentAt(p,new A),r[d].normalize()}s[0]=new A,a[0]=new A;let c=Number.MAX_VALUE;const u=Math.abs(r[0].x),h=Math.abs(r[0].y),f=Math.abs(r[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),o.crossVectors(r[0],n).normalize(),s[0].crossVectors(r[0],o),a[0].crossVectors(r[0],s[0]);for(let d=1;d<=t;d++){if(s[d]=s[d-1].clone(),a[d]=a[d-1].clone(),o.crossVectors(r[d-1],r[d]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(Se(r[d-1].dot(r[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(o,p))}a[d].crossVectors(r[d],s[d])}if(e===!0){let d=Math.acos(Se(s[0].dot(s[t]),-1,1));d/=t,r[0].dot(o.crossVectors(s[0],s[t]))>0&&(d=-d);for(let p=1;p<=t;p++)s[p].applyMatrix4(l.makeRotationAxis(r[p],d*p)),a[p].crossVectors(r[p],s[p])}return{tangents:r,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class zr extends Pe{constructor(t=0,e=0,n=1,r=1,s=0,a=Math.PI*2,o=!1,l=0){super();this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(t,e){const n=e||new rt,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(a?s=0:s=r),this.aClockwise===!0&&!a&&(s===r?s=-r:s=s-r);const o=this.aStartAngle+t*s;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}zr.prototype.isEllipseCurve=!0;class Cl extends zr{constructor(t,e,n,r,s,a){super(t,e,n,n,r,s,a);this.type="ArcCurve"}}Cl.prototype.isArcCurve=!0;function $s(){let i=0,t=0,e=0,n=0;function r(s,a,o,l){i=s,t=o,e=-3*s+3*a-2*o-l,n=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,c){r(a,o,c*(o-s),c*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,c,u,h){let f=(a-s)/c-(o-s)/(c+u)+(o-a)/u,d=(o-a)/u-(l-a)/(u+h)+(l-o)/h;f*=u,d*=u,r(a,o,f,d)},calc:function(s){const a=s*s,o=a*s;return i+t*s+e*a+n*o}}}const Or=new A,Ks=new $s,ta=new $s,ea=new $s;class Rl extends Pe{constructor(t=[],e=!1,n="centripetal",r=.5){super();this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new A){const n=e,r=this.points,s=r.length,a=(s-(this.closed?0:1))*t;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:l===0&&o===s-1&&(o=s-2,l=1);let c,u;this.closed||o>0?c=r[(o-1)%s]:(Or.subVectors(r[0],r[1]).add(r[0]),c=Or);const h=r[o%s],f=r[(o+1)%s];if(this.closed||o+2<s?u=r[(o+2)%s]:(Or.subVectors(r[s-1],r[s-2]).add(r[s-1]),u=Or),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),x=Math.pow(h.distanceToSquared(f),d),v=Math.pow(f.distanceToSquared(u),d);x<1e-4&&(x=1),p<1e-4&&(p=x),v<1e-4&&(v=x),Ks.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,x,v),ta.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,x,v),ea.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,x,v)}else this.curveType==="catmullrom"&&(Ks.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),ta.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),ea.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(Ks.calc(l),ta.calc(l),ea.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const r=t.points[e];this.points.push(r.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const r=this.points[e];t.points.push(r.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const r=t.points[e];this.points.push(new A().fromArray(r))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}Rl.prototype.isCatmullRomCurve3=!0;function Pl(i,t,e,n,r){const s=(n-t)*.5,a=(r-e)*.5,o=i*i,l=i*o;return(2*e-2*n+s+a)*l+(-3*e+3*n-2*s-a)*o+s*i+e}function Vg(i,t){const e=1-i;return e*e*t}function Gg(i,t){return 2*(1-i)*i*t}function Wg(i,t){return i*i*t}function Hi(i,t,e,n){return Vg(i,t)+Gg(i,e)+Wg(i,n)}function qg(i,t){const e=1-i;return e*e*e*t}function Xg(i,t){const e=1-i;return 3*e*e*i*t}function jg(i,t){return 3*(1-i)*i*i*t}function Yg(i,t){return i*i*i*t}function Vi(i,t,e,n,r){return qg(i,t)+Xg(i,e)+jg(i,n)+Yg(i,r)}class na extends Pe{constructor(t=new rt,e=new rt,n=new rt,r=new rt){super();this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new rt){const n=e,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(Vi(t,r.x,s.x,a.x,o.x),Vi(t,r.y,s.y,a.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}na.prototype.isCubicBezierCurve=!0;class Il extends Pe{constructor(t=new A,e=new A,n=new A,r=new A){super();this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new A){const n=e,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(Vi(t,r.x,s.x,a.x,o.x),Vi(t,r.y,s.y,a.y,o.y),Vi(t,r.z,s.z,a.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Il.prototype.isCubicBezierCurve3=!0;class Ur extends Pe{constructor(t=new rt,e=new rt){super();this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new rt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new rt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ur.prototype.isLineCurve=!0;class Zg extends Pe{constructor(t=new A,e=new A){super();this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new A){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ia extends Pe{constructor(t=new rt,e=new rt,n=new rt){super();this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new rt){const n=e,r=this.v0,s=this.v1,a=this.v2;return n.set(Hi(t,r.x,s.x,a.x),Hi(t,r.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}ia.prototype.isQuadraticBezierCurve=!0;class Dl extends Pe{constructor(t=new A,e=new A,n=new A){super();this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new A){const n=e,r=this.v0,s=this.v1,a=this.v2;return n.set(Hi(t,r.x,s.x,a.x),Hi(t,r.y,s.y,a.y),Hi(t,r.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Dl.prototype.isQuadraticBezierCurve3=!0;class ra extends Pe{constructor(t=[]){super();this.type="SplineCurve",this.points=t}getPoint(t,e=new rt){const n=e,r=this.points,s=(r.length-1)*t,a=Math.floor(s),o=s-a,l=r[a===0?a:a-1],c=r[a],u=r[a>r.length-2?r.length-1:a+1],h=r[a>r.length-3?r.length-1:a+2];return n.set(Pl(o,l.x,c.x,u.x,h.x),Pl(o,l.y,c.y,u.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const r=t.points[e];this.points.push(r.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const r=this.points[e];t.points.push(r.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const r=t.points[e];this.points.push(new rt().fromArray(r))}return this}}ra.prototype.isSplineCurve=!0;var Fl=Object.freeze({__proto__:null,ArcCurve:Cl,CatmullRomCurve3:Rl,CubicBezierCurve:na,CubicBezierCurve3:Il,EllipseCurve:zr,LineCurve:Ur,LineCurve3:Zg,QuadraticBezierCurve:ia,QuadraticBezierCurve3:Dl,SplineCurve:ra});const Jg={triangulate:function(i,t,e=2){const n=t&&t.length,r=n?t[0]*e:i.length;let s=Nl(i,0,r,e,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,u,h,f,d;if(n&&(s=ex(i,t,s,e)),i.length>80*e){o=c=i[0],l=u=i[1];for(let p=e;p<r;p+=e)h=i[p],f=i[p+1],h<o&&(o=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-o,u-l),d=d!==0?1/d:0}return Gi(s,a,e,o,l,d),a}};function Nl(i,t,e,n,r){let s,a;if(r===dx(i,t,e,n)>0)for(s=t;s<e;s+=n)a=zl(s,i[s],i[s+1],a);else for(s=e-n;s>=t;s-=n)a=zl(s,i[s],i[s+1],a);return a&&Hr(a,a.next)&&(qi(a),a=a.next),a}function dn(i,t){if(!i)return i;t||(t=i);let e=i,n;do if(n=!1,!e.steiner&&(Hr(e,e.next)||Qt(e.prev,e,e.next)===0)){if(qi(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Gi(i,t,e,n,r,s,a){if(!i)return;!a&&s&&ax(i,n,r,s);let o=i,l,c;for(;i.prev!==i.next;){if(l=i.prev,c=i.next,s?$g(i,n,r,s):Qg(i)){t.push(l.i/e),t.push(i.i/e),t.push(c.i/e),qi(i),i=c.next,o=c.next;continue}if(i=c,i===o){a?a===1?(i=Kg(dn(i),t,e),Gi(i,t,e,n,r,s,2)):a===2&&tx(i,t,e,n,r,s):Gi(dn(i),t,e,n,r,s,1);break}}}function Qg(i){const t=i.prev,e=i,n=i.next;if(Qt(t,e,n)>=0)return!1;let r=i.next.next;for(;r!==i.prev;){if(oi(t.x,t.y,e.x,e.y,n.x,n.y,r.x,r.y)&&Qt(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function $g(i,t,e,n){const r=i.prev,s=i,a=i.next;if(Qt(r,s,a)>=0)return!1;const o=r.x<s.x?r.x<a.x?r.x:a.x:s.x<a.x?s.x:a.x,l=r.y<s.y?r.y<a.y?r.y:a.y:s.y<a.y?s.y:a.y,c=r.x>s.x?r.x>a.x?r.x:a.x:s.x>a.x?s.x:a.x,u=r.y>s.y?r.y>a.y?r.y:a.y:s.y>a.y?s.y:a.y,h=sa(o,l,t,e,n),f=sa(c,u,t,e,n);let d=i.prevZ,p=i.nextZ;for(;d&&d.z>=h&&p&&p.z<=f;){if(d!==i.prev&&d!==i.next&&oi(r.x,r.y,s.x,s.y,a.x,a.y,d.x,d.y)&&Qt(d.prev,d,d.next)>=0||(d=d.prevZ,p!==i.prev&&p!==i.next&&oi(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&Qt(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=h;){if(d!==i.prev&&d!==i.next&&oi(r.x,r.y,s.x,s.y,a.x,a.y,d.x,d.y)&&Qt(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==i.prev&&p!==i.next&&oi(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&Qt(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function Kg(i,t,e){let n=i;do{const r=n.prev,s=n.next.next;!Hr(r,s)&&kl(r,n,n.next,s)&&Wi(r,s)&&Wi(s,r)&&(t.push(r.i/e),t.push(n.i/e),t.push(s.i/e),qi(n),qi(n.next),n=i=s),n=n.next}while(n!==i);return dn(n)}function tx(i,t,e,n,r,s){let a=i;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&cx(a,o)){let l=Bl(a,o);a=dn(a,a.next),l=dn(l,l.next),Gi(a,t,e,n,r,s),Gi(l,t,e,n,r,s);return}o=o.next}a=a.next}while(a!==i)}function ex(i,t,e,n){const r=[];let s,a,o,l,c;for(s=0,a=t.length;s<a;s++)o=t[s]*n,l=s<a-1?t[s+1]*n:i.length,c=Nl(i,o,l,n,!1),c===c.next&&(c.steiner=!0),r.push(lx(c));for(r.sort(nx),s=0;s<r.length;s++)ix(r[s],e),e=dn(e,e.next);return e}function nx(i,t){return i.x-t.x}function ix(i,t){if(t=rx(i,t),t){const e=Bl(t,i);dn(t,t.next),dn(e,e.next)}}function rx(i,t){let e=t;const n=i.x,r=i.y;let s=-1/0,a;do{if(r<=e.y&&r>=e.next.y&&e.next.y!==e.y){const f=e.x+(r-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(f<=n&&f>s){if(s=f,f===n){if(r===e.y)return e;if(r===e.next.y)return e.next}a=e.x<e.next.x?e:e.next}}e=e.next}while(e!==t);if(!a)return null;if(n===s)return a;const o=a,l=a.x,c=a.y;let u=1/0,h;e=a;do n>=e.x&&e.x>=l&&n!==e.x&&oi(r<c?n:s,r,l,c,r<c?s:n,r,e.x,e.y)&&(h=Math.abs(r-e.y)/(n-e.x),Wi(e,i)&&(h<u||h===u&&(e.x>a.x||e.x===a.x&&sx(a,e)))&&(a=e,u=h)),e=e.next;while(e!==o);return a}function sx(i,t){return Qt(i.prev,i,t.prev)<0&&Qt(t.next,i,i.next)<0}function ax(i,t,e,n){let r=i;do r.z===null&&(r.z=sa(r.x,r.y,t,e,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==i);r.prevZ.nextZ=null,r.prevZ=null,ox(r)}function ox(i){let t,e,n,r,s,a,o,l,c=1;do{for(e=i,i=null,s=null,a=0;e;){for(a++,n=e,o=0,t=0;t<c&&(o++,n=n.nextZ,!!n);t++);for(l=c;o>0||l>0&&n;)o!==0&&(l===0||!n||e.z<=n.z)?(r=e,e=e.nextZ,o--):(r=n,n=n.nextZ,l--),s?s.nextZ=r:i=r,r.prevZ=s,s=r;e=n}s.nextZ=null,c*=2}while(a>1);return i}function sa(i,t,e,n,r){return i=32767*(i-e)*r,t=32767*(t-n)*r,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,i|t<<1}function lx(i){let t=i,e=i;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==i);return e}function oi(i,t,e,n,r,s,a,o){return(r-a)*(t-o)-(i-a)*(s-o)>=0&&(i-a)*(n-o)-(e-a)*(t-o)>=0&&(e-a)*(s-o)-(r-a)*(n-o)>=0}function cx(i,t){return i.next.i!==t.i&&i.prev.i!==t.i&&!ux(i,t)&&(Wi(i,t)&&Wi(t,i)&&hx(i,t)&&(Qt(i.prev,i,t.prev)||Qt(i,t.prev,t))||Hr(i,t)&&Qt(i.prev,i,i.next)>0&&Qt(t.prev,t,t.next)>0)}function Qt(i,t,e){return(t.y-i.y)*(e.x-t.x)-(t.x-i.x)*(e.y-t.y)}function Hr(i,t){return i.x===t.x&&i.y===t.y}function kl(i,t,e,n){const r=Gr(Qt(i,t,e)),s=Gr(Qt(i,t,n)),a=Gr(Qt(e,n,i)),o=Gr(Qt(e,n,t));return!!(r!==s&&a!==o||r===0&&Vr(i,e,t)||s===0&&Vr(i,n,t)||a===0&&Vr(e,i,n)||o===0&&Vr(e,t,n))}function Vr(i,t,e){return t.x<=Math.max(i.x,e.x)&&t.x>=Math.min(i.x,e.x)&&t.y<=Math.max(i.y,e.y)&&t.y>=Math.min(i.y,e.y)}function Gr(i){return i>0?1:i<0?-1:0}function ux(i,t){let e=i;do{if(e.i!==i.i&&e.next.i!==i.i&&e.i!==t.i&&e.next.i!==t.i&&kl(e,e.next,i,t))return!0;e=e.next}while(e!==i);return!1}function Wi(i,t){return Qt(i.prev,i,i.next)<0?Qt(i,t,i.next)>=0&&Qt(i,i.prev,t)>=0:Qt(i,t,i.prev)<0||Qt(i,i.next,t)<0}function hx(i,t){let e=i,n=!1;const r=(i.x+t.x)/2,s=(i.y+t.y)/2;do e.y>s!=e.next.y>s&&e.next.y!==e.y&&r<(e.next.x-e.x)*(s-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==i);return n}function Bl(i,t){const e=new aa(i.i,i.x,i.y),n=new aa(t.i,t.x,t.y),r=i.next,s=t.prev;return i.next=t,t.prev=i,e.next=r,r.prev=e,n.next=e,e.prev=n,s.next=n,n.prev=s,n}function zl(i,t,e,n){const r=new aa(i,t,e);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function qi(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function aa(i,t,e){this.i=i,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function dx(i,t,e,n){let r=0;for(let s=t,a=e-n;s<e;s+=n)r+=(i[a]-i[s])*(i[s+1]+i[a+1]),a=s;return r}class fn{static area(t){const e=t.length;let n=0;for(let r=e-1,s=0;s<e;r=s++)n+=t[r].x*t[s].y-t[s].x*t[r].y;return n*.5}static isClockWise(t){return fn.area(t)<0}static triangulateShape(t,e){const n=[],r=[],s=[];Ol(t),Ul(n,t);let a=t.length;e.forEach(Ol);for(let l=0;l<e.length;l++)r.push(a),a+=e[l].length,Ul(n,e[l]);const o=Jg.triangulate(n,r);for(let l=0;l<o.length;l+=3)s.push(o.slice(l,l+3));return s}}function Ol(i){const t=i.length;t>2&&i[t-1].equals(i[0])&&i.pop()}function Ul(i,t){for(let e=0;e<t.length;e++)i.push(t[e].x),i.push(t[e].y)}class li extends jt{constructor(t,e){super();this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],s=[];for(let o=0,l=t.length;o<l;o++){const c=t[o];a(c)}this.setAttribute("position",new se(r,3)),this.setAttribute("uv",new se(s,2)),this.computeVertexNormals();function a(o){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,u=e.steps!==void 0?e.steps:1;let h=e.depth!==void 0?e.depth:100,f=e.bevelEnabled!==void 0?e.bevelEnabled:!0,d=e.bevelThickness!==void 0?e.bevelThickness:6,p=e.bevelSize!==void 0?e.bevelSize:d-2,x=e.bevelOffset!==void 0?e.bevelOffset:0,v=e.bevelSegments!==void 0?e.bevelSegments:3;const m=e.extrudePath,g=e.UVGenerator!==void 0?e.UVGenerator:fx;e.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=e.amount);let M,C=!1,T,y,D,z;m&&(M=m.getSpacedPoints(u),C=!0,f=!1,T=m.computeFrenetFrames(u,!1),y=new A,D=new A,z=new A),f||(v=0,d=0,p=0,x=0);const H=o.extractPoints(c);let X=H.shape;const k=H.holes;if(!fn.isClockWise(X)){X=X.reverse();for(let J=0,tt=k.length;J<tt;J++){const it=k[J];fn.isClockWise(it)&&(k[J]=it.reverse())}}const N=fn.triangulateShape(X,k),O=X;for(let J=0,tt=k.length;J<tt;J++){const it=k[J];X=X.concat(it)}function P(J,tt,it){return tt||console.error("THREE.ExtrudeGeometry: vec does not exist"),tt.clone().multiplyScalar(it).add(J)}const R=X.length,V=N.length;function Y(J,tt,it){let ht,ot,E;const w=J.x-tt.x,j=J.y-tt.y,Q=it.x-J.x,at=it.y-J.y,lt=w*w+j*j,yt=w*at-j*Q;if(Math.abs(yt)>Number.EPSILON){const gt=Math.sqrt(lt),Ct=Math.sqrt(Q*Q+at*at),ct=tt.x-j/gt,F=tt.y+w/gt,L=it.x-at/Ct,I=it.y+Q/Ct,$=((L-ct)*at-(I-F)*Q)/(w*at-j*Q);ht=ct+w*$-J.x,ot=F+j*$-J.y;const K=ht*ht+ot*ot;if(K<=2)return new rt(ht,ot);E=Math.sqrt(K/2)}else{let gt=!1;w>Number.EPSILON?Q>Number.EPSILON&&(gt=!0):w<-Number.EPSILON?Q<-Number.EPSILON&&(gt=!0):Math.sign(j)===Math.sign(at)&&(gt=!0),gt?(ht=-j,ot=w,E=Math.sqrt(lt)):(ht=w,ot=j,E=Math.sqrt(lt/2))}return new rt(ht/E,ot/E)}const q=[];for(let J=0,tt=O.length,it=tt-1,ht=J+1;J<tt;J++,it++,ht++)it===tt&&(it=0),ht===tt&&(ht=0),q[J]=Y(O[J],O[it],O[ht]);const et=[];let b,S=q.concat();for(let J=0,tt=k.length;J<tt;J++){const it=k[J];b=[];for(let ht=0,ot=it.length,E=ot-1,w=ht+1;ht<ot;ht++,E++,w++)E===ot&&(E=0),w===ot&&(w=0),b[ht]=Y(it[ht],it[E],it[w]);et.push(b),S=S.concat(b)}for(let J=0;J<v;J++){const tt=J/v,it=d*Math.cos(tt*Math.PI/2),ht=p*Math.sin(tt*Math.PI/2)+x;for(let ot=0,E=O.length;ot<E;ot++){const w=P(O[ot],q[ot],ht);Bt(w.x,w.y,-it)}for(let ot=0,E=k.length;ot<E;ot++){const w=k[ot];b=et[ot];for(let j=0,Q=w.length;j<Q;j++){const at=P(w[j],b[j],ht);Bt(at.x,at.y,-it)}}}const dt=p+x;for(let J=0;J<R;J++){const tt=f?P(X[J],S[J],dt):X[J];C?(D.copy(T.normals[0]).multiplyScalar(tt.x),y.copy(T.binormals[0]).multiplyScalar(tt.y),z.copy(M[0]).add(D).add(y),Bt(z.x,z.y,z.z)):Bt(tt.x,tt.y,0)}for(let J=1;J<=u;J++)for(let tt=0;tt<R;tt++){const it=f?P(X[tt],S[tt],dt):X[tt];C?(D.copy(T.normals[J]).multiplyScalar(it.x),y.copy(T.binormals[J]).multiplyScalar(it.y),z.copy(M[J]).add(D).add(y),Bt(z.x,z.y,z.z)):Bt(it.x,it.y,h/u*J)}for(let J=v-1;J>=0;J--){const tt=J/v,it=d*Math.cos(tt*Math.PI/2),ht=p*Math.sin(tt*Math.PI/2)+x;for(let ot=0,E=O.length;ot<E;ot++){const w=P(O[ot],q[ot],ht);Bt(w.x,w.y,h+it)}for(let ot=0,E=k.length;ot<E;ot++){const w=k[ot];b=et[ot];for(let j=0,Q=w.length;j<Q;j++){const at=P(w[j],b[j],ht);C?Bt(at.x,at.y+M[u-1].y,M[u-1].x+it):Bt(at.x,at.y,h+it)}}}St(),_t();function St(){const J=r.length/3;if(f){let tt=0,it=R*tt;for(let ht=0;ht<V;ht++){const ot=N[ht];Et(ot[2]+it,ot[1]+it,ot[0]+it)}tt=u+v*2,it=R*tt;for(let ht=0;ht<V;ht++){const ot=N[ht];Et(ot[0]+it,ot[1]+it,ot[2]+it)}}else{for(let tt=0;tt<V;tt++){const it=N[tt];Et(it[2],it[1],it[0])}for(let tt=0;tt<V;tt++){const it=N[tt];Et(it[0]+R*u,it[1]+R*u,it[2]+R*u)}}n.addGroup(J,r.length/3-J,0)}function _t(){const J=r.length/3;let tt=0;G(O,tt),tt+=O.length;for(let it=0,ht=k.length;it<ht;it++){const ot=k[it];G(ot,tt),tt+=ot.length}n.addGroup(J,r.length/3-J,1)}function G(J,tt){let it=J.length;for(;--it>=0;){const ht=it;let ot=it-1;ot<0&&(ot=J.length-1);for(let E=0,w=u+v*2;E<w;E++){const j=R*E,Q=R*(E+1),at=tt+ht+j,lt=tt+ot+j,yt=tt+ot+Q,gt=tt+ht+Q;mt(at,lt,yt,gt)}}}function Bt(J,tt,it){l.push(J),l.push(tt),l.push(it)}function Et(J,tt,it){ut(J),ut(tt),ut(it);const ht=r.length/3,ot=g.generateTopUV(n,r,ht-3,ht-2,ht-1);Tt(ot[0]),Tt(ot[1]),Tt(ot[2])}function mt(J,tt,it,ht){ut(J),ut(tt),ut(ht),ut(tt),ut(it),ut(ht);const ot=r.length/3,E=g.generateSideWallUV(n,r,ot-6,ot-3,ot-2,ot-1);Tt(E[0]),Tt(E[1]),Tt(E[3]),Tt(E[1]),Tt(E[2]),Tt(E[3])}function ut(J){r.push(l[J*3+0]),r.push(l[J*3+1]),r.push(l[J*3+2])}function Tt(J){s.push(J.x),s.push(J.y)}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return px(e,n,t)}static fromJSON(t,e){const n=[];for(let s=0,a=t.shapes.length;s<a;s++){const o=e[t.shapes[s]];n.push(o)}const r=t.options.extrudePath;return r!==void 0&&(t.options.extrudePath=new Fl[r.type]().fromJSON(r)),new li(n,t.options)}}const fx={generateTopUV:function(i,t,e,n,r){const s=t[e*3],a=t[e*3+1],o=t[n*3],l=t[n*3+1],c=t[r*3],u=t[r*3+1];return[new rt(s,a),new rt(o,l),new rt(c,u)]},generateSideWallUV:function(i,t,e,n,r,s){const a=t[e*3],o=t[e*3+1],l=t[e*3+2],c=t[n*3],u=t[n*3+1],h=t[n*3+2],f=t[r*3],d=t[r*3+1],p=t[r*3+2],x=t[s*3],v=t[s*3+1],m=t[s*3+2];return Math.abs(o-u)<Math.abs(a-c)?[new rt(a,1-l),new rt(c,1-h),new rt(f,1-p),new rt(x,1-m)]:[new rt(o,1-l),new rt(u,1-h),new rt(d,1-p),new rt(v,1-m)]}};function px(i,t,e){if(e.shapes=[],Array.isArray(i))for(let n=0,r=i.length;n<r;n++){const s=i[n];e.shapes.push(s.uuid)}else e.shapes.push(i.uuid);return t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class oa extends jt{constructor(t,e=12){super();this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],s=[],a=[];let o=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let u=0;u<t.length;u++)c(t[u]),this.addGroup(o,l,u),o+=l,l=0;this.setIndex(n),this.setAttribute("position",new se(r,3)),this.setAttribute("normal",new se(s,3)),this.setAttribute("uv",new se(a,2));function c(u){const h=r.length/3,f=u.extractPoints(e);let d=f.shape;const p=f.holes;fn.isClockWise(d)===!1&&(d=d.reverse());for(let v=0,m=p.length;v<m;v++){const g=p[v];fn.isClockWise(g)===!0&&(p[v]=g.reverse())}const x=fn.triangulateShape(d,p);for(let v=0,m=p.length;v<m;v++){const g=p[v];d=d.concat(g)}for(let v=0,m=d.length;v<m;v++){const g=d[v];r.push(g.x,g.y,0),s.push(0,0,1),a.push(g.x,g.y)}for(let v=0,m=x.length;v<m;v++){const g=x[v],M=g[0]+h,C=g[1]+h,T=g[2]+h;n.push(M,C,T),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return mx(e,t)}static fromJSON(t,e){const n=[];for(let r=0,s=t.shapes.length;r<s;r++){const a=e[t.shapes[r]];n.push(a)}return new oa(n,t.curveSegments)}}function mx(i,t){if(t.shapes=[],Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const r=i[e];t.shapes.push(r.uuid)}else t.shapes.push(i.uuid);return t}class gx extends de{constructor(t){super();this.type="ShadowMaterial",this.color=new pt(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}gx.prototype.isShadowMaterial=!0;class xx extends Ln{constructor(t){super(t);this.type="RawShaderMaterial"}}xx.prototype.isRawShaderMaterial=!0;class Hl extends de{constructor(t){super();this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new pt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this}}Hl.prototype.isMeshStandardMaterial=!0;class yx extends Hl{constructor(t){super();this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new rt(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=Se(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new pt(1,1,1),this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new pt).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this}}yx.prototype.isMeshPhysicalMaterial=!0;class vx extends de{constructor(t){super();this.type="MeshPhongMaterial",this.color=new pt(16777215),this.specular=new pt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ir,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}vx.prototype.isMeshPhongMaterial=!0;class _x extends de{constructor(t){super();this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new pt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}_x.prototype.isMeshToonMaterial=!0;class bx extends de{constructor(t){super();this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}bx.prototype.isMeshNormalMaterial=!0;class wx extends de{constructor(t){super();this.type="MeshLambertMaterial",this.color=new pt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ir,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}wx.prototype.isMeshLambertMaterial=!0;class Mx extends de{constructor(t){super();this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new pt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new rt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}Mx.prototype.isMeshMatcapMaterial=!0;class Sx extends Ui{constructor(t){super();this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}Sx.prototype.isLineDashedMaterial=!0;const Yt={arraySlice:function(i,t,e){return Yt.isTypedArray(i)?new i.constructor(i.subarray(t,e!==void 0?e:i.length)):i.slice(t,e)},convertArray:function(i,t,e){return!i||!e&&i.constructor===t?i:typeof t.BYTES_PER_ELEMENT=="number"?new t(i):Array.prototype.slice.call(i)},isTypedArray:function(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)},getKeyframeOrder:function(i){function t(r,s){return i[r]-i[s]}const e=i.length,n=new Array(e);for(let r=0;r!==e;++r)n[r]=r;return n.sort(t),n},sortedArray:function(i,t,e){const n=i.length,r=new i.constructor(n);for(let s=0,a=0;a!==n;++s){const o=e[s]*t;for(let l=0;l!==t;++l)r[a++]=i[o+l]}return r},flattenJSON:function(i,t,e,n){let r=1,s=i[0];for(;s!==void 0&&s[n]===void 0;)s=i[r++];if(s===void 0)return;let a=s[n];if(a!==void 0)if(Array.isArray(a))do a=s[n],a!==void 0&&(t.push(s.time),e.push.apply(e,a)),s=i[r++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[n],a!==void 0&&(t.push(s.time),a.toArray(e,e.length)),s=i[r++];while(s!==void 0);else do a=s[n],a!==void 0&&(t.push(s.time),e.push(a)),s=i[r++];while(s!==void 0)},subclip:function(i,t,e,n,r=30){const s=i.clone();s.name=t;const a=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*r;if(!(p<e||p>=n)){h.push(c.times[d]);for(let x=0;x<u;++x)f.push(c.values[d*u+x])}}h.length!==0&&(c.times=Yt.convertArray(h,c.times.constructor),c.values=Yt.convertArray(f,c.values.constructor),a.push(c))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(i,t=0,e=i,n=30){n<=0&&(n=30);const r=e.tracks.length,s=t/n;for(let a=0;a<r;++a){const o=e.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=i.tracks.find(function(m){return m.name===o.name&&m.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=o.times.length-1;let x;if(s<=o.times[0]){const m=u,g=h-u;x=Yt.arraySlice(o.values,m,g)}else if(s>=o.times[p]){const m=p*h+u,g=m+h-u;x=Yt.arraySlice(o.values,m,g)}else{const m=o.createInterpolant(),g=u,M=h-u;m.evaluate(s),x=Yt.arraySlice(m.resultBuffer,g,M)}l==="quaternion"&&new _e().fromArray(x).normalize().conjugate().toArray(x);const v=c.times.length;for(let m=0;m<v;++m){const g=m*d+f;if(l==="quaternion")_e.multiplyQuaternionsFlat(c.values,g,x,0,c.values,g);else{const M=d-f*2;for(let C=0;C<M;++C)c.values[g+C]-=x[C]}}}return i.blendMode=fo,i}};class pn{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],s=e[n-1];t:{e:{let a;n:{i:if(!(t<r)){for(let o=n+2;;){if(r===void 0){if(t<s)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,s)}if(n===o)break;if(s=r,r=e[++n],t<r)break e}a=e.length;break n}if(!(t>=s)){const o=e[1];t<o&&(n=2,s=o);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===l)break;if(r=s,s=e[--n-1],t>=s)break e}a=n,n=0;break n}break t}for(;n<a;){const o=n+a>>>1;t<e[o]?a=o:n=o+1}if(r=e[n],s=e[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(r===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,s,t)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=t*r;for(let a=0;a!==r;++a)e[a]=n[s+a];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}pn.prototype.beforeStart_=pn.prototype.copySampleValue_;pn.prototype.afterEnd_=pn.prototype.copySampleValue_;class Ex extends pn{constructor(t,e,n,r){super(t,e,n,r);this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Fn,endingEnd:Fn}}intervalChanged_(t,e,n){const r=this.parameterPositions;let s=t-2,a=t+1,o=r[s],l=r[a];if(o===void 0)switch(this.getSettings_().endingStart){case Nn:s=t,o=2*e-n;break;case ur:s=r.length-2,o=e+r[s]-r[s+1];break;default:s=t,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Nn:a=t,l=2*n-e;break;case ur:a=1,l=n+r[1]-r[0];break;default:a=t-1,l=e}const c=(n-e)*.5,u=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=a*u}interpolate_(t,e,n,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=t*o,c=l-o,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-e)/(r-e),x=p*p,v=x*p,m=-f*v+2*f*x-f*p,g=(1+f)*v+(-1.5-2*f)*x+(-.5+f)*p+1,M=(-1-d)*v+(1.5+d)*x+.5*p,C=d*v-d*x;for(let T=0;T!==o;++T)s[T]=m*a[u+T]+g*a[c+T]+M*a[l+T]+C*a[h+T];return s}}class Vl extends pn{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=t*o,c=l-o,u=(n-e)/(r-e),h=1-u;for(let f=0;f!==o;++f)s[f]=a[c+f]*h+a[l+f]*u;return s}}class Tx extends pn{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class qe{constructor(t,e,n,r){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Yt.convertArray(e,this.TimeBufferType),this.values=Yt.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Yt.convertArray(t.times,Array),values:Yt.convertArray(t.values,Array)};const r=t.getInterpolation();r!==t.DefaultInterpolation&&(n.interpolation=r)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Tx(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Vl(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Ex(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case lr:e=this.InterpolantFactoryMethodDiscrete;break;case cr:e=this.InterpolantFactoryMethodLinear;break;case us:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return lr;case this.InterpolantFactoryMethodLinear:return cr;case this.InterpolantFactoryMethodSmooth:return us}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this}trim(t,e){const n=this.times,r=n.length;let s=0,a=r-1;for(;s!==r&&n[s]<t;)++s;for(;a!==-1&&n[a]>e;)--a;if(++a,s!==0||a!==r){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=Yt.arraySlice(n,s,a),this.values=Yt.arraySlice(this.values,s*o,a*o)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let o=0;o!==s;o++){const l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),t=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),t=!1;break}a=l}if(r!==void 0&&Yt.isTypedArray(r))for(let o=0,l=r.length;o!==l;++o){const c=r[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),t=!1;break}}return t}optimize(){const t=Yt.arraySlice(this.times),e=Yt.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===us,s=t.length-1;let a=1;for(let o=1;o<s;++o){let l=!1;const c=t[o],u=t[o+1];if(c!==u&&(o!==1||c!==t[0]))if(r)l=!0;else{const h=o*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const x=e[h+p];if(x!==e[f+p]||x!==e[d+p]){l=!0;break}}}if(l){if(o!==a){t[a]=t[o];const h=o*n,f=a*n;for(let d=0;d!==n;++d)e[f+d]=e[h+d]}++a}}if(s>0){t[a]=t[s];for(let o=s*n,l=a*n,c=0;c!==n;++c)e[l+c]=e[o+c];++a}return a!==t.length?(this.times=Yt.arraySlice(t,0,a),this.values=Yt.arraySlice(e,0,a*n)):(this.times=t,this.values=e),this}clone(){const t=Yt.arraySlice(this.times,0),e=Yt.arraySlice(this.values,0),n=this.constructor,r=new n(this.name,t,e);return r.createInterpolant=this.createInterpolant,r}}qe.prototype.TimeBufferType=Float32Array;qe.prototype.ValueBufferType=Float32Array;qe.prototype.DefaultInterpolation=cr;class ci extends qe{}ci.prototype.ValueTypeName="bool";ci.prototype.ValueBufferType=Array;ci.prototype.DefaultInterpolation=lr;ci.prototype.InterpolantFactoryMethodLinear=void 0;ci.prototype.InterpolantFactoryMethodSmooth=void 0;class Gl extends qe{}Gl.prototype.ValueTypeName="color";class Wr extends qe{}Wr.prototype.ValueTypeName="number";class Ax extends pn{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-e)/(r-e);let c=t*o;for(let u=c+o;c!==u;c+=4)_e.slerpFlat(s,0,a,c-o,a,c,l);return s}}class Xi extends qe{InterpolantFactoryMethodLinear(t){return new Ax(this.times,this.values,this.getValueSize(),t)}}Xi.prototype.ValueTypeName="quaternion";Xi.prototype.DefaultInterpolation=cr;Xi.prototype.InterpolantFactoryMethodSmooth=void 0;class ui extends qe{}ui.prototype.ValueTypeName="string";ui.prototype.ValueBufferType=Array;ui.prototype.DefaultInterpolation=lr;ui.prototype.InterpolantFactoryMethodLinear=void 0;ui.prototype.InterpolantFactoryMethodSmooth=void 0;class qr extends qe{}qr.prototype.ValueTypeName="vector";class Wl{constructor(t,e=-1,n,r=hs){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=Ge(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let a=0,o=n.length;a!==o;++a)e.push(Cx(n[a]).scale(r));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let s=0,a=n.length;s!==a;++s)e.push(qe.toJSON(n[s]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const s=e.length,a=[];for(let o=0;o<s;o++){let l=[],c=[];l.push((o+s-1)%s,o,(o+1)%s),c.push(0,1,0);const u=Yt.getKeyframeOrder(l);l=Yt.sortedArray(l,1,u),c=Yt.sortedArray(c,1,u),!r&&l[0]===0&&(l.push(s),c.push(c[0])),a.push(new Wr(".morphTargetInfluences["+e[o].name+"]",l,c).scale(1/n))}return new this(t,-1,a)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const r=t;n=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<n.length;r++)if(n[r].name===e)return n[r];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=t.length;o<l;o++){const c=t[o],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let f=r[h];f||(r[h]=f=[]),f.push(c)}}const a=[];for(const o in r)a.push(this.CreateFromMorphTargetSequence(o,r[o],e,n));return a}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,x){if(d.length!==0){const v=[],m=[];Yt.flattenJSON(d,v,m,p),v.length!==0&&x.push(new h(f,v,m))}},r=[],s=t.name||"default",a=t.fps||30,o=t.blendMode;let l=t.length||-1;const c=t.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let x=0;x<f[p].morphTargets.length;x++)d[f[p].morphTargets[x]]=-1;for(const x in d){const v=[],m=[];for(let g=0;g!==f[p].morphTargets.length;++g){const M=f[p];v.push(M.time),m.push(M.morphTarget===x?1:0)}r.push(new Wr(".morphTargetInfluence["+x+"]",v,m))}l=d.length*(a||1)}else{const d=".bones["+e[h].name+"]";n(qr,d+".position",f,"pos",r),n(Xi,d+".quaternion",f,"rot",r),n(qr,d+".scale",f,"scl",r)}}return r.length===0?null:new this(s,l,r,o)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,r=t.length;n!==r;++n){const s=this.tracks[n];e=Math.max(e,s.times[s.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Lx(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Wr;case"vector":case"vector2":case"vector3":case"vector4":return qr;case"color":return Gl;case"quaternion":return Xi;case"bool":case"boolean":return ci;case"string":return ui}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function Cx(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=Lx(i.type);if(i.times===void 0){const e=[],n=[];Yt.flattenJSON(i.keys,e,n,"value"),i.times=e,i.values=n}return t.parse!==void 0?t.parse(i):new t(i.name,i.times,i.values,i.interpolation)}const hi={enabled:!1,files:{},add:function(i,t){this.enabled!==!1&&(this.files[i]=t)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class Rx{constructor(t,e,n){const r=this;let s=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(u){o++,s===!1&&r.onStart!==void 0&&r.onStart(u,a,o),s=!0},this.itemEnd=function(u){a++,r.onProgress!==void 0&&r.onProgress(u,a,o),a===o&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const Px=new Rx;class mn{constructor(t){this.manager=t!==void 0?t:Px,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(r,s){n.load(t,r,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const ze={};class Ix extends mn{constructor(t){super(t)}load(t,e,n,r){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,a=hi.get(t);if(a!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(a),s.manager.itemEnd(t)},0),a;if(ze[t]!==void 0){ze[t].push({onLoad:e,onProgress:n,onError:r});return}const o=/^data:(.*?)(;base64)?,(.*)$/,l=t.match(o);let c;if(l){const u=l[1],h=!!l[2];let f=l[3];f=decodeURIComponent(f),h&&(f=atob(f));try{let d;const p=(this.responseType||"").toLowerCase();switch(p){case"arraybuffer":case"blob":const x=new Uint8Array(f.length);for(let m=0;m<f.length;m++)x[m]=f.charCodeAt(m);p==="blob"?d=new Blob([x.buffer],{type:u}):d=x.buffer;break;case"document":d=new DOMParser().parseFromString(f,u);break;case"json":d=JSON.parse(f);break;default:d=f;break}setTimeout(function(){e&&e(d),s.manager.itemEnd(t)},0)}catch(d){setTimeout(function(){r&&r(d),s.manager.itemError(t),s.manager.itemEnd(t)},0)}}else{ze[t]=[],ze[t].push({onLoad:e,onProgress:n,onError:r}),c=new XMLHttpRequest,c.open("GET",t,!0),c.addEventListener("load",function(u){const h=this.response,f=ze[t];if(delete ze[t],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),hi.add(t,h);for(let d=0,p=f.length;d<p;d++){const x=f[d];x.onLoad&&x.onLoad(h)}s.manager.itemEnd(t)}else{for(let d=0,p=f.length;d<p;d++){const x=f[d];x.onError&&x.onError(u)}s.manager.itemError(t),s.manager.itemEnd(t)}},!1),c.addEventListener("progress",function(u){const h=ze[t];for(let f=0,d=h.length;f<d;f++){const p=h[f];p.onProgress&&p.onProgress(u)}},!1),c.addEventListener("error",function(u){const h=ze[t];delete ze[t];for(let f=0,d=h.length;f<d;f++){const p=h[f];p.onError&&p.onError(u)}s.manager.itemError(t),s.manager.itemEnd(t)},!1),c.addEventListener("abort",function(u){const h=ze[t];delete ze[t];for(let f=0,d=h.length;f<d;f++){const p=h[f];p.onError&&p.onError(u)}s.manager.itemError(t),s.manager.itemEnd(t)},!1),this.responseType!==void 0&&(c.responseType=this.responseType),this.withCredentials!==void 0&&(c.withCredentials=this.withCredentials),c.overrideMimeType&&c.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const u in this.requestHeader)c.setRequestHeader(u,this.requestHeader[u]);c.send(null)}return s.manager.itemStart(t),c}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class ql extends mn{constructor(t){super(t)}load(t,e,n,r){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,a=hi.get(t);if(a!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(a),s.manager.itemEnd(t)},0),a;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function l(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1),hi.add(t,this),e&&e(this),s.manager.itemEnd(t)}function c(u){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1),r&&r(u),s.manager.itemError(t),s.manager.itemEnd(t)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),t.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(t),o.src=t,o}}class Dx extends mn{constructor(t){super(t)}load(t,e,n,r){const s=new Lr,a=new ql(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(c){a.load(t[c],function(u){s.images[c]=u,o++,o===6&&(s.needsUpdate=!0,e&&e(s))},void 0,r)}for(let c=0;c<t.length;++c)l(c);return s}}class Fx extends mn{constructor(t){super(t)}load(t,e,n,r){const s=new ce,a=new ql(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(o){s.image=o;const l=t.search(/\.jpe?g($|\?)/i)>0||t.search(/^data\:image\/jpeg/)===0;s.format=l?Sn:Ve,s.needsUpdate=!0,e!==void 0&&e(s)},n,r),s}}class Nx extends Pe{constructor(){super();this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Ur(e,t))}getPoint(t){const e=t*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=e){const s=n[r]-e,a=this.curves[r],o=a.getLength(),l=o===0?0:1-s/o;return a.getPointAt(l)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let r=0,s=this.curves;r<s.length;r++){const a=s[r],o=a&&a.isEllipseCurve?t*2:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,l=a.getPoints(o);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const r=t.curves[e];this.curves.push(r.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const r=this.curves[e];t.curves.push(r.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const r=t.curves[e];this.curves.push(new Fl[r.type]().fromJSON(r))}return this}}class la extends Nx{constructor(t){super();this.type="Path",this.currentPoint=new rt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Ur(this.currentPoint.clone(),new rt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const s=new ia(this.currentPoint.clone(),new rt(t,e),new rt(n,r));return this.curves.push(s),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,s,a){const o=new na(this.currentPoint.clone(),new rt(t,e),new rt(n,r),new rt(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new ra(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+o,e+l,n,r,s,a),this}absarc(t,e,n,r,s,a){return this.absellipse(t,e,n,n,r,s,a),this}ellipse(t,e,n,r,s,a,o,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,r,s,a,o,l),this}absellipse(t,e,n,r,s,a,o,l){const c=new zr(t,e,n,r,s,a,o,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class ca extends la{constructor(t){super(t);this.uuid=Ge(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const r=t.holes[e];this.holes.push(r.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const r=this.holes[e];t.holes.push(r.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const r=t.holes[e];this.holes.push(new la().fromJSON(r))}return this}}class Xe extends zt{constructor(t,e=1){super();this.type="Light",this.color=new pt(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}Xe.prototype.isLight=!0;class kx extends Xe{constructor(t,e,n){super(t,n);this.type="HemisphereLight",this.position.copy(zt.DefaultUp),this.updateMatrix(),this.groundColor=new pt(e)}copy(t){return Xe.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}kx.prototype.isHemisphereLight=!0;const Xl=new vt,jl=new A,Yl=new A;class ua{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new rt(512,512),this.map=null,this.mapPass=null,this.matrix=new vt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Rr,this._frameExtents=new rt(1,1),this._viewportCount=1,this._viewports=[new Gt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;jl.setFromMatrixPosition(t.matrixWorld),e.position.copy(jl),Yl.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Yl),e.updateMatrixWorld(),Xl.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Xl),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Zl extends ua{constructor(){super(new ye(50,1,.5,500));this.focus=1}updateMatrices(t){const e=this.camera,n=ps*2*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;(n!==e.fov||r!==e.aspect||s!==e.far)&&(e.fov=n,e.aspect=r,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Zl.prototype.isSpotLightShadow=!0;class Bx extends Xe{constructor(t,e,n=0,r=Math.PI/3,s=0,a=1){super(t,e);this.type="SpotLight",this.position.copy(zt.DefaultUp),this.updateMatrix(),this.target=new zt,this.distance=n,this.angle=r,this.penumbra=s,this.decay=a,this.shadow=new Zl}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Bx.prototype.isSpotLight=!0;const Jl=new vt,ji=new A,ha=new A;class Ql extends ua{constructor(){super(new ye(90,1,.5,500));this._frameExtents=new rt(4,2),this._viewportCount=6,this._viewports=[new Gt(2,1,1,1),new Gt(0,1,1,1),new Gt(3,1,1,1),new Gt(1,1,1,1),new Gt(3,0,1,1),new Gt(1,0,1,1)],this._cubeDirections=[new A(1,0,0),new A(-1,0,0),new A(0,0,1),new A(0,0,-1),new A(0,1,0),new A(0,-1,0)],this._cubeUps=[new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,0,1),new A(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,s=t.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),ji.setFromMatrixPosition(t.matrixWorld),n.position.copy(ji),ha.copy(n.position),ha.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(ha),n.updateMatrixWorld(),r.makeTranslation(-ji.x,-ji.y,-ji.z),Jl.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Jl)}}Ql.prototype.isPointLightShadow=!0;class $l extends Xe{constructor(t,e,n=0,r=1){super(t,e);this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Ql}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}$l.prototype.isPointLight=!0;class Kl extends Os{constructor(t=-1,e=1,n=1,r=-1,s=.1,a=2e3){super();this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,r,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-t,a=n+t,o=r+e,l=r-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,a=s+c*this.view.width,o-=u*this.view.offsetY,l=o-u*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}Kl.prototype.isOrthographicCamera=!0;class tc extends ua{constructor(){super(new Kl(-5,5,5,-5,.5,500))}}tc.prototype.isDirectionalLightShadow=!0;class zx extends Xe{constructor(t,e){super(t,e);this.type="DirectionalLight",this.position.copy(zt.DefaultUp),this.updateMatrix(),this.target=new zt,this.shadow=new tc}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}zx.prototype.isDirectionalLight=!0;class Ox extends Xe{constructor(t,e){super(t,e);this.type="AmbientLight"}}Ox.prototype.isAmbientLight=!0;class Ux extends Xe{constructor(t,e,n=10,r=10){super(t,e);this.type="RectAreaLight",this.width=n,this.height=r}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}Ux.prototype.isRectAreaLight=!0;class ec{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new A)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,s=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*r),e.addScaledVector(a[2],.488603*s),e.addScaledVector(a[3],.488603*n),e.addScaledVector(a[4],1.092548*(n*r)),e.addScaledVector(a[5],1.092548*(r*s)),e.addScaledVector(a[6],.315392*(3*s*s-1)),e.addScaledVector(a[7],1.092548*(n*s)),e.addScaledVector(a[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,s=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],2*.511664*r),e.addScaledVector(a[2],2*.511664*s),e.addScaledVector(a[3],2*.511664*n),e.addScaledVector(a[4],2*.429043*n*r),e.addScaledVector(a[5],2*.429043*r*s),e.addScaledVector(a[6],.743125*s*s-.247708),e.addScaledVector(a[7],2*.429043*n*s),e.addScaledVector(a[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+r*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+r*3);return t}static getBasisAt(t,e){const n=t.x,r=t.y,s=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*s,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*n*s,e[8]=.546274*(n*n-r*r)}}ec.prototype.isSphericalHarmonics3=!0;class da extends Xe{constructor(t=new ec,e=1){super(void 0,e);this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}da.prototype.isLightProbe=!0;class Hx{static decodeText(t){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(t);let e="";for(let n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(n){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.substr(0,e+1)}}class Vx extends jt{constructor(){super();this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}Vx.prototype.isInstancedBufferGeometry=!0;class Gx extends re{constructor(t,e,n,r=1){typeof n=="number"&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));super(t,e,n);this.meshPerAttribute=r}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}Gx.prototype.isInstancedBufferAttribute=!0;class Wx extends mn{constructor(t){super(t);typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,a=hi.get(t);if(a!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(a),s.manager.itemEnd(t)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(t,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){hi.add(t,l),e&&e(l),s.manager.itemEnd(t)}).catch(function(l){r&&r(l),s.manager.itemError(t),s.manager.itemEnd(t)}),s.manager.itemStart(t)}}Wx.prototype.isImageBitmapLoader=!0;let Xr;const qx={getContext:function(){return Xr===void 0&&(Xr=new(window.AudioContext||window.webkitAudioContext)),Xr},setContext:function(i){Xr=i}};class Xx extends mn{constructor(t){super(t)}load(t,e,n,r){const s=this,a=new Ix(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(o){try{const l=o.slice(0);qx.getContext().decodeAudioData(l,function(u){e(u)})}catch(l){r?r(l):console.error(l),s.manager.itemError(t)}},n,r)}}class jx extends da{constructor(t,e,n=1){super(void 0,n);const r=new pt().set(t),s=new pt().set(e),a=new A(r.r,r.g,r.b),o=new A(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c)}}jx.prototype.isHemisphereLightProbe=!0;class Yx extends da{constructor(t,e=1){super(void 0,e);const n=new pt().set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Yx.prototype.isAmbientLightProbe=!0;class Zx extends zt{constructor(t){super();this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}class Jx{constructor(t,e,n){this.binding=t,this.valueSize=n;let r,s,a;switch(e){case"quaternion":r=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:r=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,s=t*r+r;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==r;++o)n[s+o]=n[o];a=e}else{a+=e;const o=e/a;this._mixBufferRegion(n,s,0,o,r)}this.cumulativeWeight=a}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=e*this._origIndex;this._mixBufferRegion(n,r,l,1-s,e)}a>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let l=e,c=e+e;l!==c;++l)if(n[l]!==n[l+e]){o.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let s=n,a=r;s!==a;++s)e[s]=e[r+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,r,s){if(r>=.5)for(let a=0;a!==s;++a)t[e+a]=t[n+a]}_slerp(t,e,n,r){_e.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,s){const a=this._workIndex*s;_e.multiplyQuaternionsFlat(t,a,t,e,t,n),_e.slerpFlat(t,e,t,e,t,a,r)}_lerp(t,e,n,r,s){const a=1-r;for(let o=0;o!==s;++o){const l=e+o;t[l]=t[l]*a+t[n+o]*r}}_lerpAdditive(t,e,n,r,s){for(let a=0;a!==s;++a){const o=e+a;t[o]=t[o]+t[n+a]*r}}}const fa="\\[\\]\\.:\\/",Qx=new RegExp("["+fa+"]","g"),pa="[^"+fa+"]",$x="[^"+fa.replace("\\.","")+"]",Kx=/((?:WC+[\/:])*)/.source.replace("WC",pa),ty=/(WCOD+)?/.source.replace("WCOD",$x),ey=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",pa),ny=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",pa),iy=new RegExp("^"+Kx+ty+ey+ny+"$"),ry=["material","materials","bones"];class sy{constructor(t,e,n){const r=n||Ut.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==void 0&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Ut{constructor(t,e,n){this.path=e,this.parsedPath=n||Ut.parseTrackName(e),this.node=Ut.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Ut.Composite(t,e,n):new Ut(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Qx,"")}static parseTrackName(t){const e=iy.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=n.nodeName.substring(r+1);ry.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(s){for(let a=0;a<s.length;a++){const o=s[a];if(o.name===e||o.uuid===e)return o;const l=n(o.children);if(l)return l}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.node[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)t[e++]=n[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let s=e.propertyIndex;if(t||(t=Ut.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let u=0;u<t.length;u++)if(t[u].name===c){c=u;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(c!==void 0){if(t[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[c]}}const a=t[r];if(a===void 0){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",t);return}let o=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[s]!==void 0&&(s=t.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ut.Composite=sy;Ut.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ut.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ut.prototype.GetterByBindingType=[Ut.prototype._getValue_direct,Ut.prototype._getValue_array,Ut.prototype._getValue_arrayElement,Ut.prototype._getValue_toArray];Ut.prototype.SetterByBindingTypeAndVersioning=[[Ut.prototype._setValue_direct,Ut.prototype._setValue_direct_setNeedsUpdate,Ut.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ut.prototype._setValue_array,Ut.prototype._setValue_array_setNeedsUpdate,Ut.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ut.prototype._setValue_arrayElement,Ut.prototype._setValue_arrayElement_setNeedsUpdate,Ut.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ut.prototype._setValue_fromArray,Ut.prototype._setValue_fromArray_setNeedsUpdate,Ut.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class ay{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const s=e.tracks,a=s.length,o=new Array(a),l={endingStart:Fn,endingEnd:Fn};for(let c=0;c!==a;++c){const u=s[c].createInterpolant(null);o[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Wh,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const r=this._clip.duration,s=t._clip.duration,a=s/r,o=r/s;t.warp(1,a,e),this.warp(o,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,s=r.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=s,l[1]=s+n,c[0]=t/a,c[1]=e/a,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled){this._updateWeight(t);return}const s=this._startTime;if(s!==null){const l=(t-s)*n;if(l<0||n===0)return;this._startTime=null,e=n*l}e*=this._updateTimeScale(t);const a=this._updateTime(e),o=this._updateWeight(t);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case fo:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(a),c[u].accumulateAdditive(o);break;case hs:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(a),c[u].accumulate(r,o)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,s=this._loopCount;const a=n===qh;if(t===0)return s===-1?r:a&&(s&1)==1?e-r:r;if(n===Gh){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else if(r<0)r=0;else{this.time=r;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(s===-1&&(t>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),r>=e||r<0){const o=Math.floor(r/e);r-=e*o,s+=Math.abs(o);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(l===1){const c=t<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=r;if(a&&(s&1)==1)return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=Nn,r.endingEnd=Nn):(t?r.endingStart=this.zeroSlopeAtStart?Nn:Fn:r.endingStart=ur,e?r.endingEnd=this.zeroSlopeAtEnd?Nn:Fn:r.endingEnd=ur)}_scheduleFading(t,e,n){const r=this._mixer,s=r.time;let a=this._weightInterpolant;a===null&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,l[0]=e,o[1]=s+t,l[1]=n,this}}class oy extends En{constructor(t){super();this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,s=r.length,a=t._propertyBindings,o=t._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==s;++h){const f=r[h],d=f.name;let p=u[d];if(p!==void 0)a[h]=p;else{if(p=a[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const x=e&&e._propertyBindings[h].binding.parsedPath;p=new Jx(Ut.create(n,d,x),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),a[h]=p}o[h].resultBuffer=p.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,r=t._clip.uuid,s=this._actionsByClip[r];this._bindAction(t,s&&s.knownActions[0]),this._addInactiveAction(t,r,n)}const e=t._propertyBindings;for(let n=0,r=e.length;n!==r;++n){const s=e[n];s.useCount++==0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,r=e.length;n!==r;++n){const s=e[n];--s.useCount==0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,s=this._actionsByClip;let a=s[e];if(a===void 0)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=a;else{const o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=r.length,r.push(t),a.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,a=this._actionsByClip,o=a[s],l=o.knownActions,c=l[l.length-1],u=t._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),t._byClipCacheIndex=null;const h=o.actionByRoot,f=(t._localRoot||this._root).uuid;delete h[f],l.length===0&&delete a[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,r=e.length;n!==r;++n){const s=e[n];--s.referenceCount==0&&this._removeInactiveBinding(s)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,s=e[r];t._cacheIndex=r,e[r]=t,s._cacheIndex=n,e[n]=s}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,s=e[r];t._cacheIndex=r,e[r]=t,s._cacheIndex=n,e[n]=s}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,s=this._bindings;let a=r[e];a===void 0&&(a={},r[e]=a),a[n]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,o=a[r],l=e[e.length-1],c=t._cacheIndex;l._cacheIndex=c,e[c]=l,e.pop(),delete o[s],Object.keys(o).length===0&&delete a[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,s=e[r];t._cacheIndex=r,e[r]=t,s._cacheIndex=n,e[n]=s}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,s=e[r];t._cacheIndex=r,e[r]=t,s._cacheIndex=n,e[n]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new Vl(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,s=e[r];t.__cacheIndex=r,e[r]=t,s.__cacheIndex=n,e[n]=s}clipAction(t,e,n){const r=e||this._root,s=r.uuid;let a=typeof t=="string"?Wl.findByName(r,t):t;const o=a!==null?a.uuid:t,l=this._actionsByClip[o];let c=null;if(n===void 0&&(a!==null?n=a.blendMode:n=hs),l!==void 0){const h=l.actionByRoot[s];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],a===null&&(a=c._clip)}if(a===null)return null;const u=new ay(this,a,e,n);return this._bindAction(u,c),this._addInactiveAction(u,o,s),u}existingAction(t,e){const n=e||this._root,r=n.uuid,s=typeof t=="string"?Wl.findByName(n,t):t,a=s?s.uuid:t,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[r]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,s=Math.sign(t),a=this._accuIndex^=1;for(let c=0;c!==n;++c)e[c]._update(r,t,s,a);const o=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)o[c].apply(a);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,s=r[n];if(s!==void 0){const a=s.knownActions;for(let o=0,l=a.length;o!==l;++o){const c=a[o];this._deactivateAction(c);const u=c._cacheIndex,h=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,e[u]=h,e.pop(),this._removeInactiveBindingsForAction(c)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,l=o[e];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,s=r[e];if(s!==void 0)for(const a in s){const o=s[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}oy.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class ly extends Fi{constructor(t,e,n=1){super(t,e);this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}ly.prototype.isInstancedInterleavedBuffer=!0;class cy extends zt{constructor(t){super();this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}cy.prototype.isImmediateRenderObject=!0;const gn=new A,jr=new vt,ma=new vt;class uy extends Js{constructor(t){const e=nc(t),n=new jt,r=[],s=[],a=new pt(0,0,1),o=new pt(0,1,0);for(let c=0;c<e.length;c++){const u=e[c];u.parent&&u.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(a.r,a.g,a.b),s.push(o.r,o.g,o.b))}n.setAttribute("position",new se(r,3)),n.setAttribute("color",new se(s,3));const l=new Ui({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");ma.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<e.length;s++){const o=e[s];o.parent&&o.parent.isBone&&(jr.multiplyMatrices(ma,o.matrixWorld),gn.setFromMatrixPosition(jr),r.setXYZ(a,gn.x,gn.y,gn.z),jr.multiplyMatrices(ma,o.parent.matrixWorld),gn.setFromMatrixPosition(jr),r.setXYZ(a+1,gn.x,gn.y,gn.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function nc(i){const t=[];i&&i.isBone&&t.push(i);for(let e=0;e<i.children.length;e++)t.push.apply(t,nc(i.children[e]));return t}class hy extends Js{constructor(t=10,e=10,n=4473924,r=8947848){n=new pt(n),r=new pt(r);const s=e/2,a=t/e,o=t/2,l=[],c=[];for(let f=0,d=0,p=-o;f<=e;f++,p+=a){l.push(-o,0,p,o,0,p),l.push(p,0,-o,p,0,o);const x=f===s?n:r;x.toArray(c,d),d+=3,x.toArray(c,d),d+=3,x.toArray(c,d),d+=3,x.toArray(c,d),d+=3}const u=new jt;u.setAttribute("position",new se(l,3)),u.setAttribute("color",new se(c,3));const h=new Ui({vertexColors:!0,toneMapped:!1});super(u,h);this.type="GridHelper"}}const dy=new Float32Array(1);new Int32Array(dy.buffer);const fy=new Is({side:ie,depthWrite:!1,depthTest:!1});new Re(new Pi,fy);Pe.create=function(i,t){return console.log("THREE.Curve.create() has been deprecated"),i.prototype=Object.create(Pe.prototype),i.prototype.constructor=i,i.prototype.getPoint=t,i};la.prototype.fromPoints=function(i){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(i)};hy.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};uy.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};mn.prototype.extractUrlBase=function(i){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Hx.extractUrlBase(i)};mn.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Fe.prototype.center=function(i){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(i)};Fe.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Fe.prototype.isIntersectionBox=function(i){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(i)};Fe.prototype.isIntersectionSphere=function(i){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(i)};Fe.prototype.size=function(i){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(i)};Vn.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Rr.prototype.setFromMatrix=function(i){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(i)};le.prototype.flattenToArrayOffset=function(i,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(i,t)};le.prototype.multiplyVector3=function(i){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),i.applyMatrix3(this)};le.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};le.prototype.applyToBufferAttribute=function(i){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),i.applyMatrix3(this)};le.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};le.prototype.getInverse=function(i){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(i).invert()};vt.prototype.extractPosition=function(i){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(i)};vt.prototype.flattenToArrayOffset=function(i,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(i,t)};vt.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new A().setFromMatrixColumn(this,3)};vt.prototype.setRotationFromQuaternion=function(i){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(i)};vt.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};vt.prototype.multiplyVector3=function(i){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};vt.prototype.multiplyVector4=function(i){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};vt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};vt.prototype.rotateAxis=function(i){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),i.transformDirection(this)};vt.prototype.crossVector=function(i){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};vt.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};vt.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};vt.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};vt.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};vt.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};vt.prototype.applyToBufferAttribute=function(i){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};vt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};vt.prototype.makeFrustum=function(i,t,e,n,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(i,t,n,e,r,s)};vt.prototype.getInverse=function(i){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(i).invert()};en.prototype.isIntersectionLine=function(i){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(i)};_e.prototype.multiplyVector3=function(i){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),i.applyQuaternion(this)};_e.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Gn.prototype.isIntersectionBox=function(i){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(i)};Gn.prototype.isIntersectionPlane=function(i){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(i)};Gn.prototype.isIntersectionSphere=function(i){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(i)};ee.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};ee.prototype.barycoordFromPoint=function(i,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(i,t)};ee.prototype.midpoint=function(i){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(i)};ee.prototypenormal=function(i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(i)};ee.prototype.plane=function(i){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(i)};ee.barycoordFromPoint=function(i,t,e,n,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ee.getBarycoord(i,t,e,n,r)};ee.normal=function(i,t,e,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ee.getNormal(i,t,e,n)};ca.prototype.extractAllPoints=function(i){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(i)};ca.prototype.extrude=function(i){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new li(this,i)};ca.prototype.makeGeometry=function(i){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new oa(this,i)};rt.prototype.fromAttribute=function(i,t,e){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(i,t,e)};rt.prototype.distanceToManhattan=function(i){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(i)};rt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};A.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};A.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};A.prototype.getPositionFromMatrix=function(i){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(i)};A.prototype.getScaleFromMatrix=function(i){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(i)};A.prototype.getColumnFromMatrix=function(i,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,i)};A.prototype.applyProjection=function(i){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(i)};A.prototype.fromAttribute=function(i,t,e){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(i,t,e)};A.prototype.distanceToManhattan=function(i){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(i)};A.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Gt.prototype.fromAttribute=function(i,t,e){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(i,t,e)};Gt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};zt.prototype.getChildByName=function(i){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(i)};zt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};zt.prototype.translate=function(i,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,i)};zt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};zt.prototype.applyMatrix=function(i){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(i)};Object.defineProperties(zt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(i){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=i}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Re.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(Re.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Xh},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});xl.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};ye.prototype.setLens=function(i,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(i)};Object.defineProperties(Xe.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(i){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=i}},shadowCameraLeft:{set:function(i){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=i}},shadowCameraRight:{set:function(i){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=i}},shadowCameraTop:{set:function(i){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=i}},shadowCameraBottom:{set:function(i){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=i}},shadowCameraNear:{set:function(i){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=i}},shadowCameraFar:{set:function(i){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=i}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(i){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=i}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(i){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=i}},shadowMapHeight:{set:function(i){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=i}}});Object.defineProperties(re.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===hr},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(hr)}}});re.prototype.setDynamic=function(i){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(i===!0?hr:Ti),this};re.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},re.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};jt.prototype.addIndex=function(i){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(i)};jt.prototype.addAttribute=function(i,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(i,new re(arguments[1],arguments[2]))):i==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(i,t)};jt.prototype.addDrawCall=function(i,t,e){e!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(i,t)};jt.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};jt.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};jt.prototype.removeAttribute=function(i){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(i)};jt.prototype.applyMatrix=function(i){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(i)};Object.defineProperties(jt.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Fi.prototype.setDynamic=function(i){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(i===!0?hr:Ti),this};Fi.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};li.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};li.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};li.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};Xs.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(de.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new pt}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(i){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===Ga}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(i){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=i}}});Object.defineProperties(Ln.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(i){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=i}}});Ht.prototype.clearTarget=function(i,t,e,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(i),this.clear(t,e,n)};Ht.prototype.animate=function(i){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(i)};Ht.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};Ht.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};Ht.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};Ht.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};Ht.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};Ht.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};Ht.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};Ht.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};Ht.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};Ht.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};Ht.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};Ht.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};Ht.prototype.enableScissorTest=function(i){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(i)};Ht.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};Ht.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};Ht.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};Ht.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};Ht.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};Ht.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};Ht.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};Ht.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};Ht.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};Ht.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(Ht.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(i){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=i}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(i){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=i}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(i){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=i===!0?po:Ei}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(ol.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Ze.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(i){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=i}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(i){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=i}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(i){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=i}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(i){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=i}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(i){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=i}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(i){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=i}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(i){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=i}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(i){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=i}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(i){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=i}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(i){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=i}}});Zx.prototype.load=function(i){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return new Xx().load(i,function(n){t.setBuffer(n)}),this};Us.prototype.updateCubeMap=function(i,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(i,t)};Us.prototype.clear=function(i,t,e,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(i,t,e,n)};zn.crossOrigin=void 0;zn.loadTexture=function(i,t,e,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Fx;r.setCrossOrigin(this.crossOrigin);const s=r.load(i,e,void 0,n);return t&&(s.mapping=t),s};zn.loadTextureCube=function(i,t,e,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Dx;r.setCrossOrigin(this.crossOrigin);const s=r.load(i,e,void 0,n);return t&&(s.mapping=t),s};zn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};zn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ua}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ua);const ic=(i,t)=>{for(const{key:e,next:n}of t)switch(e){case"position":i.position.copy(n);break;case"quaternion":i.quaternion.copy(n);break;case"rotation":i.rotation.copy(n);break;case"scale":i.scale.copy(n);break;default:i[e]=n;break}},py=([i,t])=>({type:i,create:()=>{const n=t();return{object:n,update:o=>{ic(n,o)},dispose:()=>{}}}}),my={type:"group",create:()=>{const i=new ni;return{object:i,update:n=>{ic(i,n.filter(r=>r.key!=="group"));for(const{key:r,next:s,prev:a}of n)switch(r){case"group":a&&i.remove(a),s&&i.add(s)}},dispose:()=>{}}}},gy=[["mesh",()=>new Re],["pointLight",()=>new $l],["points",()=>new Al],["perspectiveCamera",()=>new ye]].map(py),xy=[...gy,my],yy=(i=xy)=>{const t=new Map(i.map(d=>[d.type,d])),e=new Map,n=new Map,r=d=>{const{width:p,height:x,setStyle:v=!1,background:m=null,alpha:g=!1,onRender:M,sceneRef:C}=d.next.element.props,T=new Ht({alpha:g});T.setSize(p,x,v);const y=new Xs;y.background=m;const D=new ye(75,p/x,.1,1e3);D.position.z=5;const z={id:null},H=X=>{M&&M(X),T.render(y,D),z.id=requestAnimationFrame(H)};return z.id=H(performance.now()),e.set(d.next.id,[T,y,D,z]),[T,y,D,z]},s=(d,[p,x,v,m])=>{const g=nr(d.prev.element.props,d.next.element.props),{width:M,height:C,setStyle:T=!1,background:y=null,onRender:D}=d.next.element.props;if((g.has("width")||g.has("height")||g.has("setStyle"))&&(p.setSize(M,C,T),v.aspect=M/C,v.updateProjectionMatrix()),g.has("background")&&(x.background=y),g.has("onRender")){m.id&&cancelAnimationFrame(m.id);const z=H=>{D&&D(H),p.render(x,v),m.id=requestAnimationFrame(z)};m.id=z(performance.now())}},a=(d,[p,x,v,m])=>{e.delete(d.next.id),p.dispose(),m.id&&cancelAnimationFrame(m.id);const{parentNode:g}=p.domElement;return g&&g.removeChild(p.domElement),[]},o=d=>{const{type:p}=d.next.element;if(typeof p!="string"||p==="act:null")return null;const x=t.get(p);if(!x)throw new Error(`Unknown type ${p}`);const v=x.create();return n.set(d.next.id,v),v},l=d=>{d.object.removeFromParent(),d.dispose()},c=(d,p)=>{if(d.prev.pruned){const{ref:x}=d.next.element.props;typeof x=="object"?x.current=p:typeof x=="function"&&x(p)}else if(d.next.pruned){const{ref:x}=d.next.element.props;typeof x=="object"?x.current=null:typeof x=="function"&&x(null)}},u=d=>{const p=n.get(d.next.id)||o(d);c(d,p&&p.object);const x=d.diffs.map(u).flat(1);if(!p)return x;if(d.next.pruned)return l(p),[];const v=nr(d.prev.element.props,d.next.element.props);return p.update([...v.values()]),h(p.object,x),[p.object]},h=(d,p)=>{p.length>0&&d.add(...p)};return{renderRoot:d=>{if(d.next.element.type!=="three")return[];const p=e.get(d.next.id)||r(d),x=d.diffs.map(u).flat(1);if(d.next.pruned)return a(d,p);const[v,m,g]=p;return s(d,p),h(m,x),c(d,{renderer:v,scene:m,camera:g}),[v.domElement]}}},V_=(i,t,e=yy())=>{const{renderRoot:n}=e,r=bu(new Map([["three",{render:n}]]));cu(i,{onDiff:o=>za(t,r.render(o)),scheduleWork:o=>requestAnimationFrame(()=>void o())})};class xn extends Error{constructor(t,e,n=null){super(`${t} is not ${e}${n?` because ${n}`:""}`);this.subjectDescription=t,this.targetDescription=e,this.causeDescription=n}}const di=i=>{if(i===null)return"null";if(i===void 0)return"undefined";switch(typeof i){case"object":return i.toString();case"number":return`the number ${i.toString()}`;case"boolean":return`the boolean ${i.toString()}`;case"string":return i;default:throw new Error("Unknown object type")}};class fi extends xn{constructor(t,e,n){super("",n,`it's ${e}`);this.value=t,this.recievedType=e,this.expectedTypeName=n}}const ga=i=>{if(typeof i!="object")throw new fi(i,di(i),"an object");if(i===null)throw new fi(i,"null","an object");return i},rc=i=>{if(!Array.isArray(i))throw new fi(i,di(i),"an array");return i},vy=i=>{if(typeof i!="number")throw new fi(i,di(i),"a number");return i},Zt=i=>{if(typeof i!="string")throw new fi(i,di(i),"a string");return i},Yr=i=>{if(typeof i!="boolean")throw new fi(i,di(i),"a boolean");return i},_y=i=>e=>rc(e).map((r,s)=>i[s](r));class by extends xn{constructor(t,e){t instanceof xn?super(`[${e}]${t.subjectDescription}`,t.targetDescription,t.causeDescription):super(`[${e}]`,"valid element",t.message),this.cause=t,this.index=e}}const Yi=i=>e=>rc(e).map((r,s)=>{try{return i(r)}catch(a){throw new by(a,s)}});class wy extends xn{constructor(t,e){e instanceof xn?super(`.${t}${e.subjectDescription}`,e.targetDescription,e.causeDescription):super(`.${t}`,"valid prop",e.message),this.cause=e,this.propName=t}}const Pt=i=>{const t=Object.entries(i),e=(r,s,a)=>{try{return s(a)}catch(o){throw new wy(r,o)}};return r=>{const s=ga(r),a=t.map(([o,l])=>[o,e(o,l,s[o])]);return Object.fromEntries(a)}};class My extends xn{constructor(t,e,n){t instanceof xn?super(`.${e}`,`one of ${n.toString()}`,t.causeDescription):super(`.${e}`,`one of ${n.toString()}`,t.message),this.keyProperty=e,this.acceptedKeys=n}}const sc=(i,t)=>{const e=s=>Zt(s[i]),n=(s,a)=>{try{const o=t[s];if(!o)throw new Error;return o}catch(o){throw new My(o,i,Object.keys(t))}};return s=>{const a=ga(s),o=e(a),l=n(o);return He(we({},l(s)),{[i]:o})}};class Sy extends xn{constructor(t,e){super(`=(${di(t)})`,`one of ${e.toString()}`);this.constants=e,this.value=t}}const ac=i=>e=>{const n=i.find(r=>r===e);if(!n)throw new Sy(e,i);return n},Zi=i=>e=>{if(e===null)return null;if(e!==void 0)return i(e)};class Ey extends Error{constructor(t,e){const n=t&&t.toString?t.toString():"Value",r=e&&e.toString?e.toString():"Constant";super(`${n} is not ${r}`);this.value=t,this.constant=e}}const Jt=i=>e=>{if(e!==i)throw new Ey(e,i);return i},wt={lit:Jt,obj:Pt,arr:Yi,tup:_y,str:Zt,bool:Yr,num:vy,maybe:Zi,enums:ac,or:sc},me=Zt,xa=Zt,Ji=Pt({id:me,name:Zt,adminId:Zi(xa),creatorAdminId:Zi(xa)});Pt({id:xa,userId:me});const Ty={path:"/users",GET:{toQuery:Pt({userId:me}),toResponseBody:Pt({type:Jt("found"),user:Ji})},POST:{toRequestBody:Pt({name:Zt}),toResponseBody:Pt({type:Jt("created"),user:Ji})},PUT:{toQuery:Pt({userId:me}),toRequestBody:Pt({name:Zt}),toResponseBody:Pt({type:Jt("updated"),user:Ji})},DELETE:{toQuery:Pt({userId:me}),toResponseBody:Pt({type:Jt("deleted")})}},Ay={path:"/users/all",GET:{toResponseBody:Pt({type:Jt("found"),users:Yi(Ji)})}},Ly={path:"/users/self",GET:{toResponseBody:Pt({type:Jt("found"),user:Ji})}};var Cy=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",usersResourceDescription:Ty,usersAllResourceDescription:Ay,usersSelfResourceDescription:Ly});const ya=wt.str;wt.obj({id:ya,name:wt.str,origin:wt.str});const nn=Zt,oc=Zt,lc=Zt,Ry=Zt,cc=Pt({id:nn,loginGrantId:oc,type:Jt("identity"),revoked:Yr,identity:me,granteeName:Zt}),uc=Pt({type:Jt("login"),id:oc,createdBy:Zi(nn),login:me,revoked:Yr,createdIdentity:Zi(nn)}),Zr=Pt({type:Jt("link"),id:lc,identity:me,linkedIdentity:nn,target:Zt,revoked:Yr});Pt({type:Jt("service"),id:Ry,serviceId:ya});Pt({type:Jt("login"),grantId:nn,userId:me,secret:Zt});Pt({type:Jt("identity"),grantId:nn,userId:me,secret:Zt});const va=Pt({type:Jt("link"),grantId:nn,userId:me,secret:Zt}),G_=Pt({type:Jt("service"),grantId:nn,serviceId:ya,secret:Zt}),Qi={missingAuthoization:"MIS_AUTH",invalidAuthorization:"INVALID_AUTH",revokedAuthorization:"REVOKED",unauthorizedAccess:"UNAUTHORIZED",notFound:"NOT_FOUND"},Py=Pt({code:ac([Qi.missingAuthoization,Qi.invalidAuthorization,Qi.revokedAuthorization,Qi.unauthorizedAccess,Qi.notFound]),shortMessage:Zt,longMessage:Zt}),Iy=Pt({type:Jt("error"),error:Py}),pi=i=>t=>{switch(ga(t).type){case"error":return Iy(t);default:return i(t)}},hc={path:"/grants",GET:{toQuery:Pt({userId:me}),toResponseBody:pi(Pt({type:Jt("found"),identity:Yi(cc),login:Yi(uc),links:Yi(Zr)}))}},dc={path:"/grants/identity",POST:{toRequestBody:Pt({userId:me,granteeName:Zt}),toResponseBody:pi(Pt({type:Jt("created"),grant:cc,secret:Zt}))},DELETE:{toQuery:Pt({userId:me,grantId:nn}),toResponseBody:pi(Pt({type:Jt("revoked")}))}},fc={path:"/grants/link",POST:{toRequestBody:Pt({target:Zt}),toResponseBody:pi(Pt({type:Jt("created"),grant:Zr,secret:Zt}))},DELETE:{toQuery:Pt({userId:me,grantId:lc}),toResponseBody:pi(Pt({type:Jt("revoked")}))}},pc={path:"/grants/link/validate",POST:{toRequestBody:Pt({proof:va}),toResponseBody:pi(sc("type",{valid:Pt({type:Jt("valid"),grant:Zr}),invalid:Pt({type:Jt("invalid")})}))}},mc={path:"/grants/login",POST:{toRequestBody:Pt({userId:me}),toResponseBody:Pt({type:Jt("created"),grant:uc,secret:Zt})}},Dy={"/grants":hc,"/grants/identity":dc,"/grants/link":fc,"/grants/link/validate":pc,"/grants":mc};var Fy=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",grantsResource:hc,grantsIdentityResource:dc,grantsLinkResource:fc,grantsLinkValidateResource:pc,grantsLogin:mc,accessAPI:Dy});we(we({},Cy),Fy);const Ny=wt.obj({type:wt.lit("sesame:consumer-state"),proof:wt.maybe(va)}),ky=wt.obj({type:wt.lit("sesame:cannot-grant"),code:wt.enums(["not_logged_in","origin_rejected"])}),By=wt.obj({type:wt.lit("sesame:grant-revoked")});wt.or("type",{"sesame:grant-revoked":By,"sesame:cannot-grant":ky,"sesame:update-link-grant":wt.obj({type:wt.lit("sesame:update-link-grant"),grant:Zr,secret:wt.str,token:wt.str,proof:va}),"sesame:prompt-link-grant":wt.obj({type:wt.lit("sesame:prompt-link-grant")}),"sesame:identity-provider-ready":wt.obj({type:wt.lit("sesame:identity-provider-ready")}),"sesame:consumer-state":Ny});const zy=wt.or("type",{memory:wt.obj({type:wt.lit("memory")}),file:wt.obj({type:wt.lit("file"),dataDir:wt.maybe(wt.str)}),awsS3:wt.obj({type:wt.lit("awsS3"),bucket:wt.str,prefix:wt.maybe(wt.str)})});wt.obj({port:wt.maybe(wt.num),host:wt.maybe(wt.str),data:wt.maybe(zy)});wt.obj({origin:wt.str,name:wt.str,api:wt.obj({sesame:wt.obj({origin:wt.str})})});function Oy(i,t){var{includeImageAlt:e=!0}=t||{};return gc(i,e)}function gc(i,t){return i&&typeof i=="object"&&(i.value||(t?i.alt:"")||"children"in i&&xc(i.children,t)||Array.isArray(i)&&xc(i,t))||""}function xc(i,t){for(var e=[],n=-1;++n<i.length;)e[n]=gc(i[n],t);return e.join("")}function je(i,t,e,n){const r=i.length;let s=0,a;if(t<0?t=-t>r?0:r+t:t=t>r?r:t,e=e>0?e:0,n.length<1e4)a=Array.from(n),a.unshift(t,e),[].splice.apply(i,a);else for(e&&[].splice.apply(i,[t,e]);s<n.length;)a=n.slice(s,s+1e4),a.unshift(t,0),[].splice.apply(i,a),s+=1e4,t+=1e4}function Ie(i,t){return i.length>0?(je(i,i.length,0,t),i):t}const yc={}.hasOwnProperty;function Uy(i){const t={};let e=-1;for(;++e<i.length;)Hy(t,i[e]);return t}function Hy(i,t){let e;for(e in t){const r=(yc.call(i,e)?i[e]:void 0)||(i[e]={}),s=t[e];let a;for(a in s){yc.call(r,a)||(r[a]=[]);const o=s[a];Vy(r[a],Array.isArray(o)?o:o?[o]:[])}}}function Vy(i,t){let e=-1;const n=[];for(;++e<t.length;)(t[e].add==="after"?i:n).push(t[e]);je(i,0,0,n)}const Gy=/[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/,Ye=yn(/[A-Za-z]/),_a=yn(/\d/),Wy=yn(/[\dA-Fa-f]/),Oe=yn(/[\dA-Za-z]/),qy=yn(/[!-/:-@[-`{-~]/),vc=yn(/[#-'*+\--9=?A-Z^-~]/);function ba(i){return i!==null&&(i<32||i===127)}function De(i){return i!==null&&(i<0||i===32)}function Mt(i){return i!==null&&i<-2}function ne(i){return i===-2||i===-1||i===32}const Xy=yn(/\s/),jy=yn(Gy);function yn(i){return t;function t(e){return e!==null&&i.test(String.fromCharCode(e))}}function Wt(i,t,e,n){const r=n?n-1:Number.POSITIVE_INFINITY;let s=0;return a;function a(l){return ne(l)?(i.enter(e),o(l)):t(l)}function o(l){return ne(l)&&s++<r?(i.consume(l),o):(i.exit(e),t(l))}}const Yy={tokenize:Zy};function Zy(i){const t=i.attempt(this.parser.constructs.contentInitial,n,r);let e;return t;function n(o){if(o===null){i.consume(o);return}return i.enter("lineEnding"),i.consume(o),i.exit("lineEnding"),Wt(i,t,"linePrefix")}function r(o){return i.enter("paragraph"),s(o)}function s(o){const l=i.enter("chunkText",{contentType:"text",previous:e});return e&&(e.next=l),e=l,a(o)}function a(o){if(o===null){i.exit("chunkText"),i.exit("paragraph"),i.consume(o);return}return Mt(o)?(i.consume(o),i.exit("chunkText"),s):(i.consume(o),a)}}const Jy={tokenize:Qy},_c={tokenize:$y};function Qy(i){const t=this,e=[];let n=0,r,s,a;return o;function o(M){if(n<e.length){const C=e[n];return t.containerState=C[1],i.attempt(C[0].continuation,l,c)(M)}return c(M)}function l(M){if(n++,t.containerState._closeFlow){t.containerState._closeFlow=void 0,r&&g();const C=t.events.length;let T=C,y;for(;T--;)if(t.events[T][0]==="exit"&&t.events[T][1].type==="chunkFlow"){y=t.events[T][1].end;break}m(n);let D=C;for(;D<t.events.length;)t.events[D][1].end=Object.assign({},y),D++;return je(t.events,T+1,0,t.events.slice(C)),t.events.length=D,c(M)}return o(M)}function c(M){if(n===e.length){if(!r)return f(M);if(r.currentConstruct&&r.currentConstruct.concrete)return p(M);t.interrupt=Boolean(r.currentConstruct)}return t.containerState={},i.check(_c,u,h)(M)}function u(M){return r&&g(),m(n),f(M)}function h(M){return t.parser.lazy[t.now().line]=n!==e.length,a=t.now().offset,p(M)}function f(M){return t.containerState={},i.attempt(_c,d,p)(M)}function d(M){return n++,e.push([t.currentConstruct,t.containerState]),f(M)}function p(M){if(M===null){r&&g(),m(0),i.consume(M);return}return r=r||t.parser.flow(t.now()),i.enter("chunkFlow",{contentType:"flow",previous:s,_tokenizer:r}),x(M)}function x(M){if(M===null){v(i.exit("chunkFlow"),!0),m(0),i.consume(M);return}return Mt(M)?(i.consume(M),v(i.exit("chunkFlow")),n=0,t.interrupt=void 0,o):(i.consume(M),x)}function v(M,C){const T=t.sliceStream(M);if(C&&T.push(null),M.previous=s,s&&(s.next=M),s=M,r.defineSkip(M.start),r.write(T),t.parser.lazy[M.start.line]){let y=r.events.length;for(;y--;)if(r.events[y][1].start.offset<a&&(!r.events[y][1].end||r.events[y][1].end.offset>a))return;const D=t.events.length;let z=D,H,X;for(;z--;)if(t.events[z][0]==="exit"&&t.events[z][1].type==="chunkFlow"){if(H){X=t.events[z][1].end;break}H=!0}for(m(n),y=D;y<t.events.length;)t.events[y][1].end=Object.assign({},X),y++;je(t.events,z+1,0,t.events.slice(D)),t.events.length=y}}function m(M){let C=e.length;for(;C-- >M;){const T=e[C];t.containerState=T[1],T[0].exit.call(t,i)}e.length=M}function g(){r.write([null]),s=void 0,r=void 0,t.containerState._closeFlow=void 0}}function $y(i,t,e){return Wt(i,i.attempt(this.parser.constructs.document,t,e),"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?void 0:4)}function bc(i){if(i===null||De(i)||Xy(i))return 1;if(jy(i))return 2}function wa(i,t,e){const n=[];let r=-1;for(;++r<i.length;){const s=i[r].resolveAll;s&&!n.includes(s)&&(t=s(t,e),n.push(s))}return t}const Ma={name:"attention",tokenize:tv,resolveAll:Ky};function Ky(i,t){let e=-1,n,r,s,a,o,l,c,u;for(;++e<i.length;)if(i[e][0]==="enter"&&i[e][1].type==="attentionSequence"&&i[e][1]._close){for(n=e;n--;)if(i[n][0]==="exit"&&i[n][1].type==="attentionSequence"&&i[n][1]._open&&t.sliceSerialize(i[n][1]).charCodeAt(0)===t.sliceSerialize(i[e][1]).charCodeAt(0)){if((i[n][1]._close||i[e][1]._open)&&(i[e][1].end.offset-i[e][1].start.offset)%3&&!((i[n][1].end.offset-i[n][1].start.offset+i[e][1].end.offset-i[e][1].start.offset)%3))continue;l=i[n][1].end.offset-i[n][1].start.offset>1&&i[e][1].end.offset-i[e][1].start.offset>1?2:1;const h=Object.assign({},i[n][1].end),f=Object.assign({},i[e][1].start);wc(h,-l),wc(f,l),a={type:l>1?"strongSequence":"emphasisSequence",start:h,end:Object.assign({},i[n][1].end)},o={type:l>1?"strongSequence":"emphasisSequence",start:Object.assign({},i[e][1].start),end:f},s={type:l>1?"strongText":"emphasisText",start:Object.assign({},i[n][1].end),end:Object.assign({},i[e][1].start)},r={type:l>1?"strong":"emphasis",start:Object.assign({},a.start),end:Object.assign({},o.end)},i[n][1].end=Object.assign({},a.start),i[e][1].start=Object.assign({},o.end),c=[],i[n][1].end.offset-i[n][1].start.offset&&(c=Ie(c,[["enter",i[n][1],t],["exit",i[n][1],t]])),c=Ie(c,[["enter",r,t],["enter",a,t],["exit",a,t],["enter",s,t]]),c=Ie(c,wa(t.parser.constructs.insideSpan.null,i.slice(n+1,e),t)),c=Ie(c,[["exit",s,t],["enter",o,t],["exit",o,t],["exit",r,t]]),i[e][1].end.offset-i[e][1].start.offset?(u=2,c=Ie(c,[["enter",i[e][1],t],["exit",i[e][1],t]])):u=0,je(i,n-1,e-n+3,c),e=n+c.length-u-2;break}}for(e=-1;++e<i.length;)i[e][1].type==="attentionSequence"&&(i[e][1].type="data");return i}function tv(i,t){const e=this.parser.constructs.attentionMarkers.null,n=this.previous,r=bc(n);let s;return a;function a(l){return i.enter("attentionSequence"),s=l,o(l)}function o(l){if(l===s)return i.consume(l),o;const c=i.exit("attentionSequence"),u=bc(l),h=!u||u===2&&r||e.includes(l),f=!r||r===2&&u||e.includes(n);return c._open=Boolean(s===42?h:h&&(r||!f)),c._close=Boolean(s===42?f:f&&(u||!h)),t(l)}}function wc(i,t){i.column+=t,i.offset+=t,i._bufferIndex+=t}const ev={name:"autolink",tokenize:nv};function nv(i,t,e){let n=1;return r;function r(p){return i.enter("autolink"),i.enter("autolinkMarker"),i.consume(p),i.exit("autolinkMarker"),i.enter("autolinkProtocol"),s}function s(p){return Ye(p)?(i.consume(p),a):vc(p)?c(p):e(p)}function a(p){return p===43||p===45||p===46||Oe(p)?o(p):c(p)}function o(p){return p===58?(i.consume(p),l):(p===43||p===45||p===46||Oe(p))&&n++<32?(i.consume(p),o):c(p)}function l(p){return p===62?(i.exit("autolinkProtocol"),d(p)):p===null||p===32||p===60||ba(p)?e(p):(i.consume(p),l)}function c(p){return p===64?(i.consume(p),n=0,u):vc(p)?(i.consume(p),c):e(p)}function u(p){return Oe(p)?h(p):e(p)}function h(p){return p===46?(i.consume(p),n=0,u):p===62?(i.exit("autolinkProtocol").type="autolinkEmail",d(p)):f(p)}function f(p){return(p===45||Oe(p))&&n++<63?(i.consume(p),p===45?f:h):e(p)}function d(p){return i.enter("autolinkMarker"),i.consume(p),i.exit("autolinkMarker"),i.exit("autolink"),t}}const Jr={tokenize:iv,partial:!0};function iv(i,t,e){return Wt(i,n,"linePrefix");function n(r){return r===null||Mt(r)?t(r):e(r)}}const Mc={name:"blockQuote",tokenize:rv,continuation:{tokenize:sv},exit:av};function rv(i,t,e){const n=this;return r;function r(a){if(a===62){const o=n.containerState;return o.open||(i.enter("blockQuote",{_container:!0}),o.open=!0),i.enter("blockQuotePrefix"),i.enter("blockQuoteMarker"),i.consume(a),i.exit("blockQuoteMarker"),s}return e(a)}function s(a){return ne(a)?(i.enter("blockQuotePrefixWhitespace"),i.consume(a),i.exit("blockQuotePrefixWhitespace"),i.exit("blockQuotePrefix"),t):(i.exit("blockQuotePrefix"),t(a))}}function sv(i,t,e){return Wt(i,i.attempt(Mc,t,e),"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?void 0:4)}function av(i){i.exit("blockQuote")}const Sc={name:"characterEscape",tokenize:ov};function ov(i,t,e){return n;function n(s){return i.enter("characterEscape"),i.enter("escapeMarker"),i.consume(s),i.exit("escapeMarker"),r}function r(s){return qy(s)?(i.enter("characterEscapeValue"),i.consume(s),i.exit("characterEscapeValue"),i.exit("characterEscape"),t):e(s)}}var lv=59,Qr;function Sa(i){var t="&"+i+";",e;return Qr=Qr||document.createElement("i"),Qr.innerHTML=t,e=Qr.textContent,e.charCodeAt(e.length-1)===lv&&i!=="semi"||e===t?!1:e}const Ec={name:"characterReference",tokenize:cv};function cv(i,t,e){const n=this;let r=0,s,a;return o;function o(h){return i.enter("characterReference"),i.enter("characterReferenceMarker"),i.consume(h),i.exit("characterReferenceMarker"),l}function l(h){return h===35?(i.enter("characterReferenceMarkerNumeric"),i.consume(h),i.exit("characterReferenceMarkerNumeric"),c):(i.enter("characterReferenceValue"),s=31,a=Oe,u(h))}function c(h){return h===88||h===120?(i.enter("characterReferenceMarkerHexadecimal"),i.consume(h),i.exit("characterReferenceMarkerHexadecimal"),i.enter("characterReferenceValue"),s=6,a=Wy,u):(i.enter("characterReferenceValue"),s=7,a=_a,u(h))}function u(h){let f;return h===59&&r?(f=i.exit("characterReferenceValue"),a===Oe&&!Sa(n.sliceSerialize(f))?e(h):(i.enter("characterReferenceMarker"),i.consume(h),i.exit("characterReferenceMarker"),i.exit("characterReference"),t)):a(h)&&r++<s?(i.consume(h),u):e(h)}}const Tc={name:"codeFenced",tokenize:uv,concrete:!0};function uv(i,t,e){const n=this,r={tokenize:T,partial:!0},s={tokenize:C,partial:!0},a=this.events[this.events.length-1],o=a&&a[1].type==="linePrefix"?a[2].sliceSerialize(a[1],!0).length:0;let l=0,c;return u;function u(y){return i.enter("codeFenced"),i.enter("codeFencedFence"),i.enter("codeFencedFenceSequence"),c=y,h(y)}function h(y){return y===c?(i.consume(y),l++,h):(i.exit("codeFencedFenceSequence"),l<3?e(y):Wt(i,f,"whitespace")(y))}function f(y){return y===null||Mt(y)?v(y):(i.enter("codeFencedFenceInfo"),i.enter("chunkString",{contentType:"string"}),d(y))}function d(y){return y===null||De(y)?(i.exit("chunkString"),i.exit("codeFencedFenceInfo"),Wt(i,p,"whitespace")(y)):y===96&&y===c?e(y):(i.consume(y),d)}function p(y){return y===null||Mt(y)?v(y):(i.enter("codeFencedFenceMeta"),i.enter("chunkString",{contentType:"string"}),x(y))}function x(y){return y===null||Mt(y)?(i.exit("chunkString"),i.exit("codeFencedFenceMeta"),v(y)):y===96&&y===c?e(y):(i.consume(y),x)}function v(y){return i.exit("codeFencedFence"),n.interrupt?t(y):m(y)}function m(y){return y===null?M(y):Mt(y)?i.attempt(s,i.attempt(r,M,o?Wt(i,m,"linePrefix",o+1):m),M)(y):(i.enter("codeFlowValue"),g(y))}function g(y){return y===null||Mt(y)?(i.exit("codeFlowValue"),m(y)):(i.consume(y),g)}function M(y){return i.exit("codeFenced"),t(y)}function C(y,D,z){const H=this;return X;function X(Z){return y.enter("lineEnding"),y.consume(Z),y.exit("lineEnding"),k}function k(Z){return H.parser.lazy[H.now().line]?z(Z):D(Z)}}function T(y,D,z){let H=0;return Wt(y,X,"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?void 0:4);function X(N){return y.enter("codeFencedFence"),y.enter("codeFencedFenceSequence"),k(N)}function k(N){return N===c?(y.consume(N),H++,k):H<l?z(N):(y.exit("codeFencedFenceSequence"),Wt(y,Z,"whitespace")(N))}function Z(N){return N===null||Mt(N)?(y.exit("codeFencedFence"),D(N)):z(N)}}}const Ea={name:"codeIndented",tokenize:dv},hv={tokenize:fv,partial:!0};function dv(i,t,e){const n=this;return r;function r(c){return i.enter("codeIndented"),Wt(i,s,"linePrefix",4+1)(c)}function s(c){const u=n.events[n.events.length-1];return u&&u[1].type==="linePrefix"&&u[2].sliceSerialize(u[1],!0).length>=4?a(c):e(c)}function a(c){return c===null?l(c):Mt(c)?i.attempt(hv,a,l)(c):(i.enter("codeFlowValue"),o(c))}function o(c){return c===null||Mt(c)?(i.exit("codeFlowValue"),a(c)):(i.consume(c),o)}function l(c){return i.exit("codeIndented"),t(c)}}function fv(i,t,e){const n=this;return r;function r(a){return n.parser.lazy[n.now().line]?e(a):Mt(a)?(i.enter("lineEnding"),i.consume(a),i.exit("lineEnding"),r):Wt(i,s,"linePrefix",4+1)(a)}function s(a){const o=n.events[n.events.length-1];return o&&o[1].type==="linePrefix"&&o[2].sliceSerialize(o[1],!0).length>=4?t(a):Mt(a)?r(a):e(a)}}const pv={name:"codeText",tokenize:xv,resolve:mv,previous:gv};function mv(i){let t=i.length-4,e=3,n,r;if((i[e][1].type==="lineEnding"||i[e][1].type==="space")&&(i[t][1].type==="lineEnding"||i[t][1].type==="space")){for(n=e;++n<t;)if(i[n][1].type==="codeTextData"){i[e][1].type="codeTextPadding",i[t][1].type="codeTextPadding",e+=2,t-=2;break}}for(n=e-1,t++;++n<=t;)r===void 0?n!==t&&i[n][1].type!=="lineEnding"&&(r=n):(n===t||i[n][1].type==="lineEnding")&&(i[r][1].type="codeTextData",n!==r+2&&(i[r][1].end=i[n-1][1].end,i.splice(r+2,n-r-2),t-=n-r-2,n=r+2),r=void 0);return i}function gv(i){return i!==96||this.events[this.events.length-1][1].type==="characterEscape"}function xv(i,t,e){let n=0,r,s;return a;function a(h){return i.enter("codeText"),i.enter("codeTextSequence"),o(h)}function o(h){return h===96?(i.consume(h),n++,o):(i.exit("codeTextSequence"),l(h))}function l(h){return h===null?e(h):h===96?(s=i.enter("codeTextSequence"),r=0,u(h)):h===32?(i.enter("space"),i.consume(h),i.exit("space"),l):Mt(h)?(i.enter("lineEnding"),i.consume(h),i.exit("lineEnding"),l):(i.enter("codeTextData"),c(h))}function c(h){return h===null||h===32||h===96||Mt(h)?(i.exit("codeTextData"),l(h)):(i.consume(h),c)}function u(h){return h===96?(i.consume(h),r++,u):r===n?(i.exit("codeTextSequence"),i.exit("codeText"),t(h)):(s.type="codeTextData",c(h))}}function Ac(i){const t={};let e=-1,n,r,s,a,o,l,c;for(;++e<i.length;){for(;e in t;)e=t[e];if(n=i[e],e&&n[1].type==="chunkFlow"&&i[e-1][1].type==="listItemPrefix"&&(l=n[1]._tokenizer.events,s=0,s<l.length&&l[s][1].type==="lineEndingBlank"&&(s+=2),s<l.length&&l[s][1].type==="content"))for(;++s<l.length&&l[s][1].type!=="content";)l[s][1].type==="chunkText"&&(l[s][1]._isInFirstContentOfListItem=!0,s++);if(n[0]==="enter")n[1].contentType&&(Object.assign(t,yv(i,e)),e=t[e],c=!0);else if(n[1]._container){for(s=e,r=void 0;s--&&(a=i[s],a[1].type==="lineEnding"||a[1].type==="lineEndingBlank");)a[0]==="enter"&&(r&&(i[r][1].type="lineEndingBlank"),a[1].type="lineEnding",r=s);r&&(n[1].end=Object.assign({},i[r][1].start),o=i.slice(r,e),o.unshift(n),je(i,r,e-r+1,o))}}return!c}function yv(i,t){const e=i[t][1],n=i[t][2];let r=t-1;const s=[],a=e._tokenizer||n.parser[e.contentType](e.start),o=a.events,l=[],c={};let u,h,f=-1,d=e,p=0,x=0;const v=[x];for(;d;){for(;i[++r][1]!==d;);s.push(r),d._tokenizer||(u=n.sliceStream(d),d.next||u.push(null),h&&a.defineSkip(d.start),d._isInFirstContentOfListItem&&(a._gfmTasklistFirstContentOfListItem=!0),a.write(u),d._isInFirstContentOfListItem&&(a._gfmTasklistFirstContentOfListItem=void 0)),h=d,d=d.next}for(d=e;++f<o.length;)o[f][0]==="exit"&&o[f-1][0]==="enter"&&o[f][1].type===o[f-1][1].type&&o[f][1].start.line!==o[f][1].end.line&&(x=f+1,v.push(x),d._tokenizer=void 0,d.previous=void 0,d=d.next);for(a.events=[],d?(d._tokenizer=void 0,d.previous=void 0):v.pop(),f=v.length;f--;){const m=o.slice(v[f],v[f+1]),g=s.pop();l.unshift([g,g+m.length-1]),je(i,g,2,m)}for(f=-1;++f<l.length;)c[p+l[f][0]]=p+l[f][1],p+=l[f][1]-l[f][0]-1;return c}const vv={tokenize:wv,resolve:bv},_v={tokenize:Mv,partial:!0};function bv(i){return Ac(i),i}function wv(i,t){let e;return n;function n(o){return i.enter("content"),e=i.enter("chunkContent",{contentType:"content"}),r(o)}function r(o){return o===null?s(o):Mt(o)?i.check(_v,a,s)(o):(i.consume(o),r)}function s(o){return i.exit("chunkContent"),i.exit("content"),t(o)}function a(o){return i.consume(o),i.exit("chunkContent"),e.next=i.enter("chunkContent",{contentType:"content",previous:e}),e=e.next,r}}function Mv(i,t,e){const n=this;return r;function r(a){return i.exit("chunkContent"),i.enter("lineEnding"),i.consume(a),i.exit("lineEnding"),Wt(i,s,"linePrefix")}function s(a){if(a===null||Mt(a))return e(a);const o=n.events[n.events.length-1];return!n.parser.constructs.disable.null.includes("codeIndented")&&o&&o[1].type==="linePrefix"&&o[2].sliceSerialize(o[1],!0).length>=4?t(a):i.interrupt(n.parser.constructs.flow,e,t)(a)}}function Lc(i,t,e,n,r,s,a,o,l){const c=l||Number.POSITIVE_INFINITY;let u=0;return h;function h(m){return m===60?(i.enter(n),i.enter(r),i.enter(s),i.consume(m),i.exit(s),f):m===null||m===41||ba(m)?e(m):(i.enter(n),i.enter(a),i.enter(o),i.enter("chunkString",{contentType:"string"}),x(m))}function f(m){return m===62?(i.enter(s),i.consume(m),i.exit(s),i.exit(r),i.exit(n),t):(i.enter(o),i.enter("chunkString",{contentType:"string"}),d(m))}function d(m){return m===62?(i.exit("chunkString"),i.exit(o),f(m)):m===null||m===60||Mt(m)?e(m):(i.consume(m),m===92?p:d)}function p(m){return m===60||m===62||m===92?(i.consume(m),d):d(m)}function x(m){return m===40?++u>c?e(m):(i.consume(m),x):m===41?u--?(i.consume(m),x):(i.exit("chunkString"),i.exit(o),i.exit(a),i.exit(n),t(m)):m===null||De(m)?u?e(m):(i.exit("chunkString"),i.exit(o),i.exit(a),i.exit(n),t(m)):ba(m)?e(m):(i.consume(m),m===92?v:x)}function v(m){return m===40||m===41||m===92?(i.consume(m),x):x(m)}}function Cc(i,t,e,n,r,s){const a=this;let o=0,l;return c;function c(d){return i.enter(n),i.enter(r),i.consume(d),i.exit(r),i.enter(s),u}function u(d){return d===null||d===91||d===93&&!l||d===94&&!o&&"_hiddenFootnoteSupport"in a.parser.constructs||o>999?e(d):d===93?(i.exit(s),i.enter(r),i.consume(d),i.exit(r),i.exit(n),t):Mt(d)?(i.enter("lineEnding"),i.consume(d),i.exit("lineEnding"),u):(i.enter("chunkString",{contentType:"string"}),h(d))}function h(d){return d===null||d===91||d===93||Mt(d)||o++>999?(i.exit("chunkString"),u(d)):(i.consume(d),l=l||!ne(d),d===92?f:h)}function f(d){return d===91||d===92||d===93?(i.consume(d),o++,h):h(d)}}function Rc(i,t,e,n,r,s){let a;return o;function o(f){return i.enter(n),i.enter(r),i.consume(f),i.exit(r),a=f===40?41:f,l}function l(f){return f===a?(i.enter(r),i.consume(f),i.exit(r),i.exit(n),t):(i.enter(s),c(f))}function c(f){return f===a?(i.exit(s),l(a)):f===null?e(f):Mt(f)?(i.enter("lineEnding"),i.consume(f),i.exit("lineEnding"),Wt(i,c,"linePrefix")):(i.enter("chunkString",{contentType:"string"}),u(f))}function u(f){return f===a||f===null||Mt(f)?(i.exit("chunkString"),c(f)):(i.consume(f),f===92?h:u)}function h(f){return f===a||f===92?(i.consume(f),u):u(f)}}function $i(i,t){let e;return n;function n(r){return Mt(r)?(i.enter("lineEnding"),i.consume(r),i.exit("lineEnding"),e=!0,n):ne(r)?Wt(i,n,e?"linePrefix":"lineSuffix")(r):t(r)}}function mi(i){return i.replace(/[\t\n\r ]+/g," ").replace(/^ | $/g,"").toLowerCase().toUpperCase()}const Sv={name:"definition",tokenize:Tv},Ev={tokenize:Av,partial:!0};function Tv(i,t,e){const n=this;let r;return s;function s(l){return i.enter("definition"),Cc.call(n,i,a,e,"definitionLabel","definitionLabelMarker","definitionLabelString")(l)}function a(l){return r=mi(n.sliceSerialize(n.events[n.events.length-1][1]).slice(1,-1)),l===58?(i.enter("definitionMarker"),i.consume(l),i.exit("definitionMarker"),$i(i,Lc(i,i.attempt(Ev,Wt(i,o,"whitespace"),Wt(i,o,"whitespace")),e,"definitionDestination","definitionDestinationLiteral","definitionDestinationLiteralMarker","definitionDestinationRaw","definitionDestinationString"))):e(l)}function o(l){return l===null||Mt(l)?(i.exit("definition"),n.parser.defined.includes(r)||n.parser.defined.push(r),t(l)):e(l)}}function Av(i,t,e){return n;function n(a){return De(a)?$i(i,r)(a):e(a)}function r(a){return a===34||a===39||a===40?Rc(i,Wt(i,s,"whitespace"),e,"definitionTitle","definitionTitleMarker","definitionTitleString")(a):e(a)}function s(a){return a===null||Mt(a)?t(a):e(a)}}const Lv={name:"hardBreakEscape",tokenize:Cv};function Cv(i,t,e){return n;function n(s){return i.enter("hardBreakEscape"),i.enter("escapeMarker"),i.consume(s),r}function r(s){return Mt(s)?(i.exit("escapeMarker"),i.exit("hardBreakEscape"),t(s)):e(s)}}const Rv={name:"headingAtx",tokenize:Iv,resolve:Pv};function Pv(i,t){let e=i.length-2,n=3,r,s;return i[n][1].type==="whitespace"&&(n+=2),e-2>n&&i[e][1].type==="whitespace"&&(e-=2),i[e][1].type==="atxHeadingSequence"&&(n===e-1||e-4>n&&i[e-2][1].type==="whitespace")&&(e-=n+1===e?2:4),e>n&&(r={type:"atxHeadingText",start:i[n][1].start,end:i[e][1].end},s={type:"chunkText",start:i[n][1].start,end:i[e][1].end,contentType:"text"},je(i,n,e-n+1,[["enter",r,t],["enter",s,t],["exit",s,t],["exit",r,t]])),i}function Iv(i,t,e){const n=this;let r=0;return s;function s(u){return i.enter("atxHeading"),i.enter("atxHeadingSequence"),a(u)}function a(u){return u===35&&r++<6?(i.consume(u),a):u===null||De(u)?(i.exit("atxHeadingSequence"),n.interrupt?t(u):o(u)):e(u)}function o(u){return u===35?(i.enter("atxHeadingSequence"),l(u)):u===null||Mt(u)?(i.exit("atxHeading"),t(u)):ne(u)?Wt(i,o,"whitespace")(u):(i.enter("atxHeadingText"),c(u))}function l(u){return u===35?(i.consume(u),l):(i.exit("atxHeadingSequence"),o(u))}function c(u){return u===null||u===35||De(u)?(i.exit("atxHeadingText"),o(u)):(i.consume(u),c)}}const Dv=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","section","source","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],Pc=["pre","script","style","textarea"],Fv={name:"htmlFlow",tokenize:Bv,resolveTo:kv,concrete:!0},Nv={tokenize:zv,partial:!0};function kv(i){let t=i.length;for(;t--&&!(i[t][0]==="enter"&&i[t][1].type==="htmlFlow"););return t>1&&i[t-2][1].type==="linePrefix"&&(i[t][1].start=i[t-2][1].start,i[t+1][1].start=i[t-2][1].start,i.splice(t-2,2)),i}function Bv(i,t,e){const n=this;let r,s,a,o,l;return c;function c(S){return i.enter("htmlFlow"),i.enter("htmlFlowData"),i.consume(S),u}function u(S){return S===33?(i.consume(S),h):S===47?(i.consume(S),p):S===63?(i.consume(S),r=3,n.interrupt?t:q):Ye(S)?(i.consume(S),a=String.fromCharCode(S),s=!0,x):e(S)}function h(S){return S===45?(i.consume(S),r=2,f):S===91?(i.consume(S),r=5,a="CDATA[",o=0,d):Ye(S)?(i.consume(S),r=4,n.interrupt?t:q):e(S)}function f(S){return S===45?(i.consume(S),n.interrupt?t:q):e(S)}function d(S){return S===a.charCodeAt(o++)?(i.consume(S),o===a.length?n.interrupt?t:k:d):e(S)}function p(S){return Ye(S)?(i.consume(S),a=String.fromCharCode(S),x):e(S)}function x(S){return S===null||S===47||S===62||De(S)?S!==47&&s&&Pc.includes(a.toLowerCase())?(r=1,n.interrupt?t(S):k(S)):Dv.includes(a.toLowerCase())?(r=6,S===47?(i.consume(S),v):n.interrupt?t(S):k(S)):(r=7,n.interrupt&&!n.parser.lazy[n.now().line]?e(S):s?g(S):m(S)):S===45||Oe(S)?(i.consume(S),a+=String.fromCharCode(S),x):e(S)}function v(S){return S===62?(i.consume(S),n.interrupt?t:k):e(S)}function m(S){return ne(S)?(i.consume(S),m):H(S)}function g(S){return S===47?(i.consume(S),H):S===58||S===95||Ye(S)?(i.consume(S),M):ne(S)?(i.consume(S),g):H(S)}function M(S){return S===45||S===46||S===58||S===95||Oe(S)?(i.consume(S),M):C(S)}function C(S){return S===61?(i.consume(S),T):ne(S)?(i.consume(S),C):g(S)}function T(S){return S===null||S===60||S===61||S===62||S===96?e(S):S===34||S===39?(i.consume(S),l=S,y):ne(S)?(i.consume(S),T):(l=null,D(S))}function y(S){return S===null||Mt(S)?e(S):S===l?(i.consume(S),z):(i.consume(S),y)}function D(S){return S===null||S===34||S===39||S===60||S===61||S===62||S===96||De(S)?C(S):(i.consume(S),D)}function z(S){return S===47||S===62||ne(S)?g(S):e(S)}function H(S){return S===62?(i.consume(S),X):e(S)}function X(S){return ne(S)?(i.consume(S),X):S===null||Mt(S)?k(S):e(S)}function k(S){return S===45&&r===2?(i.consume(S),P):S===60&&r===1?(i.consume(S),R):S===62&&r===4?(i.consume(S),et):S===63&&r===3?(i.consume(S),q):S===93&&r===5?(i.consume(S),Y):Mt(S)&&(r===6||r===7)?i.check(Nv,et,Z)(S):S===null||Mt(S)?Z(S):(i.consume(S),k)}function Z(S){return i.exit("htmlFlowData"),N(S)}function N(S){return S===null?b(S):Mt(S)?i.attempt({tokenize:O,partial:!0},N,b)(S):(i.enter("htmlFlowData"),k(S))}function O(S,dt,St){return _t;function _t(Bt){return S.enter("lineEnding"),S.consume(Bt),S.exit("lineEnding"),G}function G(Bt){return n.parser.lazy[n.now().line]?St(Bt):dt(Bt)}}function P(S){return S===45?(i.consume(S),q):k(S)}function R(S){return S===47?(i.consume(S),a="",V):k(S)}function V(S){return S===62&&Pc.includes(a.toLowerCase())?(i.consume(S),et):Ye(S)&&a.length<8?(i.consume(S),a+=String.fromCharCode(S),V):k(S)}function Y(S){return S===93?(i.consume(S),q):k(S)}function q(S){return S===62?(i.consume(S),et):S===45&&r===2?(i.consume(S),q):k(S)}function et(S){return S===null||Mt(S)?(i.exit("htmlFlowData"),b(S)):(i.consume(S),et)}function b(S){return i.exit("htmlFlow"),t(S)}}function zv(i,t,e){return n;function n(r){return i.exit("htmlFlowData"),i.enter("lineEndingBlank"),i.consume(r),i.exit("lineEndingBlank"),i.attempt(Jr,t,e)}}const Ov={name:"htmlText",tokenize:Uv};function Uv(i,t,e){const n=this;let r,s,a,o;return l;function l(b){return i.enter("htmlText"),i.enter("htmlTextData"),i.consume(b),c}function c(b){return b===33?(i.consume(b),u):b===47?(i.consume(b),D):b===63?(i.consume(b),T):Ye(b)?(i.consume(b),X):e(b)}function u(b){return b===45?(i.consume(b),h):b===91?(i.consume(b),s="CDATA[",a=0,v):Ye(b)?(i.consume(b),C):e(b)}function h(b){return b===45?(i.consume(b),f):e(b)}function f(b){return b===null||b===62?e(b):b===45?(i.consume(b),d):p(b)}function d(b){return b===null||b===62?e(b):p(b)}function p(b){return b===null?e(b):b===45?(i.consume(b),x):Mt(b)?(o=p,Y(b)):(i.consume(b),p)}function x(b){return b===45?(i.consume(b),et):p(b)}function v(b){return b===s.charCodeAt(a++)?(i.consume(b),a===s.length?m:v):e(b)}function m(b){return b===null?e(b):b===93?(i.consume(b),g):Mt(b)?(o=m,Y(b)):(i.consume(b),m)}function g(b){return b===93?(i.consume(b),M):m(b)}function M(b){return b===62?et(b):b===93?(i.consume(b),M):m(b)}function C(b){return b===null||b===62?et(b):Mt(b)?(o=C,Y(b)):(i.consume(b),C)}function T(b){return b===null?e(b):b===63?(i.consume(b),y):Mt(b)?(o=T,Y(b)):(i.consume(b),T)}function y(b){return b===62?et(b):T(b)}function D(b){return Ye(b)?(i.consume(b),z):e(b)}function z(b){return b===45||Oe(b)?(i.consume(b),z):H(b)}function H(b){return Mt(b)?(o=H,Y(b)):ne(b)?(i.consume(b),H):et(b)}function X(b){return b===45||Oe(b)?(i.consume(b),X):b===47||b===62||De(b)?k(b):e(b)}function k(b){return b===47?(i.consume(b),et):b===58||b===95||Ye(b)?(i.consume(b),Z):Mt(b)?(o=k,Y(b)):ne(b)?(i.consume(b),k):et(b)}function Z(b){return b===45||b===46||b===58||b===95||Oe(b)?(i.consume(b),Z):N(b)}function N(b){return b===61?(i.consume(b),O):Mt(b)?(o=N,Y(b)):ne(b)?(i.consume(b),N):k(b)}function O(b){return b===null||b===60||b===61||b===62||b===96?e(b):b===34||b===39?(i.consume(b),r=b,P):Mt(b)?(o=O,Y(b)):ne(b)?(i.consume(b),O):(i.consume(b),r=void 0,V)}function P(b){return b===r?(i.consume(b),R):b===null?e(b):Mt(b)?(o=P,Y(b)):(i.consume(b),P)}function R(b){return b===62||b===47||De(b)?k(b):e(b)}function V(b){return b===null||b===34||b===39||b===60||b===61||b===96?e(b):b===62||De(b)?k(b):(i.consume(b),V)}function Y(b){return i.exit("htmlTextData"),i.enter("lineEnding"),i.consume(b),i.exit("lineEnding"),Wt(i,q,"linePrefix",n.parser.constructs.disable.null.includes("codeIndented")?void 0:4)}function q(b){return i.enter("htmlTextData"),o(b)}function et(b){return b===62?(i.consume(b),i.exit("htmlTextData"),i.exit("htmlText"),t):e(b)}}const Ta={name:"labelEnd",tokenize:Xv,resolveTo:qv,resolveAll:Wv},Hv={tokenize:jv},Vv={tokenize:Yv},Gv={tokenize:Zv};function Wv(i){let t=-1,e;for(;++t<i.length;)e=i[t][1],(e.type==="labelImage"||e.type==="labelLink"||e.type==="labelEnd")&&(i.splice(t+1,e.type==="labelImage"?4:2),e.type="data",t++);return i}function qv(i,t){let e=i.length,n=0,r,s,a,o;for(;e--;)if(r=i[e][1],s){if(r.type==="link"||r.type==="labelLink"&&r._inactive)break;i[e][0]==="enter"&&r.type==="labelLink"&&(r._inactive=!0)}else if(a){if(i[e][0]==="enter"&&(r.type==="labelImage"||r.type==="labelLink")&&!r._balanced&&(s=e,r.type!=="labelLink")){n=2;break}}else r.type==="labelEnd"&&(a=e);const l={type:i[s][1].type==="labelLink"?"link":"image",start:Object.assign({},i[s][1].start),end:Object.assign({},i[i.length-1][1].end)},c={type:"label",start:Object.assign({},i[s][1].start),end:Object.assign({},i[a][1].end)},u={type:"labelText",start:Object.assign({},i[s+n+2][1].end),end:Object.assign({},i[a-2][1].start)};return o=[["enter",l,t],["enter",c,t]],o=Ie(o,i.slice(s+1,s+n+3)),o=Ie(o,[["enter",u,t]]),o=Ie(o,wa(t.parser.constructs.insideSpan.null,i.slice(s+n+4,a-3),t)),o=Ie(o,[["exit",u,t],i[a-2],i[a-1],["exit",c,t]]),o=Ie(o,i.slice(a+1)),o=Ie(o,[["exit",l,t]]),je(i,s,i.length,o),i}function Xv(i,t,e){const n=this;let r=n.events.length,s,a;for(;r--;)if((n.events[r][1].type==="labelImage"||n.events[r][1].type==="labelLink")&&!n.events[r][1]._balanced){s=n.events[r][1];break}return o;function o(u){return s?s._inactive?c(u):(a=n.parser.defined.includes(mi(n.sliceSerialize({start:s.end,end:n.now()}))),i.enter("labelEnd"),i.enter("labelMarker"),i.consume(u),i.exit("labelMarker"),i.exit("labelEnd"),l):e(u)}function l(u){return u===40?i.attempt(Hv,t,a?t:c)(u):u===91?i.attempt(Vv,t,a?i.attempt(Gv,t,c):c)(u):a?t(u):c(u)}function c(u){return s._balanced=!0,e(u)}}function jv(i,t,e){return n;function n(l){return i.enter("resource"),i.enter("resourceMarker"),i.consume(l),i.exit("resourceMarker"),$i(i,r)}function r(l){return l===41?o(l):Lc(i,s,e,"resourceDestination","resourceDestinationLiteral","resourceDestinationLiteralMarker","resourceDestinationRaw","resourceDestinationString",3)(l)}function s(l){return De(l)?$i(i,a)(l):o(l)}function a(l){return l===34||l===39||l===40?Rc(i,$i(i,o),e,"resourceTitle","resourceTitleMarker","resourceTitleString")(l):o(l)}function o(l){return l===41?(i.enter("resourceMarker"),i.consume(l),i.exit("resourceMarker"),i.exit("resource"),t):e(l)}}function Yv(i,t,e){const n=this;return r;function r(a){return Cc.call(n,i,s,e,"reference","referenceMarker","referenceString")(a)}function s(a){return n.parser.defined.includes(mi(n.sliceSerialize(n.events[n.events.length-1][1]).slice(1,-1)))?t(a):e(a)}}function Zv(i,t,e){return n;function n(s){return i.enter("reference"),i.enter("referenceMarker"),i.consume(s),i.exit("referenceMarker"),r}function r(s){return s===93?(i.enter("referenceMarker"),i.consume(s),i.exit("referenceMarker"),i.exit("reference"),t):e(s)}}const Jv={name:"labelStartImage",tokenize:Qv,resolveAll:Ta.resolveAll};function Qv(i,t,e){const n=this;return r;function r(o){return i.enter("labelImage"),i.enter("labelImageMarker"),i.consume(o),i.exit("labelImageMarker"),s}function s(o){return o===91?(i.enter("labelMarker"),i.consume(o),i.exit("labelMarker"),i.exit("labelImage"),a):e(o)}function a(o){return o===94&&"_hiddenFootnoteSupport"in n.parser.constructs?e(o):t(o)}}const $v={name:"labelStartLink",tokenize:Kv,resolveAll:Ta.resolveAll};function Kv(i,t,e){const n=this;return r;function r(a){return i.enter("labelLink"),i.enter("labelMarker"),i.consume(a),i.exit("labelMarker"),i.exit("labelLink"),s}function s(a){return a===94&&"_hiddenFootnoteSupport"in n.parser.constructs?e(a):t(a)}}const Aa={name:"lineEnding",tokenize:t_};function t_(i,t){return e;function e(n){return i.enter("lineEnding"),i.consume(n),i.exit("lineEnding"),Wt(i,t,"linePrefix")}}const $r={name:"thematicBreak",tokenize:e_};function e_(i,t,e){let n=0,r;return s;function s(l){return i.enter("thematicBreak"),r=l,a(l)}function a(l){return l===r?(i.enter("thematicBreakSequence"),o(l)):ne(l)?Wt(i,a,"whitespace")(l):n<3||l!==null&&!Mt(l)?e(l):(i.exit("thematicBreak"),t(l))}function o(l){return l===r?(i.consume(l),n++,o):(i.exit("thematicBreakSequence"),a(l))}}const be={name:"list",tokenize:r_,continuation:{tokenize:s_},exit:o_},n_={tokenize:l_,partial:!0},i_={tokenize:a_,partial:!0};function r_(i,t,e){const n=this,r=n.events[n.events.length-1];let s=r&&r[1].type==="linePrefix"?r[2].sliceSerialize(r[1],!0).length:0,a=0;return o;function o(d){const p=n.containerState.type||(d===42||d===43||d===45?"listUnordered":"listOrdered");if(p==="listUnordered"?!n.containerState.marker||d===n.containerState.marker:_a(d)){if(n.containerState.type||(n.containerState.type=p,i.enter(p,{_container:!0})),p==="listUnordered")return i.enter("listItemPrefix"),d===42||d===45?i.check($r,e,c)(d):c(d);if(!n.interrupt||d===49)return i.enter("listItemPrefix"),i.enter("listItemValue"),l(d)}return e(d)}function l(d){return _a(d)&&++a<10?(i.consume(d),l):(!n.interrupt||a<2)&&(n.containerState.marker?d===n.containerState.marker:d===41||d===46)?(i.exit("listItemValue"),c(d)):e(d)}function c(d){return i.enter("listItemMarker"),i.consume(d),i.exit("listItemMarker"),n.containerState.marker=n.containerState.marker||d,i.check(Jr,n.interrupt?e:u,i.attempt(n_,f,h))}function u(d){return n.containerState.initialBlankLine=!0,s++,f(d)}function h(d){return ne(d)?(i.enter("listItemPrefixWhitespace"),i.consume(d),i.exit("listItemPrefixWhitespace"),f):e(d)}function f(d){return n.containerState.size=s+n.sliceSerialize(i.exit("listItemPrefix"),!0).length,t(d)}}function s_(i,t,e){const n=this;return n.containerState._closeFlow=void 0,i.check(Jr,r,s);function r(o){return n.containerState.furtherBlankLines=n.containerState.furtherBlankLines||n.containerState.initialBlankLine,Wt(i,t,"listItemIndent",n.containerState.size+1)(o)}function s(o){return n.containerState.furtherBlankLines||!ne(o)?(n.containerState.furtherBlankLines=void 0,n.containerState.initialBlankLine=void 0,a(o)):(n.containerState.furtherBlankLines=void 0,n.containerState.initialBlankLine=void 0,i.attempt(i_,t,a)(o))}function a(o){return n.containerState._closeFlow=!0,n.interrupt=void 0,Wt(i,i.attempt(be,t,e),"linePrefix",n.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(o)}}function a_(i,t,e){const n=this;return Wt(i,r,"listItemIndent",n.containerState.size+1);function r(s){const a=n.events[n.events.length-1];return a&&a[1].type==="listItemIndent"&&a[2].sliceSerialize(a[1],!0).length===n.containerState.size?t(s):e(s)}}function o_(i){i.exit(this.containerState.type)}function l_(i,t,e){const n=this;return Wt(i,r,"listItemPrefixWhitespace",n.parser.constructs.disable.null.includes("codeIndented")?void 0:4+1);function r(s){const a=n.events[n.events.length-1];return!ne(s)&&a&&a[1].type==="listItemPrefixWhitespace"?t(s):e(s)}}const Ic={name:"setextUnderline",tokenize:u_,resolveTo:c_};function c_(i,t){let e=i.length,n,r,s;for(;e--;)if(i[e][0]==="enter"){if(i[e][1].type==="content"){n=e;break}i[e][1].type==="paragraph"&&(r=e)}else i[e][1].type==="content"&&i.splice(e,1),!s&&i[e][1].type==="definition"&&(s=e);const a={type:"setextHeading",start:Object.assign({},i[r][1].start),end:Object.assign({},i[i.length-1][1].end)};return i[r][1].type="setextHeadingText",s?(i.splice(r,0,["enter",a,t]),i.splice(s+1,0,["exit",i[n][1],t]),i[n][1].end=Object.assign({},i[s][1].end)):i[n][1]=a,i.push(["exit",a,t]),i}function u_(i,t,e){const n=this;let r=n.events.length,s,a;for(;r--;)if(n.events[r][1].type!=="lineEnding"&&n.events[r][1].type!=="linePrefix"&&n.events[r][1].type!=="content"){a=n.events[r][1].type==="paragraph";break}return o;function o(u){return!n.parser.lazy[n.now().line]&&(n.interrupt||a)?(i.enter("setextHeadingLine"),i.enter("setextHeadingLineSequence"),s=u,l(u)):e(u)}function l(u){return u===s?(i.consume(u),l):(i.exit("setextHeadingLineSequence"),Wt(i,c,"lineSuffix")(u))}function c(u){return u===null||Mt(u)?(i.exit("setextHeadingLine"),t(u)):e(u)}}const h_={tokenize:d_};function d_(i){const t=this,e=i.attempt(Jr,n,i.attempt(this.parser.constructs.flowInitial,r,Wt(i,i.attempt(this.parser.constructs.flow,r,i.attempt(vv,r)),"linePrefix")));return e;function n(s){if(s===null){i.consume(s);return}return i.enter("lineEndingBlank"),i.consume(s),i.exit("lineEndingBlank"),t.currentConstruct=void 0,e}function r(s){if(s===null){i.consume(s);return}return i.enter("lineEnding"),i.consume(s),i.exit("lineEnding"),t.currentConstruct=void 0,e}}const f_={resolveAll:Fc()},p_=Dc("string"),m_=Dc("text");function Dc(i){return{tokenize:t,resolveAll:Fc(i==="text"?g_:void 0)};function t(e){const n=this,r=this.parser.constructs[i],s=e.attempt(r,a,o);return a;function a(u){return c(u)?s(u):o(u)}function o(u){if(u===null){e.consume(u);return}return e.enter("data"),e.consume(u),l}function l(u){return c(u)?(e.exit("data"),s(u)):(e.consume(u),l)}function c(u){if(u===null)return!0;const h=r[u];let f=-1;if(h)for(;++f<h.length;){const d=h[f];if(!d.previous||d.previous.call(n,n.previous))return!0}return!1}}}function Fc(i){return t;function t(e,n){let r=-1,s;for(;++r<=e.length;)s===void 0?e[r]&&e[r][1].type==="data"&&(s=r,r++):(!e[r]||e[r][1].type!=="data")&&(r!==s+2&&(e[s][1].end=e[r-1][1].end,e.splice(s+2,r-s-2),r=s+2),s=void 0);return i?i(e,n):e}}function g_(i,t){let e=-1;for(;++e<=i.length;)if((e===i.length||i[e][1].type==="lineEnding")&&i[e-1][1].type==="data"){const n=i[e-1][1],r=t.sliceStream(n);let s=r.length,a=-1,o=0,l;for(;s--;){const c=r[s];if(typeof c=="string"){for(a=c.length;c.charCodeAt(a-1)===32;)o++,a--;if(a)break;a=-1}else if(c===-2)l=!0,o++;else if(c!==-1){s++;break}}if(o){const c={type:e===i.length||l||o<2?"lineSuffix":"hardBreakTrailing",start:{line:n.end.line,column:n.end.column-o,offset:n.end.offset-o,_index:n.start._index+s,_bufferIndex:s?a:n.start._bufferIndex+a},end:Object.assign({},n.end)};n.end=Object.assign({},c.start),n.start.offset===n.end.offset?Object.assign(n,c):(i.splice(e,0,["enter",c,t],["exit",c,t]),e+=2)}e++}return i}function x_(i,t,e){let n=Object.assign(e?Object.assign({},e):{line:1,column:1,offset:0},{_index:0,_bufferIndex:-1});const r={},s=[];let a=[],o=[];const l={consume:g,enter:M,exit:C,attempt:D(T),check:D(y),interrupt:D(y,{interrupt:!0})},c={previous:null,code:null,containerState:{},events:[],parser:i,sliceStream:d,sliceSerialize:f,now:p,defineSkip:x,write:h};let u=t.tokenize.call(c,l);return t.resolveAll&&s.push(t),c;function h(k){return a=Ie(a,k),v(),a[a.length-1]!==null?[]:(z(t,0),c.events=wa(s,c.events,c),c.events)}function f(k,Z){return v_(d(k),Z)}function d(k){return y_(a,k)}function p(){return Object.assign({},n)}function x(k){r[k.line]=k.column,X()}function v(){let k;for(;n._index<a.length;){const Z=a[n._index];if(typeof Z=="string")for(k=n._index,n._bufferIndex<0&&(n._bufferIndex=0);n._index===k&&n._bufferIndex<Z.length;)m(Z.charCodeAt(n._bufferIndex));else m(Z)}}function m(k){u=u(k)}function g(k){Mt(k)?(n.line++,n.column=1,n.offset+=k===-3?2:1,X()):k!==-1&&(n.column++,n.offset++),n._bufferIndex<0?n._index++:(n._bufferIndex++,n._bufferIndex===a[n._index].length&&(n._bufferIndex=-1,n._index++)),c.previous=k}function M(k,Z){const N=Z||{};return N.type=k,N.start=p(),c.events.push(["enter",N,c]),o.push(N),N}function C(k){const Z=o.pop();return Z.end=p(),c.events.push(["exit",Z,c]),Z}function T(k,Z){z(k,Z.from)}function y(k,Z){Z.restore()}function D(k,Z){return N;function N(O,P,R){let V,Y,q,et;return Array.isArray(O)?S(O):"tokenize"in O?S([O]):b(O);function b(G){return Bt;function Bt(Et){const mt=Et!==null&&G[Et],ut=Et!==null&&G.null,Tt=[...Array.isArray(mt)?mt:mt?[mt]:[],...Array.isArray(ut)?ut:ut?[ut]:[]];return S(Tt)(Et)}}function S(G){return V=G,Y=0,G.length===0?R:dt(G[Y])}function dt(G){return Bt;function Bt(Et){return et=H(),q=G,G.partial||(c.currentConstruct=G),G.name&&c.parser.constructs.disable.null.includes(G.name)?_t():G.tokenize.call(Z?Object.assign(Object.create(c),Z):c,l,St,_t)(Et)}}function St(G){return k(q,et),P}function _t(G){return et.restore(),++Y<V.length?dt(V[Y]):R}}}function z(k,Z){k.resolveAll&&!s.includes(k)&&s.push(k),k.resolve&&je(c.events,Z,c.events.length-Z,k.resolve(c.events.slice(Z),c)),k.resolveTo&&(c.events=k.resolveTo(c.events,c))}function H(){const k=p(),Z=c.previous,N=c.currentConstruct,O=c.events.length,P=Array.from(o);return{restore:R,from:O};function R(){n=k,c.previous=Z,c.currentConstruct=N,c.events.length=O,o=P,X()}}function X(){n.line in r&&n.column<2&&(n.column=r[n.line],n.offset+=r[n.line]-1)}}function y_(i,t){const e=t.start._index,n=t.start._bufferIndex,r=t.end._index,s=t.end._bufferIndex;let a;return e===r?a=[i[e].slice(n,s)]:(a=i.slice(e,r),n>-1&&(a[0]=a[0].slice(n)),s>0&&a.push(i[r].slice(0,s))),a}function v_(i,t){let e=-1;const n=[];let r;for(;++e<i.length;){const s=i[e];let a;if(typeof s=="string")a=s;else switch(s){case-5:{a="\r";break}case-4:{a=`
`;break}case-3:{a=`\r
`;break}case-2:{a=t?" ":"	";break}case-1:{if(!t&&r)continue;a=" ";break}default:a=String.fromCharCode(s)}r=s===-2,n.push(a)}return n.join("")}const __={[42]:be,[43]:be,[45]:be,[48]:be,[49]:be,[50]:be,[51]:be,[52]:be,[53]:be,[54]:be,[55]:be,[56]:be,[57]:be,[62]:Mc},b_={[91]:Sv},w_={[-2]:Ea,[-1]:Ea,[32]:Ea},M_={[35]:Rv,[42]:$r,[45]:[Ic,$r],[60]:Fv,[61]:Ic,[95]:$r,[96]:Tc,[126]:Tc},S_={[38]:Ec,[92]:Sc},E_={[-5]:Aa,[-4]:Aa,[-3]:Aa,[33]:Jv,[38]:Ec,[42]:Ma,[60]:[ev,Ov],[91]:$v,[92]:[Lv,Sc],[93]:Ta,[95]:Ma,[96]:pv},T_={null:[Ma,f_]},A_={null:[42,95]},L_={null:[]};var C_=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",document:__,contentInitial:b_,flowInitial:w_,flow:M_,string:S_,text:E_,insideSpan:T_,attentionMarkers:A_,disable:L_});function R_(i={}){const t=Uy([C_].concat(i.extensions||[])),e={defined:[],lazy:{},constructs:t,content:n(Yy),document:n(Jy),flow:n(h_),string:n(p_),text:n(m_)};return e;function n(r){return s;function s(a){return x_(e,r,a)}}}const Nc=/[\0\t\n\r]/g;function P_(){let i=1,t="",e=!0,n;return r;function r(s,a,o){const l=[];let c,u,h,f,d;for(s=t+s.toString(a),h=0,t="",e&&(s.charCodeAt(0)===65279&&h++,e=void 0);h<s.length;){if(Nc.lastIndex=h,c=Nc.exec(s),f=c&&c.index!==void 0?c.index:s.length,d=s.charCodeAt(f),!c){t=s.slice(h);break}if(d===10&&h===f&&n)l.push(-3),n=void 0;else switch(n&&(l.push(-5),n=void 0),h<f&&(l.push(s.slice(h,f)),i+=f-h),d){case 0:{l.push(65533),i++;break}case 9:{for(u=Math.ceil(i/4)*4,l.push(-2);i++<u;)l.push(-1);break}case 10:{l.push(-4),i=1;break}default:n=!0,i=1}h=f+1}return o&&(n&&l.push(-5),t&&l.push(t),l.push(null)),l}}function I_(i){for(;!Ac(i););return i}function kc(i,t){const e=Number.parseInt(i,t);return e<9||e===11||e>13&&e<32||e>126&&e<160||e>55295&&e<57344||e>64975&&e<65008||(e&65535)==65535||(e&65535)==65534||e>1114111?"\uFFFD":String.fromCharCode(e)}const D_=/\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;function F_(i){return i.replace(D_,N_)}function N_(i,t,e){if(t)return t;if(e.charCodeAt(0)===35){const r=e.charCodeAt(1),s=r===120||r===88;return kc(e.slice(s?2:1),s?16:10)}return Sa(e)||i}var gi={}.hasOwnProperty;function Kr(i){return!i||typeof i!="object"?"":gi.call(i,"position")||gi.call(i,"type")?Bc(i.position):gi.call(i,"start")||gi.call(i,"end")?Bc(i):gi.call(i,"line")||gi.call(i,"column")?La(i):""}function La(i){return zc(i&&i.line)+":"+zc(i&&i.column)}function Bc(i){return La(i&&i.start)+"-"+La(i&&i.end)}function zc(i){return i&&typeof i=="number"?i:1}const Ca={}.hasOwnProperty,W_=function(i,t,e){return typeof t!="string"&&(e=t,t=void 0),k_(e)(I_(R_(e).document().write(P_()(i,t,!0))))};function k_(i={}){const t=Oc({transforms:[],canContainEols:["emphasis","fragment","heading","paragraph","strong"],enter:{autolink:l(at),autolinkProtocol:Z,autolinkEmail:Z,atxHeading:l(E),blockQuote:l(J),characterEscape:Z,characterReference:Z,codeFenced:l(tt),codeFencedFenceInfo:c,codeFencedFenceMeta:c,codeIndented:l(tt,c),codeText:l(it,c),codeTextData:Z,data:Z,codeFlowValue:Z,definition:l(ht),definitionDestinationString:c,definitionLabelString:c,definitionTitleString:c,emphasis:l(ot),hardBreakEscape:l(w),hardBreakTrailing:l(w),htmlFlow:l(j,c),htmlFlowData:Z,htmlText:l(j,c),htmlTextData:Z,image:l(Q),label:c,link:l(at),listItem:l(yt),listItemValue:x,listOrdered:l(lt,p),listUnordered:l(lt),paragraph:l(gt),reference:G,referenceString:c,resourceDestinationString:c,resourceTitleString:c,setextHeading:l(E),strong:l(Ct),thematicBreak:l(F)},exit:{atxHeading:h(),atxHeadingSequence:z,autolink:h(),autolinkEmail:Tt,autolinkProtocol:ut,blockQuote:h(),characterEscapeValue:N,characterReferenceMarkerHexadecimal:Et,characterReferenceMarkerNumeric:Et,characterReferenceValue:mt,codeFenced:h(M),codeFencedFence:g,codeFencedFenceInfo:v,codeFencedFenceMeta:m,codeFlowValue:N,codeIndented:h(C),codeText:h(Y),codeTextData:N,data:N,definition:h(),definitionDestinationString:D,definitionLabelString:T,definitionTitleString:y,emphasis:h(),hardBreakEscape:h(P),hardBreakTrailing:h(P),htmlFlow:h(R),htmlFlowData:N,htmlText:h(V),htmlTextData:N,image:h(et),label:S,labelText:b,lineEnding:O,link:h(q),listItem:h(),listOrdered:h(),listUnordered:h(),paragraph:h(),referenceString:Bt,resourceDestinationString:dt,resourceTitleString:St,resource:_t,setextHeading:h(k),setextHeadingLineSequence:X,setextHeadingText:H,strong:h(),thematicBreak:h()}},i.mdastExtensions||[]),e={};return n;function n(L){let I={type:"root",children:[]};const $=[I],K=[],Ft=[],Kt={stack:$,tokenStack:K,config:t,enter:u,exit:f,buffer:c,resume:d,setData:s,getData:a};let At=-1;for(;++At<L.length;)if(L[At][1].type==="listOrdered"||L[At][1].type==="listUnordered")if(L[At][0]==="enter")Ft.push(At);else{const $t=Ft.pop();At=r(L,$t,At)}for(At=-1;++At<L.length;){const $t=t[L[At][0]];Ca.call($t,L[At][1].type)&&$t[L[At][1].type].call(Object.assign({sliceSerialize:L[At][2].sliceSerialize},Kt),L[At][1])}if(K.length>0)throw new Error("Cannot close document, a token (`"+K[K.length-1].type+"`, "+Kr({start:K[K.length-1].start,end:K[K.length-1].end})+") is still open");for(I.position={start:o(L.length>0?L[0][1].start:{line:1,column:1,offset:0}),end:o(L.length>0?L[L.length-2][1].end:{line:1,column:1,offset:0})},At=-1;++At<t.transforms.length;)I=t.transforms[At](I)||I;return I}function r(L,I,$){let K=I-1,Ft=-1,Kt=!1,At,$t,Vt,ge;for(;++K<=$;){const kt=L[K];if(kt[1].type==="listUnordered"||kt[1].type==="listOrdered"||kt[1].type==="blockQuote"?(kt[0]==="enter"?Ft++:Ft--,ge=void 0):kt[1].type==="lineEndingBlank"?kt[0]==="enter"&&(At&&!ge&&!Ft&&!Vt&&(Vt=K),ge=void 0):kt[1].type==="linePrefix"||kt[1].type==="listItemValue"||kt[1].type==="listItemMarker"||kt[1].type==="listItemPrefix"||kt[1].type==="listItemPrefixWhitespace"||(ge=void 0),!Ft&&kt[0]==="enter"&&kt[1].type==="listItemPrefix"||Ft===-1&&kt[0]==="exit"&&(kt[1].type==="listUnordered"||kt[1].type==="listOrdered")){if(At){let xi=K;for($t=void 0;xi--;){const Ae=L[xi];if(Ae[1].type==="lineEnding"||Ae[1].type==="lineEndingBlank"){if(Ae[0]==="exit")continue;$t&&(L[$t][1].type="lineEndingBlank",Kt=!0),Ae[1].type="lineEnding",$t=xi}else if(!(Ae[1].type==="linePrefix"||Ae[1].type==="blockQuotePrefix"||Ae[1].type==="blockQuotePrefixWhitespace"||Ae[1].type==="blockQuoteMarker"||Ae[1].type==="listItemIndent"))break}Vt&&(!$t||Vt<$t)&&(At._spread=!0),At.end=Object.assign({},$t?L[$t][1].start:kt[1].end),L.splice($t||K,0,["exit",At,kt[2]]),K++,$++}kt[1].type==="listItemPrefix"&&(At={type:"listItem",_spread:!1,start:Object.assign({},kt[1].start)},L.splice(K,0,["enter",At,kt[2]]),K++,$++,Vt=void 0,ge=!0)}}return L[I][1]._spread=Kt,$}function s(L,I){e[L]=I}function a(L){return e[L]}function o(L){return{line:L.line,column:L.column,offset:L.offset}}function l(L,I){return $;function $(K){u.call(this,L(K),K),I&&I.call(this,K)}}function c(){this.stack.push({type:"fragment",children:[]})}function u(L,I){return this.stack[this.stack.length-1].children.push(L),this.stack.push(L),this.tokenStack.push(I),L.position={start:o(I.start)},L}function h(L){return I;function I($){L&&L.call(this,$),f.call(this,$)}}function f(L){const I=this.stack.pop(),$=this.tokenStack.pop();if($){if($.type!==L.type)throw new Error("Cannot close `"+L.type+"` ("+Kr({start:L.start,end:L.end})+"): a different token (`"+$.type+"`, "+Kr({start:$.start,end:$.end})+") is open")}else throw new Error("Cannot close `"+L.type+"` ("+Kr({start:L.start,end:L.end})+"): it\u2019s not open");return I.position.end=o(L.end),I}function d(){return Oy(this.stack.pop())}function p(){s("expectingFirstListItemValue",!0)}function x(L){if(a("expectingFirstListItemValue")){const I=this.stack[this.stack.length-2];I.start=Number.parseInt(this.sliceSerialize(L),10),s("expectingFirstListItemValue")}}function v(){const L=this.resume(),I=this.stack[this.stack.length-1];I.lang=L}function m(){const L=this.resume(),I=this.stack[this.stack.length-1];I.meta=L}function g(){a("flowCodeInside")||(this.buffer(),s("flowCodeInside",!0))}function M(){const L=this.resume(),I=this.stack[this.stack.length-1];I.value=L.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g,""),s("flowCodeInside")}function C(){const L=this.resume(),I=this.stack[this.stack.length-1];I.value=L.replace(/(\r?\n|\r)$/g,"")}function T(L){const I=this.resume(),$=this.stack[this.stack.length-1];$.label=I,$.identifier=mi(this.sliceSerialize(L)).toLowerCase()}function y(){const L=this.resume(),I=this.stack[this.stack.length-1];I.title=L}function D(){const L=this.resume(),I=this.stack[this.stack.length-1];I.url=L}function z(L){const I=this.stack[this.stack.length-1];if(!I.depth){const $=this.sliceSerialize(L).length;I.depth=$}}function H(){s("setextHeadingSlurpLineEnding",!0)}function X(L){const I=this.stack[this.stack.length-1];I.depth=this.sliceSerialize(L).charCodeAt(0)===61?1:2}function k(){s("setextHeadingSlurpLineEnding")}function Z(L){const I=this.stack[this.stack.length-1];let $=I.children[I.children.length-1];(!$||$.type!=="text")&&($=ct(),$.position={start:o(L.start)},I.children.push($)),this.stack.push($)}function N(L){const I=this.stack.pop();I.value+=this.sliceSerialize(L),I.position.end=o(L.end)}function O(L){const I=this.stack[this.stack.length-1];if(a("atHardBreak")){const $=I.children[I.children.length-1];$.position.end=o(L.end),s("atHardBreak");return}!a("setextHeadingSlurpLineEnding")&&t.canContainEols.includes(I.type)&&(Z.call(this,L),N.call(this,L))}function P(){s("atHardBreak",!0)}function R(){const L=this.resume(),I=this.stack[this.stack.length-1];I.value=L}function V(){const L=this.resume(),I=this.stack[this.stack.length-1];I.value=L}function Y(){const L=this.resume(),I=this.stack[this.stack.length-1];I.value=L}function q(){const L=this.stack[this.stack.length-1];a("inReference")?(L.type+="Reference",L.referenceType=a("referenceType")||"shortcut",delete L.url,delete L.title):(delete L.identifier,delete L.label),s("referenceType")}function et(){const L=this.stack[this.stack.length-1];a("inReference")?(L.type+="Reference",L.referenceType=a("referenceType")||"shortcut",delete L.url,delete L.title):(delete L.identifier,delete L.label),s("referenceType")}function b(L){const I=this.stack[this.stack.length-2],$=this.sliceSerialize(L);I.label=F_($),I.identifier=mi($).toLowerCase()}function S(){const L=this.stack[this.stack.length-1],I=this.resume(),$=this.stack[this.stack.length-1];s("inReference",!0),$.type==="link"?$.children=L.children:$.alt=I}function dt(){const L=this.resume(),I=this.stack[this.stack.length-1];I.url=L}function St(){const L=this.resume(),I=this.stack[this.stack.length-1];I.title=L}function _t(){s("inReference")}function G(){s("referenceType","collapsed")}function Bt(L){const I=this.resume(),$=this.stack[this.stack.length-1];$.label=I,$.identifier=mi(this.sliceSerialize(L)).toLowerCase(),s("referenceType","full")}function Et(L){s("characterReferenceType",L.type)}function mt(L){const I=this.sliceSerialize(L),$=a("characterReferenceType");let K;$?(K=kc(I,$==="characterReferenceMarkerNumeric"?10:16),s("characterReferenceType")):K=Sa(I);const Ft=this.stack.pop();Ft.value+=K,Ft.position.end=o(L.end)}function ut(L){N.call(this,L);const I=this.stack[this.stack.length-1];I.url=this.sliceSerialize(L)}function Tt(L){N.call(this,L);const I=this.stack[this.stack.length-1];I.url="mailto:"+this.sliceSerialize(L)}function J(){return{type:"blockquote",children:[]}}function tt(){return{type:"code",lang:null,meta:null,value:""}}function it(){return{type:"inlineCode",value:""}}function ht(){return{type:"definition",identifier:"",label:null,title:null,url:""}}function ot(){return{type:"emphasis",children:[]}}function E(){return{type:"heading",depth:void 0,children:[]}}function w(){return{type:"break"}}function j(){return{type:"html",value:""}}function Q(){return{type:"image",title:null,url:"",alt:null}}function at(){return{type:"link",title:null,url:"",children:[]}}function lt(L){return{type:"list",ordered:L.type==="listOrdered",start:null,spread:L._spread,children:[]}}function yt(L){return{type:"listItem",spread:L._spread,checked:null,children:[]}}function gt(){return{type:"paragraph",children:[]}}function Ct(){return{type:"strong",children:[]}}function ct(){return{type:"text",value:""}}function F(){return{type:"thematicBreak"}}}function Oc(i,t){let e=-1;for(;++e<t.length;){const n=t[e];Array.isArray(n)?Oc(i,n):B_(i,n)}return i}function B_(i,t){let e;for(e in t)if(Ca.call(t,e)){const n=e==="canContainEols"||e==="transforms",s=(Ca.call(i,e)?i[e]:void 0)||(i[e]=n?[]:{}),a=t[e];a&&(n?i[e]=[...s,...a]:Object.assign(s,a))}}export{Pi as B,wt as a,me as b,er as c,Pt as d,Zt as e,vy as f,Yi as g,ga as h,Yr as i,Jt as j,Zi as k,ac as l,va as m,sc as n,G_ as o,W_ as p,H_ as q,U_ as r,O_ as s,tu as t,Kc as u,V_ as v};
